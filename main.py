{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "939a8258-1294-4b7b-b485-3501c52f7794",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-12-24 07:19:24.300983: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.\n",
      "2023-12-24 07:19:24.320810: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
      "2023-12-24 07:19:24.320826: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
      "2023-12-24 07:19:24.321646: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
      "2023-12-24 07:19:24.325512: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.\n",
      "To enable the following instructions: AVX2 AVX512F AVX512_VNNI AVX512_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.\n",
      "2023-12-24 07:19:24.649084: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT\n"
     ]
    }
   ],
   "source": [
    "import tensorflow as tf\n",
    "import tensorrt\n",
    "import torch\n",
    "from tensorflow.keras.models import Model\n",
    "from tensorflow.keras.layers import GlobalAveragePooling2D, Dense\n",
    "from tensorflow.keras.optimizers import Adam\n",
    "from tensorflow.keras.applications import VGG16, ResNet50, InceptionV3, MobileNetV2\n",
    "from tensorflow.keras.preprocessing.image import ImageDataGenerator\n",
    "from sklearn.metrics import confusion_matrix, classification_report\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c2687827-abce-4705-ad83-e96a3421767f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define your data directories\n",
    "train_dir = 'Original and counterfeit Colombian peso banknotes/COP_banknote/ds1/Train'\n",
    "test_dir = 'Original and counterfeit Colombian peso banknotes/COP_banknote/ds1/Test'\n",
    "validation_dir = 'Original and counterfeit Colombian peso banknotes/COP_banknote/ds1/Validation'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "cb3c0fa1-4c18-4a19-8e1c-9c647fa26572",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Hyperparameters\n",
    "batch_size = 24\n",
    "num_epochs = 1\n",
    "num_classes = 12"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "814ec5db-7766-410e-afdb-be781fff0ced",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Data Augmentation\n",
    "train_datagen = ImageDataGenerator(\n",
    "    rescale=1./255,\n",
    "    rotation_range=40,\n",
    "    width_shift_range=0.2,\n",
    "    height_shift_range=0.2,\n",
    "    shear_range=0.2,\n",
    "    zoom_range=0.2,\n",
    "    horizontal_flip=True,\n",
    "    fill_mode='nearest'\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "7ae9be98-f43c-4d9f-96b9-1963360cf04d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define a function to build and train a model\n",
    "def build_and_train_model(base_model, model_name, train_dir, validation_dir, test_dir, input_shape):\n",
    "    x = base_model.output\n",
    "    x = GlobalAveragePooling2D()(x)\n",
    "    x = Dense(1024, activation='relu')(x)\n",
    "    predictions = Dense(num_classes, activation='softmax')(x)\n",
    "\n",
    "    model = Model(inputs=base_model.input, outputs=predictions)\n",
    "\n",
    "    # Freeze the layers from the base model\n",
    "    for layer in base_model.layers:\n",
    "        layer.trainable = False\n",
    "\n",
    "    model.compile(optimizer=Adam(learning_rate=0.001), loss='categorical_crossentropy', metrics=['accuracy'])\n",
    "\n",
    "    print(f\"Training {model_name}...\")\n",
    "\n",
    "    train_generator = create_data_generator(train_dir, train_datagen, input_shape)\n",
    "    validation_generator = create_data_generator(validation_dir, ImageDataGenerator(rescale=1./255), input_shape)\n",
    "    test_generator = create_data_generator(test_dir, ImageDataGenerator(rescale=1./255), input_shape)\n",
    "\n",
    "    history = model.fit(\n",
    "        train_generator,\n",
    "        steps_per_epoch=len(train_generator),\n",
    "        validation_data=validation_generator,\n",
    "        validation_steps=len(validation_generator),\n",
    "        epochs=num_epochs\n",
    "    )\n",
    "\n",
    "    # Evaluate on test data\n",
    "    test_loss, test_acc = model.evaluate(test_generator, steps=len(test_generator))\n",
    "    print(f\"{model_name} Test accuracy: {test_acc * 100:.2f}%\")\n",
    "\n",
    "    return model, test_generator, history"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "203ffd50-309c-4ead-974b-5229de4994ac",
   "metadata": {},
   "outputs": [],
   "source": [
    "def create_data_generator(data_dir, data_generator, input_shape):\n",
    "    return data_generator.flow_from_directory(\n",
    "        data_dir,\n",
    "        target_size=input_shape,\n",
    "        batch_size=batch_size,\n",
    "        class_mode='categorical',\n",
    "        classes=['100k', '100kf', '10k', '10kf', '50k', '50kf', '5k', '5kf', '20k', '20kf', '2k', '2kf']\n",
    "    )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "e678117e-974d-46a5-ba42-e4330bf75490",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-12-24 07:19:26.213071: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:901] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\n",
      "2023-12-24 07:19:26.214199: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:901] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\n",
      "2023-12-24 07:19:26.214394: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:901] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\n",
      "2023-12-24 07:19:26.216649: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:901] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\n",
      "2023-12-24 07:19:26.216846: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:901] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\n",
      "2023-12-24 07:19:26.217007: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:901] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\n",
      "2023-12-24 07:19:26.282294: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:901] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\n",
      "2023-12-24 07:19:26.282414: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:901] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\n",
      "2023-12-24 07:19:26.282511: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:901] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\n",
      "2023-12-24 07:19:26.282588: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1929] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 22155 MB memory:  -> device: 0, name: NVIDIA GeForce RTX 4090, pci bus id: 0000:01:00.0, compute capability: 8.9\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training VGG16...\n",
      "Found 10657 images belonging to 12 classes.\n",
      "Found 3595 images belonging to 12 classes.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-12-24 07:19:27.513093: I external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:454] Loaded cuDNN version 8904\n",
      "2023-12-24 07:19:27.609726: I external/local_tsl/tsl/platform/default/subprocess.cc:304] Start cannot spawn child process: No such file or directory\n",
      "2023-12-24 07:19:28.091115: I external/local_tsl/tsl/platform/default/subprocess.cc:304] Start cannot spawn child process: No such file or directory\n",
      "2023-12-24 07:19:28.126743: I external/local_xla/xla/service/service.cc:168] XLA service 0x7fbf44d1dd10 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:\n",
      "2023-12-24 07:19:28.126758: I external/local_xla/xla/service/service.cc:176]   StreamExecutor device (0): NVIDIA GeForce RTX 4090, Compute Capability 8.9\n",
      "2023-12-24 07:19:28.132879: I tensorflow/compiler/mlir/tensorflow/utils/dump_mlir_util.cc:269] disabling MLIR crash reproducer, set env var `MLIR_CRASH_REPRODUCER_DIRECTORY` to enable.\n",
      "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
      "I0000 00:00:1703382568.180263    4560 device_compiler.h:186] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "445/445 [==============================] - 49s 108ms/step - loss: 1.3329 - accuracy: 0.5127 - val_loss: 0.7415 - val_accuracy: 0.7997\n",
      "Found 3599 images belonging to 12 classes.\n",
      "150/150 [==============================] - 5s 34ms/step - loss: 0.7353 - accuracy: 0.8030\n",
      "VGG16 Test accuracy: 80.30%\n"
     ]
    }
   ],
   "source": [
    "# Load the pre-trained VGG16 model weights\n",
    "vgg16_base_model = VGG16(weights='imagenet', include_top=False, input_shape=(224, 224, 3))\n",
    "\n",
    "# Fine-tune the model on the banknote detection dataset by replacing the fully connected layers with task-specific layers\n",
    "vgg16_x = vgg16_base_model.output\n",
    "vgg16_x = GlobalAveragePooling2D()(vgg16_x)\n",
    "vgg16_x = Dense(1024, activation='relu')(vgg16_x)\n",
    "vgg16_predictions = Dense(num_classes, activation='softmax')(vgg16_x)\n",
    "vgg16_model = Model(inputs=vgg16_base_model.input, outputs=vgg16_predictions)\n",
    "\n",
    "# Freeze the layers from the base model\n",
    "for layer in vgg16_base_model.layers:\n",
    "    layer.trainable = False\n",
    "\n",
    "# Train the model using backpropagation and optimize the model parameters using gradient descent\n",
    "vgg16_model.compile(optimizer=Adam(learning_rate=0.001), loss='categorical_crossentropy', metrics=['accuracy'])\n",
    "\n",
    "print(\"Training VGG16...\")\n",
    "vgg16_train_generator = create_data_generator(train_dir, train_datagen, (224, 224))\n",
    "vgg16_validation_generator = create_data_generator(validation_dir, ImageDataGenerator(rescale=1./255), (224, 224))\n",
    "\n",
    "vgg16_history = vgg16_model.fit(\n",
    "    vgg16_train_generator,\n",
    "    steps_per_epoch=len(vgg16_train_generator),\n",
    "    validation_data=vgg16_validation_generator,\n",
    "    validation_steps=len(vgg16_validation_generator),\n",
    "    epochs=num_epochs\n",
    ")\n",
    "\n",
    "# Evaluate the performance of VGG16 on the original and counterfeit banknote detection tasks\n",
    "vgg16_test_generator = create_data_generator(test_dir, ImageDataGenerator(rescale=1./255), (224, 224))\n",
    "vgg16_test_loss, vgg16_test_acc = vgg16_model.evaluate(vgg16_test_generator, steps=len(vgg16_test_generator))\n",
    "print(f\"VGG16 Test accuracy: {vgg16_test_acc * 100:.2f}%\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "a6de434c-dd0d-43ae-afcf-e6ea10226d28",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training ResNet50...\n",
      "Found 10657 images belonging to 12 classes.\n",
      "Found 3595 images belonging to 12 classes.\n",
      "445/445 [==============================] - 46s 100ms/step - loss: 2.1098 - accuracy: 0.1682 - val_loss: 1.8569 - val_accuracy: 0.2111\n",
      "Found 3599 images belonging to 12 classes.\n",
      "150/150 [==============================] - 3s 20ms/step - loss: 1.8571 - accuracy: 0.2098\n",
      "ResNet50 Test accuracy: 20.98%\n"
     ]
    }
   ],
   "source": [
    "# Load the pre-trained ResNet50 model weights\n",
    "resnet50_base_model = ResNet50(weights='imagenet', include_top=False, input_shape=(224, 224, 3))\n",
    "\n",
    "# Fine-tune the model on the banknote detection dataset by replacing the fully connected layers with task-specific layers\n",
    "resnet50_x = resnet50_base_model.output\n",
    "resnet50_x = GlobalAveragePooling2D()(resnet50_x)\n",
    "resnet50_x = Dense(1024, activation='relu')(resnet50_x)\n",
    "resnet50_predictions = Dense(num_classes, activation='softmax')(resnet50_x)\n",
    "resnet50_model = Model(inputs=resnet50_base_model.input, outputs=resnet50_predictions)\n",
    "\n",
    "# Freeze the layers from the base model\n",
    "for layer in resnet50_base_model.layers:\n",
    "    layer.trainable = False\n",
    "\n",
    "# Train the model using backpropagation and optimize the model parameters using gradient descent\n",
    "resnet50_model.compile(optimizer=Adam(learning_rate=0.001), loss='categorical_crossentropy', metrics=['accuracy'])\n",
    "\n",
    "print(\"Training ResNet50...\")\n",
    "resnet50_train_generator = create_data_generator(train_dir, train_datagen, (224, 224))\n",
    "resnet50_validation_generator = create_data_generator(validation_dir, ImageDataGenerator(rescale=1./255), (224, 224))\n",
    "\n",
    "resnet50_history = resnet50_model.fit(\n",
    "    resnet50_train_generator,\n",
    "    steps_per_epoch=len(resnet50_train_generator),\n",
    "    validation_data=resnet50_validation_generator,\n",
    "    validation_steps=len(resnet50_validation_generator),\n",
    "    epochs=num_epochs\n",
    ")\n",
    "\n",
    "# Evaluate the performance of ResNet50 on the original and counterfeit banknote detection tasks\n",
    "resnet50_test_generator = create_data_generator(test_dir, ImageDataGenerator(rescale=1./255), (224, 224))\n",
    "resnet50_test_loss, resnet50_test_acc = resnet50_model.evaluate(resnet50_test_generator, steps=len(resnet50_test_generator))\n",
    "print(f\"ResNet50 Test accuracy: {resnet50_test_acc * 100:.2f}%\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "1b12d922-2b6a-4c17-84ce-c088bcdc6350",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training InceptionV3...\n",
      "Found 10657 images belonging to 12 classes.\n",
      "Found 3595 images belonging to 12 classes.\n",
      "445/445 [==============================] - 74s 161ms/step - loss: nan - accuracy: 0.6762 - val_loss: nan - val_accuracy: 0.0759\n",
      "Found 3599 images belonging to 12 classes.\n",
      "150/150 [==============================] - 4s 27ms/step - loss: nan - accuracy: 0.0861\n",
      "InceptionV3 Test accuracy: 8.61%\n"
     ]
    }
   ],
   "source": [
    "# Load the pre-trained InceptionV3 model weights\n",
    "inceptionv3_base_model = InceptionV3(weights='imagenet', include_top=False, input_shape=(299, 299, 3))\n",
    "\n",
    "# Fine-tune the model on the banknote detection dataset by replacing the fully connected layers with task-specific layers\n",
    "inceptionv3_x = inceptionv3_base_model.output\n",
    "inceptionv3_x = GlobalAveragePooling2D()(inceptionv3_x)\n",
    "inceptionv3_x = Dense(1024, activation='relu')(inceptionv3_x)\n",
    "inceptionv3_predictions = Dense(num_classes, activation='softmax')(inceptionv3_x)\n",
    "inceptionv3_model = Model(inputs=inceptionv3_base_model.input, outputs=inceptionv3_predictions)\n",
    "\n",
    "# Freeze the layers from the base model\n",
    "for layer in inceptionv3_base_model.layers:\n",
    "    layer.trainable = False\n",
    "\n",
    "# Train the model using backpropagation and optimize the model parameters using gradient descent\n",
    "inceptionv3_model.compile(optimizer=Adam(learning_rate=0.001), loss='categorical_crossentropy', metrics=['accuracy'])\n",
    "\n",
    "print(\"Training InceptionV3...\")\n",
    "inceptionv3_train_generator = create_data_generator(train_dir, train_datagen, (299, 299))\n",
    "inceptionv3_validation_generator = create_data_generator(validation_dir, ImageDataGenerator(rescale=1./255), (299, 299))\n",
    "\n",
    "inceptionv3_history = inceptionv3_model.fit(\n",
    "    inceptionv3_train_generator,\n",
    "    steps_per_epoch=len(inceptionv3_train_generator),\n",
    "    validation_data=inceptionv3_validation_generator,\n",
    "    validation_steps=len(inceptionv3_validation_generator),\n",
    "    epochs=num_epochs\n",
    ")\n",
    "\n",
    "# Evaluate the performance of InceptionV3 on the original and counterfeit banknote detection tasks\n",
    "inceptionv3_test_generator = create_data_generator(test_dir, ImageDataGenerator(rescale=1./255), (299, 299))\n",
    "inceptionv3_test_loss, inceptionv3_test_acc = inceptionv3_model.evaluate(inceptionv3_test_generator, steps=len(inceptionv3_test_generator))\n",
    "print(f\"InceptionV3 Test accuracy: {inceptionv3_test_acc * 100:.2f}%\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "baeeeb86-c4dc-4b47-8ce9-4c80815b607f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training MobileNetV2...\n",
      "Found 10657 images belonging to 12 classes.\n",
      "Found 3595 images belonging to 12 classes.\n",
      "445/445 [==============================] - 45s 100ms/step - loss: 0.4859 - accuracy: 0.8373 - val_loss: 0.1206 - val_accuracy: 0.9658\n",
      "Found 3599 images belonging to 12 classes.\n",
      "150/150 [==============================] - 3s 17ms/step - loss: 0.1145 - accuracy: 0.9692\n",
      "MobileNetV2 Test accuracy: 96.92%\n"
     ]
    }
   ],
   "source": [
    "# Load the pre-trained InceptionV3 model weights\n",
    "mobilenetv2_base_model = MobileNetV2(weights='imagenet', include_top=False, input_shape=(224, 224, 3))\n",
    "\n",
    "# Fine-tune the model on the banknote detection dataset by replacing the fully connected layers with task-specific layers\n",
    "mobilenetv2_x = mobilenetv2_base_model.output\n",
    "mobilenetv2_x = GlobalAveragePooling2D()(mobilenetv2_x)\n",
    "mobilenetv2_x = Dense(1024, activation='relu')(mobilenetv2_x)\n",
    "mobilenetv2_predictions = Dense(num_classes, activation='softmax')(mobilenetv2_x)\n",
    "mobilenetv2_model = Model(inputs=mobilenetv2_base_model.input, outputs=mobilenetv2_predictions)\n",
    "\n",
    "# Freeze the layers from the base model\n",
    "for layer in mobilenetv2_base_model.layers:\n",
    "    layer.trainable = False\n",
    "\n",
    "# Train the model using backpropagation and optimize the model parameters using gradient descent\n",
    "mobilenetv2_model.compile(optimizer=Adam(learning_rate=0.001), loss='categorical_crossentropy', metrics=['accuracy'])\n",
    "\n",
    "print(\"Training MobileNetV2...\")\n",
    "mobilenetv2_train_generator = create_data_generator(train_dir, train_datagen, (224, 224))\n",
    "mobilenetv2_validation_generator = create_data_generator(validation_dir, ImageDataGenerator(rescale=1./255), (224, 224))\n",
    "\n",
    "mobilenetv2_history = mobilenetv2_model.fit(\n",
    "    mobilenetv2_train_generator,\n",
    "    steps_per_epoch=len(mobilenetv2_train_generator),\n",
    "    validation_data=mobilenetv2_validation_generator,\n",
    "    validation_steps=len(mobilenetv2_validation_generator),\n",
    "    epochs=num_epochs\n",
    ")\n",
    "\n",
    "# Evaluate the performance of MobileNetV2 on the original and counterfeit banknote detection tasks\n",
    "mobilenetv2_test_generator = create_data_generator(test_dir, ImageDataGenerator(rescale=1./255), (224, 224))\n",
    "mobilenetv2_test_loss, mobilenetv2_test_acc = mobilenetv2_model.evaluate(mobilenetv2_test_generator, steps=len(mobilenetv2_test_generator))\n",
    "print(f\"MobileNetV2 Test accuracy: {mobilenetv2_test_acc * 100:.2f}%\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "a1d5947b-0960-4d8f-9b22-d01c3680c872",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Comparision of main-v1, main-v2 and main-v3\n",
    "#Here will be Accuracy comparison, Confusion matrix, Classification report (precision, recall, and F1-score), Feature importance analysis.\n",
    "#Plot accuracy, Loss curve analysis, Heatmaps, Visualize misclassified examples and correctly classified examples, T-SNE visualization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "c6eb0329-ad12-4b3e-b715-fb5f32dd20c4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+-------------+-----------------+\n",
      "| Model       | Test Accuracy   |\n",
      "+=============+=================+\n",
      "| VGG16       | 80.30%          |\n",
      "+-------------+-----------------+\n",
      "| ResNet50    | 20.98%          |\n",
      "+-------------+-----------------+\n",
      "| InceptionV3 | 8.61%           |\n",
      "+-------------+-----------------+\n",
      "| MobileNetV2 | 96.92%          |\n",
      "+-------------+-----------------+\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "from tabulate import tabulate\n",
    "\n",
    "# Compare the test accuracy scores of the three models\n",
    "models = ['VGG16', 'ResNet50', 'InceptionV3', 'MobileNetV2']\n",
    "test_accuracies = [vgg16_test_acc, resnet50_test_acc, inceptionv3_test_acc, mobilenetv2_test_acc]\n",
    "\n",
    "# Print the test accuracy scores in a table\n",
    "table_data = list(zip(models, [f\"{accuracy * 100:.2f}%\" for accuracy in test_accuracies]))\n",
    "table_headers = [\"Model\", \"Test Accuracy\"]\n",
    "\n",
    "# Print table using tabulate\n",
    "print(tabulate(table_data, headers=table_headers, tablefmt=\"grid\"))\n",
    "\n",
    "# Plot the test accuracy comparison\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.bar(models, test_accuracies, color=['blue', 'orange', 'green', 'red'])\n",
    "plt.title('Test Accuracy Comparison of Models')\n",
    "plt.xlabel('Models')\n",
    "plt.ylabel('Test Accuracy')\n",
    "plt.ylim(0, 1)  # Set y-axis limit to better visualize differences\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "2b05c782-3b9d-4401-8157-27bec171fa1d",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "150/150 [==============================] - 3s 19ms/step\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "150/150 [==============================] - 3s 19ms/step\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "150/150 [==============================] - 4s 24ms/step\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "150/150 [==============================] - 3s 19ms/step\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.metrics import confusion_matrix\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "def plot_confusion_matrix(model, test_generator, class_labels, model_name):\n",
    "    # Generate predictions\n",
    "    predictions = model.predict(test_generator)\n",
    "    predicted_classes = np.argmax(predictions, axis=1)\n",
    "\n",
    "    # Get true classes\n",
    "    true_classes = test_generator.classes\n",
    "\n",
    "    # Generate confusion matrix\n",
    "    cm = confusion_matrix(true_classes, predicted_classes)\n",
    "\n",
    "    # Plot confusion matrix using seaborn heatmap\n",
    "    plt.figure(figsize=(8, 6))\n",
    "    sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=class_labels, yticklabels=class_labels)\n",
    "    plt.title(f'Confusion Matrix - {model_name}')\n",
    "    plt.xlabel('Predicted')\n",
    "    plt.ylabel('True')\n",
    "    plt.show()\n",
    "\n",
    "# ... (previous code)\n",
    "\n",
    "# Define class labels (replace with your actual class labels)\n",
    "class_labels = ['100k', '100kf', '10k', '10kf', '50k', '50kf', '5k', '5kf', '20k', '20kf', '2k', '2kf']\n",
    "\n",
    "# Plot confusion matrix for VGG16\n",
    "plot_confusion_matrix(vgg16_model, vgg16_test_generator, class_labels, model_name='VGG16')\n",
    "\n",
    "# Plot confusion matrix for ResNet50\n",
    "plot_confusion_matrix(resnet50_model, resnet50_test_generator, class_labels, model_name='ResNet50')\n",
    "\n",
    "# Plot confusion matrix for InceptionV3\n",
    "plot_confusion_matrix(inceptionv3_model, inceptionv3_test_generator, class_labels, model_name='InceptionV3')\n",
    "\n",
    "# Plot confusion matrix for MobileNetV2\n",
    "plot_confusion_matrix(mobilenetv2_model, mobilenetv2_test_generator, class_labels, model_name='MobileNetV2')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "c1983fc9-4e8f-404a-b4ab-003a11db1d3b",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "150/150 [==============================] - 3s 19ms/step\n",
      "Classification Report for VGG16:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.12      0.08      0.10       310\n",
      "           1       0.11      0.08      0.09       319\n",
      "           2       0.07      0.11      0.09       305\n",
      "           3       0.07      0.07      0.07       320\n",
      "           4       0.06      0.05      0.06       304\n",
      "           5       0.08      0.10      0.09       320\n",
      "           6       0.09      0.12      0.10       292\n",
      "           7       0.09      0.08      0.09       320\n",
      "           8       0.03      0.04      0.03       198\n",
      "           9       0.08      0.08      0.08       320\n",
      "          10       0.06      0.02      0.03       271\n",
      "          11       0.08      0.08      0.08       320\n",
      "\n",
      "    accuracy                           0.08      3599\n",
      "   macro avg       0.08      0.08      0.07      3599\n",
      "weighted avg       0.08      0.08      0.08      3599\n",
      "\n",
      "150/150 [==============================] - 3s 19ms/step\n",
      "Classification Report for ResNet50:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.08      0.02      0.03       310\n",
      "           1       0.00      0.00      0.00       319\n",
      "           2       0.00      0.00      0.00       305\n",
      "           3       0.00      0.00      0.00       320\n",
      "           4       0.08      0.43      0.14       304\n",
      "           5       0.10      0.26      0.14       320\n",
      "           6       0.00      0.00      0.00       292\n",
      "           7       0.09      0.18      0.12       320\n",
      "           8       0.00      0.00      0.00       198\n",
      "           9       0.09      0.12      0.10       320\n",
      "          10       0.00      0.00      0.00       271\n",
      "          11       0.00      0.00      0.00       320\n",
      "\n",
      "    accuracy                           0.09      3599\n",
      "   macro avg       0.04      0.08      0.04      3599\n",
      "weighted avg       0.04      0.09      0.05      3599\n",
      "\n",
      "  2/150 [..............................] - ETA: 7s"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/dharsan/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1469: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n",
      "/home/dharsan/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1469: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n",
      "/home/dharsan/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1469: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "150/150 [==============================] - 4s 25ms/step\n",
      "Classification Report for InceptionV3:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.09      1.00      0.16       310\n",
      "           1       0.00      0.00      0.00       319\n",
      "           2       0.00      0.00      0.00       305\n",
      "           3       0.00      0.00      0.00       320\n",
      "           4       0.00      0.00      0.00       304\n",
      "           5       0.00      0.00      0.00       320\n",
      "           6       0.00      0.00      0.00       292\n",
      "           7       0.00      0.00      0.00       320\n",
      "           8       0.00      0.00      0.00       198\n",
      "           9       0.00      0.00      0.00       320\n",
      "          10       0.00      0.00      0.00       271\n",
      "          11       0.00      0.00      0.00       320\n",
      "\n",
      "    accuracy                           0.09      3599\n",
      "   macro avg       0.01      0.08      0.01      3599\n",
      "weighted avg       0.01      0.09      0.01      3599\n",
      "\n",
      "  8/150 [>.............................] - ETA: 2s"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/dharsan/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1469: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n",
      "/home/dharsan/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1469: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n",
      "/home/dharsan/.local/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1469: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n",
      "  _warn_prf(average, modifier, msg_start, len(result))\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "150/150 [==============================] - 3s 18ms/step\n",
      "Classification Report for MobileNetV2:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.08      0.08      0.08       310\n",
      "           1       0.12      0.13      0.12       319\n",
      "           2       0.08      0.08      0.08       305\n",
      "           3       0.10      0.10      0.10       320\n",
      "           4       0.07      0.07      0.07       304\n",
      "           5       0.10      0.10      0.10       320\n",
      "           6       0.08      0.08      0.08       292\n",
      "           7       0.10      0.10      0.10       320\n",
      "           8       0.06      0.06      0.06       198\n",
      "           9       0.07      0.07      0.07       320\n",
      "          10       0.08      0.08      0.08       271\n",
      "          11       0.10      0.09      0.09       320\n",
      "\n",
      "    accuracy                           0.09      3599\n",
      "   macro avg       0.09      0.09      0.09      3599\n",
      "weighted avg       0.09      0.09      0.09      3599\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import classification_report\n",
    "import numpy as np\n",
    "\n",
    "# Function to get predictions and true labels\n",
    "def get_predictions_and_labels(model, test_generator):\n",
    "    predictions = model.predict(test_generator, steps=len(test_generator))\n",
    "    predicted_labels = np.argmax(predictions, axis=1)\n",
    "    true_labels = test_generator.classes\n",
    "    return predicted_labels, true_labels\n",
    "\n",
    "# Function to print classification report\n",
    "def print_classification_report(model_name, predicted_labels, true_labels):\n",
    "    print(f\"Classification Report for {model_name}:\")\n",
    "    print(classification_report(true_labels, predicted_labels))\n",
    "\n",
    "# Get predictions and true labels for VGG16\n",
    "vgg16_predicted_labels, vgg16_true_labels = get_predictions_and_labels(vgg16_model, vgg16_test_generator)\n",
    "print_classification_report(\"VGG16\", vgg16_predicted_labels, vgg16_true_labels)\n",
    "\n",
    "# Get predictions and true labels for ResNet50\n",
    "resnet50_predicted_labels, resnet50_true_labels = get_predictions_and_labels(resnet50_model, resnet50_test_generator)\n",
    "print_classification_report(\"ResNet50\", resnet50_predicted_labels, resnet50_true_labels)\n",
    "\n",
    "# Get predictions and true labels for InceptionV3\n",
    "inceptionv3_predicted_labels, inceptionv3_true_labels = get_predictions_and_labels(inceptionv3_model, inceptionv3_test_generator)\n",
    "print_classification_report(\"InceptionV3\", inceptionv3_predicted_labels, inceptionv3_true_labels)\n",
    "\n",
    "# Get predictions and true labels for MobileNetV2\n",
    "mobilenetv2_predicted_labels, mobilenetv2_true_labels = get_predictions_and_labels(mobilenetv2_model, mobilenetv2_test_generator)\n",
    "print_classification_report(\"MobileNetV2\", mobilenetv2_predicted_labels, mobilenetv2_true_labels)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "4a7bab00-63f3-422f-ae72-66d3ce79f3c9",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    " # Loss values for VGG16, ResNet50, InceptionV3, and MobileNetV2\n",
    "vgg16_loss = [1.3359, 0.7784]\n",
    "resnet50_loss = [2.0971, 1.9005]\n",
    "inceptionv3_loss = [0.6886, 0.1683]\n",
    "mobilenetv2_loss = [0.4732, 0.1791]\n",
    "\n",
    "# Epoch numbers\n",
    "epochs = [1, 2]\n",
    "\n",
    "# Create the plot\n",
    "plt.figure(figsize=(8, 6))\n",
    "\n",
    "# Plot loss curves for each model\n",
    "plt.plot(epochs, vgg16_loss, label='VGG16', marker='o', color='b')\n",
    "plt.plot(epochs, resnet50_loss, label='ResNet50', marker='s', color='g')\n",
    "plt.plot(epochs, inceptionv3_loss, label='InceptionV3', marker='^', color='r')\n",
    "plt.plot(epochs, mobilenetv2_loss, label='MobileNetV2', marker='d', color='c')\n",
    "\n",
    "# Add labels and title\n",
    "plt.xlabel('Epoch')\n",
    "plt.ylabel('Loss')\n",
    "plt.title('Loss Curve Comparison for Different Image Classification Models')\n",
    "\n",
    "# Add legend\n",
    "plt.legend()\n",
    "\n",
    "# Grid and axes\n",
    "plt.grid(True)\n",
    "plt.xlim(1, 2)\n",
    "plt.ylim(0, 2.5)\n",
    "\n",
    "# Show the plot\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "57353589-fbd4-4204-b383-d5aaab8bbfc2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found 3599 images belonging to 12 classes.\n",
      "150/150 [==============================] - 3s 18ms/step\n",
      "150/150 [==============================] - 3s 18ms/step\n",
      "150/150 [==============================] - 4s 23ms/step\n",
      "150/150 [==============================] - 3s 20ms/step\n",
      "Image: 100k/1001.jpg, Majority Vote: [5, 7, 0, 6]\n",
      "Image: 100k/1006.jpg, Majority Vote: [5, 4, 0, 10]\n",
      "Image: 100k/1011.jpg, Majority Vote: [2, 4, 0, 6]\n",
      "Image: 100k/1016.jpg, Majority Vote: [3, 5, 0, 2]\n",
      "Image: 100k/102.jpg, Majority Vote: [1, 4, 0, 3]\n",
      "Image: 100k/1021.jpg, Majority Vote: [11, 5, 0, 10]\n",
      "Image: 100k/1026.jpg, Majority Vote: [5]\n",
      "Image: 100k/1031.jpg, Majority Vote: [0]\n",
      "Image: 100k/1036.jpg, Majority Vote: [0]\n",
      "Image: 100k/1041.jpg, Majority Vote: [6, 5, 0, 2]\n",
      "Image: 100k/1046.jpg, Majority Vote: [5, 7, 0, 2]\n",
      "Image: 100k/1051.jpg, Majority Vote: [11]\n",
      "Image: 100k/1056.jpg, Majority Vote: [4]\n",
      "Image: 100k/1061.jpg, Majority Vote: [0]\n",
      "Image: 100k/1066.jpg, Majority Vote: [2, 5, 0, 9]\n",
      "Image: 100k/1071.jpg, Majority Vote: [2]\n",
      "Image: 100k/1076.jpg, Majority Vote: [5, 4, 0, 1]\n",
      "Image: 100k/108.jpg, Majority Vote: [0]\n",
      "Image: 100k/1081.jpg, Majority Vote: [11, 4, 0, 7]\n",
      "Image: 100k/1086.jpg, Majority Vote: [9]\n",
      "Image: 100k/1091.jpg, Majority Vote: [7]\n",
      "Image: 100k/1096.jpg, Majority Vote: [7, 5, 0, 6]\n",
      "Image: 100k/1101.jpg, Majority Vote: [8, 4, 0, 6]\n",
      "Image: 100k/1106.jpg, Majority Vote: [4]\n",
      "Image: 100k/1111.jpg, Majority Vote: [0]\n",
      "Image: 100k/1116.jpg, Majority Vote: [0]\n",
      "Image: 100k/1121.jpg, Majority Vote: [6, 9, 0, 8]\n",
      "Image: 100k/1126.jpg, Majority Vote: [3, 4, 0, 10]\n",
      "Image: 100k/1131.jpg, Majority Vote: [0]\n",
      "Image: 100k/1136.jpg, Majority Vote: [3, 4, 0, 6]\n",
      "Image: 100k/114.jpg, Majority Vote: [7, 5, 0, 6]\n",
      "Image: 100k/1141.jpg, Majority Vote: [2, 4, 0, 1]\n",
      "Image: 100k/1146.jpg, Majority Vote: [1, 4, 0, 3]\n",
      "Image: 100k/1151.jpg, Majority Vote: [11, 5, 0, 2]\n",
      "Image: 100k/1156.jpg, Majority Vote: [2, 4, 0, 5]\n",
      "Image: 100k/1161.jpg, Majority Vote: [7, 5, 0, 2]\n",
      "Image: 100k/1166.jpg, Majority Vote: [6, 4, 0, 7]\n",
      "Image: 100k/1171.jpg, Majority Vote: [2, 7, 0, 1]\n",
      "Image: 100k/1176.jpg, Majority Vote: [2, 7, 0, 5]\n",
      "Image: 100k/1181.jpg, Majority Vote: [7]\n",
      "Image: 100k/1186.jpg, Majority Vote: [1]\n",
      "Image: 100k/1191.jpg, Majority Vote: [11, 7, 0, 9]\n",
      "Image: 100k/1196.jpg, Majority Vote: [2, 4, 0, 5]\n",
      "Image: 100k/120.jpg, Majority Vote: [9]\n",
      "Image: 100k/1206.jpg, Majority Vote: [5]\n",
      "Image: 100k/1211.jpg, Majority Vote: [0]\n",
      "Image: 100k/1216.jpg, Majority Vote: [5, 7, 0, 3]\n",
      "Image: 100k/1221.jpg, Majority Vote: [9, 4, 0, 6]\n",
      "Image: 100k/1226.jpg, Majority Vote: [2, 4, 0, 11]\n",
      "Image: 100k/1231.jpg, Majority Vote: [2, 4, 0, 8]\n",
      "Image: 100k/1236.jpg, Majority Vote: [2, 7, 0, 8]\n",
      "Image: 100k/1241.jpg, Majority Vote: [5]\n",
      "Image: 100k/1246.jpg, Majority Vote: [0]\n",
      "Image: 100k/125.jpg, Majority Vote: [5]\n",
      "Image: 100k/1256.jpg, Majority Vote: [11]\n",
      "Image: 100k/1261.jpg, Majority Vote: [5, 7, 0, 4]\n",
      "Image: 100k/1266.jpg, Majority Vote: [11, 4, 0, 2]\n",
      "Image: 100k/1291.jpg, Majority Vote: [0]\n",
      "Image: 100k/1301.jpg, Majority Vote: [9, 4, 0, 3]\n",
      "Image: 100k/1306.jpg, Majority Vote: [5, 4, 0, 1]\n",
      "Image: 100k/131.jpg, Majority Vote: [11, 5, 0, 10]\n",
      "Image: 100k/1311.jpg, Majority Vote: [1, 4, 0, 6]\n",
      "Image: 100k/1316.jpg, Majority Vote: [0]\n",
      "Image: 100k/1321.jpg, Majority Vote: [5, 4, 0, 6]\n",
      "Image: 100k/1326.jpg, Majority Vote: [0]\n",
      "Image: 100k/1331.jpg, Majority Vote: [1, 4, 0, 8]\n",
      "Image: 100k/1336.jpg, Majority Vote: [2]\n",
      "Image: 100k/1341.jpg, Majority Vote: [9]\n",
      "Image: 100k/1346.jpg, Majority Vote: [2, 4, 0, 6]\n",
      "Image: 100k/1351.jpg, Majority Vote: [9]\n",
      "Image: 100k/1356.jpg, Majority Vote: [2, 5, 0, 6]\n",
      "Image: 100k/1361.jpg, Majority Vote: [5, 4, 0, 2]\n",
      "Image: 100k/1366.jpg, Majority Vote: [0]\n",
      "Image: 100k/137.jpg, Majority Vote: [8, 9, 0, 10]\n",
      "Image: 100k/1371.jpg, Majority Vote: [5]\n",
      "Image: 100k/1376.jpg, Majority Vote: [3, 5, 0, 8]\n",
      "Image: 100k/1381.jpg, Majority Vote: [5, 4, 0, 9]\n",
      "Image: 100k/1386.jpg, Majority Vote: [5, 4, 0, 7]\n",
      "Image: 100k/1391.jpg, Majority Vote: [6]\n",
      "Image: 100k/1396.jpg, Majority Vote: [6, 5, 0, 7]\n",
      "Image: 100k/1401.jpg, Majority Vote: [5, 7, 0, 2]\n",
      "Image: 100k/1406.jpg, Majority Vote: [3, 4, 0, 2]\n",
      "Image: 100k/1411.jpg, Majority Vote: [8, 4, 0, 3]\n",
      "Image: 100k/1416.jpg, Majority Vote: [9]\n",
      "Image: 100k/1421.jpg, Majority Vote: [1, 7, 0, 5]\n",
      "Image: 100k/1426.jpg, Majority Vote: [2, 5, 0, 9]\n",
      "Image: 100k/143.jpg, Majority Vote: [5, 4, 0, 9]\n",
      "Image: 100k/1431.jpg, Majority Vote: [2, 5, 0, 10]\n",
      "Image: 100k/1436.jpg, Majority Vote: [5]\n",
      "Image: 100k/1441.jpg, Majority Vote: [6, 7, 0, 4]\n",
      "Image: 100k/1446.jpg, Majority Vote: [2, 4, 0, 7]\n",
      "Image: 100k/1451.jpg, Majority Vote: [4]\n",
      "Image: 100k/1456.jpg, Majority Vote: [9]\n",
      "Image: 100k/1461.jpg, Majority Vote: [5]\n",
      "Image: 100k/1466.jpg, Majority Vote: [3]\n",
      "Image: 100k/1471.jpg, Majority Vote: [9, 4, 0, 5]\n",
      "Image: 100k/1476.jpg, Majority Vote: [0]\n",
      "Image: 100k/1481.jpg, Majority Vote: [4]\n",
      "Image: 100k/1486.jpg, Majority Vote: [5, 9, 0, 6]\n",
      "Image: 100k/149.jpg, Majority Vote: [4]\n",
      "Image: 100k/1491.jpg, Majority Vote: [2, 9, 0, 1]\n",
      "Image: 100k/1496.jpg, Majority Vote: [0]\n",
      "Image: 100k/15.jpg, Majority Vote: [9, 5, 0, 4]\n",
      "Image: 100k/1501.jpg, Majority Vote: [4, 5, 0, 2]\n",
      "Image: 100k/1506.jpg, Majority Vote: [6, 9, 0, 8]\n",
      "Image: 100k/1511.jpg, Majority Vote: [1, 7, 0, 5]\n",
      "Image: 100k/1516.jpg, Majority Vote: [0]\n",
      "Image: 100k/1521.jpg, Majority Vote: [11, 7, 0, 3]\n",
      "Image: 100k/1526.jpg, Majority Vote: [2, 5, 0, 4]\n",
      "Image: 100k/1531.jpg, Majority Vote: [9]\n",
      "Image: 100k/1536.jpg, Majority Vote: [2, 4, 0, 10]\n",
      "Image: 100k/1541.jpg, Majority Vote: [4]\n",
      "Image: 100k/1546.jpg, Majority Vote: [2, 5, 0, 8]\n",
      "Image: 100k/155.jpg, Majority Vote: [8, 4, 0, 11]\n",
      "Image: 100k/1551.jpg, Majority Vote: [7, 5, 0, 9]\n",
      "Image: 100k/1556.jpg, Majority Vote: [2, 4, 0, 8]\n",
      "Image: 100k/1561.jpg, Majority Vote: [0]\n",
      "Image: 100k/1566.jpg, Majority Vote: [5, 4, 0, 1]\n",
      "Image: 100k/1571.jpg, Majority Vote: [4]\n",
      "Image: 100k/1576.jpg, Majority Vote: [1, 4, 0, 11]\n",
      "Image: 100k/1581.jpg, Majority Vote: [4]\n",
      "Image: 100k/1586.jpg, Majority Vote: [5, 4, 0, 3]\n",
      "Image: 100k/1591.jpg, Majority Vote: [0]\n",
      "Image: 100k/1596.jpg, Majority Vote: [9]\n",
      "Image: 100k/160.jpg, Majority Vote: [9, 4, 0, 7]\n",
      "Image: 100k/1601.jpg, Majority Vote: [2, 4, 0, 6]\n",
      "Image: 100k/1606.jpg, Majority Vote: [0]\n",
      "Image: 100k/1611.jpg, Majority Vote: [5]\n",
      "Image: 100k/1616.jpg, Majority Vote: [6]\n",
      "Image: 100k/1621.jpg, Majority Vote: [0]\n",
      "Image: 100k/1626.jpg, Majority Vote: [4]\n",
      "Image: 100k/1631.jpg, Majority Vote: [7]\n",
      "Image: 100k/1636.jpg, Majority Vote: [3, 4, 0, 5]\n",
      "Image: 100k/1641.jpg, Majority Vote: [3, 4, 0, 6]\n",
      "Image: 100k/1646.jpg, Majority Vote: [9, 5, 0, 7]\n",
      "Image: 100k/1651.jpg, Majority Vote: [3, 9, 0, 7]\n",
      "Image: 100k/1656.jpg, Majority Vote: [0]\n",
      "Image: 100k/166.jpg, Majority Vote: [11, 5, 0, 6]\n",
      "Image: 100k/1661.jpg, Majority Vote: [0]\n",
      "Image: 100k/1666.jpg, Majority Vote: [8, 7, 0, 10]\n",
      "Image: 100k/1671.jpg, Majority Vote: [3]\n",
      "Image: 100k/1676.jpg, Majority Vote: [8, 5, 0, 11]\n",
      "Image: 100k/1681.jpg, Majority Vote: [9, 4, 0, 5]\n",
      "Image: 100k/172.jpg, Majority Vote: [2, 4, 0, 10]\n",
      "Image: 100k/178.jpg, Majority Vote: [6, 7, 0, 4]\n",
      "Image: 100k/184.jpg, Majority Vote: [9, 4, 0, 2]\n",
      "Image: 100k/190.jpg, Majority Vote: [5, 4, 0, 3]\n",
      "Image: 100k/195.jpg, Majority Vote: [2, 5, 0, 10]\n",
      "Image: 100k/20.jpg, Majority Vote: [8, 7, 0, 1]\n",
      "Image: 100k/201.jpg, Majority Vote: [1]\n",
      "Image: 100k/207.jpg, Majority Vote: [2]\n",
      "Image: 100k/213.jpg, Majority Vote: [9, 7, 0, 11]\n",
      "Image: 100k/219.jpg, Majority Vote: [1, 7, 0, 9]\n",
      "Image: 100k/225.jpg, Majority Vote: [2, 9, 0, 8]\n",
      "Image: 100k/230.jpg, Majority Vote: [7, 5, 0, 3]\n",
      "Image: 100k/236.jpg, Majority Vote: [5, 4, 0, 6]\n",
      "Image: 100k/242.jpg, Majority Vote: [0]\n",
      "Image: 100k/248.jpg, Majority Vote: [8, 7, 0, 9]\n",
      "Image: 100k/254.jpg, Majority Vote: [5, 4, 0, 6]\n",
      "Image: 100k/26.jpg, Majority Vote: [11, 7, 0, 3]\n",
      "Image: 100k/260.jpg, Majority Vote: [0]\n",
      "Image: 100k/265.jpg, Majority Vote: [11, 7, 0, 3]\n",
      "Image: 100k/277.jpg, Majority Vote: [3, 4, 0, 2]\n",
      "Image: 100k/283.jpg, Majority Vote: [1, 4, 0, 2]\n",
      "Image: 100k/289.jpg, Majority Vote: [6, 4, 0, 5]\n",
      "Image: 100k/295.jpg, Majority Vote: [8, 4, 0, 3]\n",
      "Image: 100k/3.jpg, Majority Vote: [4, 5, 0, 7]\n",
      "Image: 100k/300.jpg, Majority Vote: [4]\n",
      "Image: 100k/306.jpg, Majority Vote: [1, 5, 0, 6]\n",
      "Image: 100k/312.jpg, Majority Vote: [1]\n",
      "Image: 100k/318.jpg, Majority Vote: [2, 4, 0, 3]\n",
      "Image: 100k/32.jpg, Majority Vote: [5]\n",
      "Image: 100k/324.jpg, Majority Vote: [1, 4, 0, 11]\n",
      "Image: 100k/330.jpg, Majority Vote: [4]\n",
      "Image: 100k/335.jpg, Majority Vote: [0]\n",
      "Image: 100k/341.jpg, Majority Vote: [7]\n",
      "Image: 100k/347.jpg, Majority Vote: [7]\n",
      "Image: 100k/353.jpg, Majority Vote: [6, 4, 0, 11]\n",
      "Image: 100k/359.jpg, Majority Vote: [2, 4, 0, 6]\n",
      "Image: 100k/365.jpg, Majority Vote: [6]\n",
      "Image: 100k/370.jpg, Majority Vote: [2, 7, 0, 6]\n",
      "Image: 100k/376.jpg, Majority Vote: [3]\n",
      "Image: 100k/38.jpg, Majority Vote: [7, 4, 0, 2]\n",
      "Image: 100k/382.jpg, Majority Vote: [6]\n",
      "Image: 100k/388.jpg, Majority Vote: [6, 4, 0, 5]\n",
      "Image: 100k/394.jpg, Majority Vote: [4]\n",
      "Image: 100k/400.jpg, Majority Vote: [2, 4, 0, 3]\n",
      "Image: 100k/405.jpg, Majority Vote: [11, 7, 0, 1]\n",
      "Image: 100k/411.jpg, Majority Vote: [0]\n",
      "Image: 100k/417.jpg, Majority Vote: [1, 7, 0, 8]\n",
      "Image: 100k/423.jpg, Majority Vote: [5, 4, 0, 9]\n",
      "Image: 100k/429.jpg, Majority Vote: [2, 9, 0, 10]\n",
      "Image: 100k/435.jpg, Majority Vote: [7]\n",
      "Image: 100k/44.jpg, Majority Vote: [7]\n",
      "Image: 100k/440.jpg, Majority Vote: [10, 4, 0, 11]\n",
      "Image: 100k/446.jpg, Majority Vote: [5]\n",
      "Image: 100k/452.jpg, Majority Vote: [7]\n",
      "Image: 100k/458.jpg, Majority Vote: [11, 4, 0, 5]\n",
      "Image: 100k/464.jpg, Majority Vote: [8, 4, 0, 10]\n",
      "Image: 100k/470.jpg, Majority Vote: [0]\n",
      "Image: 100k/475.jpg, Majority Vote: [9]\n",
      "Image: 100k/481.jpg, Majority Vote: [2, 4, 0, 9]\n",
      "Image: 100k/487.jpg, Majority Vote: [4]\n",
      "Image: 100k/493.jpg, Majority Vote: [6, 4, 0, 1]\n",
      "Image: 100k/499.jpg, Majority Vote: [9, 4, 0, 6]\n",
      "Image: 100k/50.jpg, Majority Vote: [9, 4, 0, 3]\n",
      "Image: 100k/505.jpg, Majority Vote: [2, 4, 0, 8]\n",
      "Image: 100k/510.jpg, Majority Vote: [6, 5, 0, 11]\n",
      "Image: 100k/516.jpg, Majority Vote: [0]\n",
      "Image: 100k/522.jpg, Majority Vote: [5, 9, 0, 2]\n",
      "Image: 100k/528.jpg, Majority Vote: [6, 4, 0, 10]\n",
      "Image: 100k/534.jpg, Majority Vote: [1, 4, 0, 6]\n",
      "Image: 100k/540.jpg, Majority Vote: [0]\n",
      "Image: 100k/545.jpg, Majority Vote: [2, 7, 0, 9]\n",
      "Image: 100k/55.jpg, Majority Vote: [3, 9, 0, 8]\n",
      "Image: 100k/551.jpg, Majority Vote: [6, 5, 0, 1]\n",
      "Image: 100k/557.jpg, Majority Vote: [7]\n",
      "Image: 100k/563.jpg, Majority Vote: [4]\n",
      "Image: 100k/569.jpg, Majority Vote: [0]\n",
      "Image: 100k/575.jpg, Majority Vote: [4, 7, 0, 5]\n",
      "Image: 100k/580.jpg, Majority Vote: [4]\n",
      "Image: 100k/586.jpg, Majority Vote: [4]\n",
      "Image: 100k/591.jpg, Majority Vote: [8, 4, 0, 2]\n",
      "Image: 100k/596.jpg, Majority Vote: [2, 4, 0, 6]\n",
      "Image: 100k/601.jpg, Majority Vote: [5, 4, 0, 8]\n",
      "Image: 100k/61.jpg, Majority Vote: [7, 9, 0, 4]\n",
      "Image: 100k/611.jpg, Majority Vote: [5]\n",
      "Image: 100k/616.jpg, Majority Vote: [5]\n",
      "Image: 100k/621.jpg, Majority Vote: [4]\n",
      "Image: 100k/626.jpg, Majority Vote: [5]\n",
      "Image: 100k/631.jpg, Majority Vote: [0]\n",
      "Image: 100k/636.jpg, Majority Vote: [3]\n",
      "Image: 100k/641.jpg, Majority Vote: [1, 7, 0, 6]\n",
      "Image: 100k/646.jpg, Majority Vote: [6, 4, 0, 3]\n",
      "Image: 100k/651.jpg, Majority Vote: [11]\n",
      "Image: 100k/656.jpg, Majority Vote: [9, 7, 0, 3]\n",
      "Image: 100k/661.jpg, Majority Vote: [5, 9, 0, 2]\n",
      "Image: 100k/666.jpg, Majority Vote: [5, 4, 0, 1]\n",
      "Image: 100k/67.jpg, Majority Vote: [2, 9, 0, 7]\n",
      "Image: 100k/671.jpg, Majority Vote: [6, 4, 0, 2]\n",
      "Image: 100k/676.jpg, Majority Vote: [5]\n",
      "Image: 100k/681.jpg, Majority Vote: [7]\n",
      "Image: 100k/686.jpg, Majority Vote: [0]\n",
      "Image: 100k/691.jpg, Majority Vote: [9]\n",
      "Image: 100k/696.jpg, Majority Vote: [0]\n",
      "Image: 100k/701.jpg, Majority Vote: [4, 7, 0, 8]\n",
      "Image: 100k/706.jpg, Majority Vote: [0]\n",
      "Image: 100k/711.jpg, Majority Vote: [5, 7, 0, 2]\n",
      "Image: 100k/716.jpg, Majority Vote: [0]\n",
      "Image: 100k/721.jpg, Majority Vote: [6, 4, 0, 11]\n",
      "Image: 100k/726.jpg, Majority Vote: [9, 4, 0, 3]\n",
      "Image: 100k/73.jpg, Majority Vote: [0]\n",
      "Image: 100k/731.jpg, Majority Vote: [3, 5, 0, 9]\n",
      "Image: 100k/736.jpg, Majority Vote: [11]\n",
      "Image: 100k/741.jpg, Majority Vote: [0]\n",
      "Image: 100k/746.jpg, Majority Vote: [8, 5, 0, 6]\n",
      "Image: 100k/751.jpg, Majority Vote: [5]\n",
      "Image: 100k/756.jpg, Majority Vote: [5]\n",
      "Image: 100k/761.jpg, Majority Vote: [9, 4, 0, 10]\n",
      "Image: 100k/766.jpg, Majority Vote: [8, 4, 0, 3]\n",
      "Image: 100k/771.jpg, Majority Vote: [6, 4, 0, 1]\n",
      "Image: 100k/776.jpg, Majority Vote: [6, 9, 0, 5]\n",
      "Image: 100k/781.jpg, Majority Vote: [0]\n",
      "Image: 100k/786.jpg, Majority Vote: [3, 4, 0, 7]\n",
      "Image: 100k/79.jpg, Majority Vote: [7]\n",
      "Image: 100k/791.jpg, Majority Vote: [8, 4, 0, 10]\n",
      "Image: 100k/796.jpg, Majority Vote: [3, 7, 0, 1]\n",
      "Image: 100k/801.jpg, Majority Vote: [6, 9, 0, 4]\n",
      "Image: 100k/806.jpg, Majority Vote: [4, 5, 0, 6]\n",
      "Image: 100k/811.jpg, Majority Vote: [5]\n",
      "Image: 100k/816.jpg, Majority Vote: [1, 7, 0, 3]\n",
      "Image: 100k/821.jpg, Majority Vote: [0]\n",
      "Image: 100k/826.jpg, Majority Vote: [6, 4, 0, 3]\n",
      "Image: 100k/831.jpg, Majority Vote: [7]\n",
      "Image: 100k/836.jpg, Majority Vote: [0]\n",
      "Image: 100k/841.jpg, Majority Vote: [0]\n",
      "Image: 100k/846.jpg, Majority Vote: [7, 4, 0, 8]\n",
      "Image: 100k/85.jpg, Majority Vote: [0]\n",
      "Image: 100k/851.jpg, Majority Vote: [1, 7, 0, 2]\n",
      "Image: 100k/856.jpg, Majority Vote: [7, 4, 0, 11]\n",
      "Image: 100k/861.jpg, Majority Vote: [1]\n",
      "Image: 100k/866.jpg, Majority Vote: [9, 7, 0, 8]\n",
      "Image: 100k/871.jpg, Majority Vote: [9, 7, 0, 10]\n",
      "Image: 100k/876.jpg, Majority Vote: [8, 5, 0, 6]\n",
      "Image: 100k/881.jpg, Majority Vote: [5, 0]\n",
      "Image: 100k/886.jpg, Majority Vote: [7, 5, 0, 11]\n",
      "Image: 100k/891.jpg, Majority Vote: [8, 4, 0, 9]\n",
      "Image: 100k/896.jpg, Majority Vote: [2, 9, 0, 11]\n",
      "Image: 100k/9.jpg, Majority Vote: [2, 7, 0, 10]\n",
      "Image: 100k/90.jpg, Majority Vote: [3, 4, 0, 1]\n",
      "Image: 100k/901.jpg, Majority Vote: [1, 7, 0, 2]\n",
      "Image: 100k/906.jpg, Majority Vote: [8, 4, 0, 10]\n",
      "Image: 100k/911.jpg, Majority Vote: [9]\n",
      "Image: 100k/916.jpg, Majority Vote: [4]\n",
      "Image: 100k/921.jpg, Majority Vote: [3, 4, 0, 8]\n",
      "Image: 100k/926.jpg, Majority Vote: [2, 4, 0, 5]\n",
      "Image: 100k/931.jpg, Majority Vote: [9, 4, 0, 5]\n",
      "Image: 100k/936.jpg, Majority Vote: [7, 4, 0, 2]\n",
      "Image: 100k/941.jpg, Majority Vote: [6, 4, 0, 7]\n",
      "Image: 100k/946.jpg, Majority Vote: [0]\n",
      "Image: 100k/951.jpg, Majority Vote: [9]\n",
      "Image: 100k/956.jpg, Majority Vote: [9]\n",
      "Image: 100k/96.jpg, Majority Vote: [1, 4, 0, 2]\n",
      "Image: 100k/961.jpg, Majority Vote: [7]\n",
      "Image: 100k/966.jpg, Majority Vote: [11, 5, 0, 3]\n",
      "Image: 100k/971.jpg, Majority Vote: [1, 7, 0, 6]\n",
      "Image: 100k/976.jpg, Majority Vote: [2, 4, 0, 7]\n",
      "Image: 100k/981.jpg, Majority Vote: [6, 7, 0, 11]\n",
      "Image: 100k/986.jpg, Majority Vote: [4]\n",
      "Image: 100k/996.jpg, Majority Vote: [6, 4, 0, 11]\n",
      "Image: 100kf/1004.jpg, Majority Vote: [8]\n",
      "Image: 100kf/101.jpg, Majority Vote: [8, 4, 0, 5]\n",
      "Image: 100kf/1010.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1016.jpg, Majority Vote: [5]\n",
      "Image: 100kf/1022.jpg, Majority Vote: [2, 5, 0, 1]\n",
      "Image: 100kf/1027.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1033.jpg, Majority Vote: [1, 9, 0, 6]\n",
      "Image: 100kf/1039.jpg, Majority Vote: [11, 4, 0, 10]\n",
      "Image: 100kf/1045.jpg, Majority Vote: [11]\n",
      "Image: 100kf/1051.jpg, Majority Vote: [6, 4, 0, 10]\n",
      "Image: 100kf/1057.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1062.jpg, Majority Vote: [8, 9, 0, 4]\n",
      "Image: 100kf/1068.jpg, Majority Vote: [10, 5, 0, 7]\n",
      "Image: 100kf/107.jpg, Majority Vote: [9, 7, 0, 3]\n",
      "Image: 100kf/1074.jpg, Majority Vote: [2, 9, 0, 5]\n",
      "Image: 100kf/1080.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1086.jpg, Majority Vote: [8, 5, 0, 4]\n",
      "Image: 100kf/1092.jpg, Majority Vote: [3, 9, 0, 1]\n",
      "Image: 100kf/1097.jpg, Majority Vote: [11, 9, 0, 2]\n",
      "Image: 100kf/1103.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1109.jpg, Majority Vote: [7, 4, 0, 9]\n",
      "Image: 100kf/1115.jpg, Majority Vote: [2, 7, 0, 5]\n",
      "Image: 100kf/1121.jpg, Majority Vote: [5]\n",
      "Image: 100kf/1127.jpg, Majority Vote: [1, 5, 0, 2]\n",
      "Image: 100kf/113.jpg, Majority Vote: [5, 4, 0, 3]\n",
      "Image: 100kf/1132.jpg, Majority Vote: [8, 4, 0, 6]\n",
      "Image: 100kf/1138.jpg, Majority Vote: [6, 7, 0, 1]\n",
      "Image: 100kf/1144.jpg, Majority Vote: [5]\n",
      "Image: 100kf/1150.jpg, Majority Vote: [7, 9, 0, 11]\n",
      "Image: 100kf/1156.jpg, Majority Vote: [3, 5, 0, 11]\n",
      "Image: 100kf/1162.jpg, Majority Vote: [10, 5, 0, 1]\n",
      "Image: 100kf/1167.jpg, Majority Vote: [8, 5, 0, 1]\n",
      "Image: 100kf/1173.jpg, Majority Vote: [6, 4, 0, 1]\n",
      "Image: 100kf/1179.jpg, Majority Vote: [9, 4, 0, 10]\n",
      "Image: 100kf/118.jpg, Majority Vote: [2, 5, 0, 10]\n",
      "Image: 100kf/1185.jpg, Majority Vote: [6, 4, 0, 7]\n",
      "Image: 100kf/1191.jpg, Majority Vote: [2, 9, 0, 1]\n",
      "Image: 100kf/1197.jpg, Majority Vote: [3, 7, 0, 1]\n",
      "Image: 100kf/1202.jpg, Majority Vote: [8, 7, 0, 4]\n",
      "Image: 100kf/1208.jpg, Majority Vote: [1]\n",
      "Image: 100kf/1214.jpg, Majority Vote: [9]\n",
      "Image: 100kf/1220.jpg, Majority Vote: [7, 4, 0, 6]\n",
      "Image: 100kf/1226.jpg, Majority Vote: [4]\n",
      "Image: 100kf/123.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1232.jpg, Majority Vote: [1, 5, 0, 10]\n",
      "Image: 100kf/1237.jpg, Majority Vote: [10, 4, 0, 1]\n",
      "Image: 100kf/1243.jpg, Majority Vote: [7, 0]\n",
      "Image: 100kf/1249.jpg, Majority Vote: [4]\n",
      "Image: 100kf/1255.jpg, Majority Vote: [2, 5, 0, 4]\n",
      "Image: 100kf/1261.jpg, Majority Vote: [8, 4, 0, 1]\n",
      "Image: 100kf/1267.jpg, Majority Vote: [8]\n",
      "Image: 100kf/1272.jpg, Majority Vote: [4, 9, 0, 5]\n",
      "Image: 100kf/1278.jpg, Majority Vote: [5]\n",
      "Image: 100kf/1284.jpg, Majority Vote: [6, 4, 0, 1]\n",
      "Image: 100kf/129.jpg, Majority Vote: [9, 7, 0, 10]\n",
      "Image: 100kf/1290.jpg, Majority Vote: [2, 4, 0, 11]\n",
      "Image: 100kf/1296.jpg, Majority Vote: [2, 4, 0, 9]\n",
      "Image: 100kf/1302.jpg, Majority Vote: [4]\n",
      "Image: 100kf/1307.jpg, Majority Vote: [3, 4, 0, 5]\n",
      "Image: 100kf/1313.jpg, Majority Vote: [4]\n",
      "Image: 100kf/1319.jpg, Majority Vote: [2, 7, 0, 1]\n",
      "Image: 100kf/1325.jpg, Majority Vote: [2, 4, 0, 7]\n",
      "Image: 100kf/1331.jpg, Majority Vote: [5, 7, 0, 11]\n",
      "Image: 100kf/1337.jpg, Majority Vote: [2, 4, 0, 5]\n",
      "Image: 100kf/1342.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1348.jpg, Majority Vote: [9, 5, 0, 10]\n",
      "Image: 100kf/135.jpg, Majority Vote: [0, 4]\n",
      "Image: 100kf/1354.jpg, Majority Vote: [4, 5, 0, 3]\n",
      "Image: 100kf/1360.jpg, Majority Vote: [2, 4, 0, 11]\n",
      "Image: 100kf/1366.jpg, Majority Vote: [5, 4, 0, 3]\n",
      "Image: 100kf/1372.jpg, Majority Vote: [5, 4, 0, 7]\n",
      "Image: 100kf/1377.jpg, Majority Vote: [5]\n",
      "Image: 100kf/1383.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1389.jpg, Majority Vote: [9, 5, 0, 1]\n",
      "Image: 100kf/1395.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1401.jpg, Majority Vote: [3, 9, 0, 1]\n",
      "Image: 100kf/1407.jpg, Majority Vote: [6, 7, 0, 9]\n",
      "Image: 100kf/141.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1412.jpg, Majority Vote: [6, 7, 0, 4]\n",
      "Image: 100kf/1418.jpg, Majority Vote: [2, 4, 0, 9]\n",
      "Image: 100kf/1424.jpg, Majority Vote: [8, 4, 0, 3]\n",
      "Image: 100kf/1430.jpg, Majority Vote: [10, 7, 0, 6]\n",
      "Image: 100kf/1436.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1442.jpg, Majority Vote: [11, 7, 0, 5]\n",
      "Image: 100kf/1447.jpg, Majority Vote: [2, 5, 0, 9]\n",
      "Image: 100kf/1453.jpg, Majority Vote: [7]\n",
      "Image: 100kf/1459.jpg, Majority Vote: [11, 7, 0, 8]\n",
      "Image: 100kf/1465.jpg, Majority Vote: [11, 4, 0, 9]\n",
      "Image: 100kf/147.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1471.jpg, Majority Vote: [8, 4, 0, 11]\n",
      "Image: 100kf/1477.jpg, Majority Vote: [11, 7, 0, 10]\n",
      "Image: 100kf/1482.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1488.jpg, Majority Vote: [9]\n",
      "Image: 100kf/1494.jpg, Majority Vote: [9, 4, 0, 8]\n",
      "Image: 100kf/15.jpg, Majority Vote: [3, 5, 0, 1]\n",
      "Image: 100kf/1500.jpg, Majority Vote: [7]\n",
      "Image: 100kf/1506.jpg, Majority Vote: [7, 5, 0, 6]\n",
      "Image: 100kf/1512.jpg, Majority Vote: [7]\n",
      "Image: 100kf/1517.jpg, Majority Vote: [11]\n",
      "Image: 100kf/152.jpg, Majority Vote: [8, 4, 0, 11]\n",
      "Image: 100kf/1523.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1529.jpg, Majority Vote: [3]\n",
      "Image: 100kf/1535.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1541.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1547.jpg, Majority Vote: [6, 7, 0, 9]\n",
      "Image: 100kf/1552.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1558.jpg, Majority Vote: [5]\n",
      "Image: 100kf/1564.jpg, Majority Vote: [2, 7, 0, 6]\n",
      "Image: 100kf/1570.jpg, Majority Vote: [8, 7, 0, 2]\n",
      "Image: 100kf/1576.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1582.jpg, Majority Vote: [6, 5, 0, 1]\n",
      "Image: 100kf/1587.jpg, Majority Vote: [3, 4, 0, 10]\n",
      "Image: 100kf/1593.jpg, Majority Vote: [4, 5, 0, 7]\n",
      "Image: 100kf/1599.jpg, Majority Vote: [7]\n",
      "Image: 100kf/1605.jpg, Majority Vote: [2, 4, 0, 7]\n",
      "Image: 100kf/1611.jpg, Majority Vote: [9, 4, 0, 1]\n",
      "Image: 100kf/1617.jpg, Majority Vote: [1, 9, 0, 6]\n",
      "Image: 100kf/1622.jpg, Majority Vote: [10, 4, 0, 7]\n",
      "Image: 100kf/1628.jpg, Majority Vote: [6, 7, 0, 3]\n",
      "Image: 100kf/1634.jpg, Majority Vote: [7]\n",
      "Image: 100kf/164.jpg, Majority Vote: [11, 7, 0, 8]\n",
      "Image: 100kf/1640.jpg, Majority Vote: [6, 4, 0, 2]\n",
      "Image: 100kf/1646.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1652.jpg, Majority Vote: [8, 7, 0, 1]\n",
      "Image: 100kf/1657.jpg, Majority Vote: [8]\n",
      "Image: 100kf/1663.jpg, Majority Vote: [2, 5, 0, 6]\n",
      "Image: 100kf/1669.jpg, Majority Vote: [2, 7, 0, 4]\n",
      "Image: 100kf/1675.jpg, Majority Vote: [1, 9, 0, 3]\n",
      "Image: 100kf/1681.jpg, Majority Vote: [9]\n",
      "Image: 100kf/1687.jpg, Majority Vote: [9]\n",
      "Image: 100kf/1692.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1698.jpg, Majority Vote: [2, 5, 0, 6]\n",
      "Image: 100kf/170.jpg, Majority Vote: [8, 4, 0, 5]\n",
      "Image: 100kf/1704.jpg, Majority Vote: [4]\n",
      "Image: 100kf/1710.jpg, Majority Vote: [11, 7, 0, 4]\n",
      "Image: 100kf/1716.jpg, Majority Vote: [1, 5, 0, 3]\n",
      "Image: 100kf/1722.jpg, Majority Vote: [5]\n",
      "Image: 100kf/1727.jpg, Majority Vote: [3, 4, 0, 6]\n",
      "Image: 100kf/1733.jpg, Majority Vote: [1, 9, 0, 11]\n",
      "Image: 100kf/1739.jpg, Majority Vote: [4, 9, 0, 6]\n",
      "Image: 100kf/1745.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1751.jpg, Majority Vote: [4]\n",
      "Image: 100kf/1757.jpg, Majority Vote: [5, 7, 0, 6]\n",
      "Image: 100kf/176.jpg, Majority Vote: [5]\n",
      "Image: 100kf/1762.jpg, Majority Vote: [9, 4, 0, 7]\n",
      "Image: 100kf/1768.jpg, Majority Vote: [2, 4, 0, 7]\n",
      "Image: 100kf/1774.jpg, Majority Vote: [6, 5, 0, 2]\n",
      "Image: 100kf/1780.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1786.jpg, Majority Vote: [7, 5, 0, 3]\n",
      "Image: 100kf/1792.jpg, Majority Vote: [2]\n",
      "Image: 100kf/1797.jpg, Majority Vote: [9, 4, 0, 5]\n",
      "Image: 100kf/1803.jpg, Majority Vote: [2]\n",
      "Image: 100kf/1809.jpg, Majority Vote: [2, 5, 0, 9]\n",
      "Image: 100kf/1815.jpg, Majority Vote: [2, 7, 0, 5]\n",
      "Image: 100kf/182.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1821.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1826.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1831.jpg, Majority Vote: [11]\n",
      "Image: 100kf/1836.jpg, Majority Vote: [9, 4, 0, 10]\n",
      "Image: 100kf/1841.jpg, Majority Vote: [0]\n",
      "Image: 100kf/1846.jpg, Majority Vote: [0]\n",
      "Image: 100kf/187.jpg, Majority Vote: [6, 5, 0, 7]\n",
      "Image: 100kf/193.jpg, Majority Vote: [1, 5, 0, 4]\n",
      "Image: 100kf/199.jpg, Majority Vote: [6, 4, 0, 5]\n",
      "Image: 100kf/204.jpg, Majority Vote: [3]\n",
      "Image: 100kf/21.jpg, Majority Vote: [6, 4, 0, 8]\n",
      "Image: 100kf/210.jpg, Majority Vote: [2, 7, 0, 5]\n",
      "Image: 100kf/215.jpg, Majority Vote: [0]\n",
      "Image: 100kf/221.jpg, Majority Vote: [0]\n",
      "Image: 100kf/227.jpg, Majority Vote: [0]\n",
      "Image: 100kf/233.jpg, Majority Vote: [11, 4, 0, 6]\n",
      "Image: 100kf/239.jpg, Majority Vote: [4]\n",
      "Image: 100kf/245.jpg, Majority Vote: [2, 4, 0, 5]\n",
      "Image: 100kf/250.jpg, Majority Vote: [4]\n",
      "Image: 100kf/256.jpg, Majority Vote: [9, 4, 0, 7]\n",
      "Image: 100kf/26.jpg, Majority Vote: [11, 7, 0, 4]\n",
      "Image: 100kf/262.jpg, Majority Vote: [7]\n",
      "Image: 100kf/268.jpg, Majority Vote: [0]\n",
      "Image: 100kf/274.jpg, Majority Vote: [7, 5, 0, 4]\n",
      "Image: 100kf/280.jpg, Majority Vote: [3, 7, 0, 2]\n",
      "Image: 100kf/285.jpg, Majority Vote: [9, 7, 0, 1]\n",
      "Image: 100kf/290.jpg, Majority Vote: [4, 7, 0, 3]\n",
      "Image: 100kf/296.jpg, Majority Vote: [2, 7, 0, 11]\n",
      "Image: 100kf/3.jpg, Majority Vote: [5, 4, 0, 2]\n",
      "Image: 100kf/302.jpg, Majority Vote: [11, 4, 0, 7]\n",
      "Image: 100kf/308.jpg, Majority Vote: [6, 4, 0, 8]\n",
      "Image: 100kf/313.jpg, Majority Vote: [7, 4, 0, 8]\n",
      "Image: 100kf/319.jpg, Majority Vote: [9, 5, 0, 7]\n",
      "Image: 100kf/32.jpg, Majority Vote: [6, 4, 0, 11]\n",
      "Image: 100kf/325.jpg, Majority Vote: [6, 4, 0, 7]\n",
      "Image: 100kf/331.jpg, Majority Vote: [6, 4, 0, 2]\n",
      "Image: 100kf/337.jpg, Majority Vote: [2]\n",
      "Image: 100kf/343.jpg, Majority Vote: [4, 5, 0, 3]\n",
      "Image: 100kf/348.jpg, Majority Vote: [9]\n",
      "Image: 100kf/354.jpg, Majority Vote: [11]\n",
      "Image: 100kf/360.jpg, Majority Vote: [2]\n",
      "Image: 100kf/366.jpg, Majority Vote: [0]\n",
      "Image: 100kf/37.jpg, Majority Vote: [11, 4, 0, 9]\n",
      "Image: 100kf/371.jpg, Majority Vote: [11, 7, 0, 1]\n",
      "Image: 100kf/376.jpg, Majority Vote: [11, 5, 0, 1]\n",
      "Image: 100kf/382.jpg, Majority Vote: [2, 9, 0, 7]\n",
      "Image: 100kf/388.jpg, Majority Vote: [2, 9, 0, 7]\n",
      "Image: 100kf/394.jpg, Majority Vote: [2, 4, 0, 3]\n",
      "Image: 100kf/400.jpg, Majority Vote: [9, 4, 0, 7]\n",
      "Image: 100kf/406.jpg, Majority Vote: [2, 4, 0, 7]\n",
      "Image: 100kf/411.jpg, Majority Vote: [3, 5, 0, 7]\n",
      "Image: 100kf/417.jpg, Majority Vote: [0]\n",
      "Image: 100kf/423.jpg, Majority Vote: [2, 4, 0, 5]\n",
      "Image: 100kf/429.jpg, Majority Vote: [8, 4, 0, 1]\n",
      "Image: 100kf/43.jpg, Majority Vote: [6, 4, 0, 10]\n",
      "Image: 100kf/435.jpg, Majority Vote: [7, 9, 0, 1]\n",
      "Image: 100kf/441.jpg, Majority Vote: [0, 4]\n",
      "Image: 100kf/446.jpg, Majority Vote: [6, 4, 0, 1]\n",
      "Image: 100kf/452.jpg, Majority Vote: [5, 7, 0, 11]\n",
      "Image: 100kf/457.jpg, Majority Vote: [7]\n",
      "Image: 100kf/463.jpg, Majority Vote: [9]\n",
      "Image: 100kf/469.jpg, Majority Vote: [0]\n",
      "Image: 100kf/474.jpg, Majority Vote: [6, 4, 0, 9]\n",
      "Image: 100kf/480.jpg, Majority Vote: [7, 4, 0, 8]\n",
      "Image: 100kf/486.jpg, Majority Vote: [7]\n",
      "Image: 100kf/49.jpg, Majority Vote: [7]\n",
      "Image: 100kf/492.jpg, Majority Vote: [0]\n",
      "Image: 100kf/498.jpg, Majority Vote: [0]\n",
      "Image: 100kf/504.jpg, Majority Vote: [11, 4, 0, 7]\n",
      "Image: 100kf/509.jpg, Majority Vote: [9, 5, 0, 2]\n",
      "Image: 100kf/515.jpg, Majority Vote: [9, 5, 0, 6]\n",
      "Image: 100kf/521.jpg, Majority Vote: [9]\n",
      "Image: 100kf/527.jpg, Majority Vote: [2, 4, 0, 11]\n",
      "Image: 100kf/533.jpg, Majority Vote: [8, 4, 0, 1]\n",
      "Image: 100kf/538.jpg, Majority Vote: [8]\n",
      "Image: 100kf/54.jpg, Majority Vote: [0]\n",
      "Image: 100kf/543.jpg, Majority Vote: [3, 5, 0, 8]\n",
      "Image: 100kf/549.jpg, Majority Vote: [11, 4, 0, 10]\n",
      "Image: 100kf/555.jpg, Majority Vote: [11, 7, 0, 8]\n",
      "Image: 100kf/561.jpg, Majority Vote: [11, 4, 0, 8]\n",
      "Image: 100kf/567.jpg, Majority Vote: [4]\n",
      "Image: 100kf/572.jpg, Majority Vote: [2, 4, 0, 6]\n",
      "Image: 100kf/578.jpg, Majority Vote: [0]\n",
      "Image: 100kf/584.jpg, Majority Vote: [5, 7, 0, 11]\n",
      "Image: 100kf/590.jpg, Majority Vote: [3, 4, 0, 9]\n",
      "Image: 100kf/596.jpg, Majority Vote: [1, 5, 0, 6]\n",
      "Image: 100kf/60.jpg, Majority Vote: [7, 5, 0, 9]\n",
      "Image: 100kf/602.jpg, Majority Vote: [5, 4, 0, 6]\n",
      "Image: 100kf/607.jpg, Majority Vote: [9, 5, 0, 2]\n",
      "Image: 100kf/613.jpg, Majority Vote: [8, 4, 0, 3]\n",
      "Image: 100kf/619.jpg, Majority Vote: [4]\n",
      "Image: 100kf/624.jpg, Majority Vote: [6, 4, 0, 1]\n",
      "Image: 100kf/630.jpg, Majority Vote: [6, 9, 0, 3]\n",
      "Image: 100kf/635.jpg, Majority Vote: [5]\n",
      "Image: 100kf/641.jpg, Majority Vote: [11, 7, 0, 6]\n",
      "Image: 100kf/647.jpg, Majority Vote: [2, 9, 0, 7]\n",
      "Image: 100kf/653.jpg, Majority Vote: [9]\n",
      "Image: 100kf/659.jpg, Majority Vote: [6, 4, 0, 9]\n",
      "Image: 100kf/66.jpg, Majority Vote: [6, 4, 0, 7]\n",
      "Image: 100kf/665.jpg, Majority Vote: [9]\n",
      "Image: 100kf/670.jpg, Majority Vote: [8, 5, 0, 9]\n",
      "Image: 100kf/676.jpg, Majority Vote: [6, 4, 0, 5]\n",
      "Image: 100kf/682.jpg, Majority Vote: [0]\n",
      "Image: 100kf/688.jpg, Majority Vote: [4]\n",
      "Image: 100kf/694.jpg, Majority Vote: [0]\n",
      "Image: 100kf/700.jpg, Majority Vote: [5, 4, 0, 11]\n",
      "Image: 100kf/705.jpg, Majority Vote: [4]\n",
      "Image: 100kf/710.jpg, Majority Vote: [3, 5, 0, 10]\n",
      "Image: 100kf/716.jpg, Majority Vote: [7]\n",
      "Image: 100kf/72.jpg, Majority Vote: [10, 5, 0, 3]\n",
      "Image: 100kf/722.jpg, Majority Vote: [9]\n",
      "Image: 100kf/728.jpg, Majority Vote: [6, 5, 0, 11]\n",
      "Image: 100kf/733.jpg, Majority Vote: [6, 7, 0, 3]\n",
      "Image: 100kf/739.jpg, Majority Vote: [0]\n",
      "Image: 100kf/745.jpg, Majority Vote: [8, 4, 0, 5]\n",
      "Image: 100kf/751.jpg, Majority Vote: [4]\n",
      "Image: 100kf/757.jpg, Majority Vote: [9]\n",
      "Image: 100kf/763.jpg, Majority Vote: [2, 5, 0, 11]\n",
      "Image: 100kf/768.jpg, Majority Vote: [2, 4, 0, 7]\n",
      "Image: 100kf/774.jpg, Majority Vote: [0]\n",
      "Image: 100kf/78.jpg, Majority Vote: [11, 4, 0, 7]\n",
      "Image: 100kf/780.jpg, Majority Vote: [5, 7, 0, 3]\n",
      "Image: 100kf/786.jpg, Majority Vote: [1, 9, 0, 11]\n",
      "Image: 100kf/791.jpg, Majority Vote: [5, 4, 0, 8]\n",
      "Image: 100kf/796.jpg, Majority Vote: [0]\n",
      "Image: 100kf/802.jpg, Majority Vote: [2, 4, 0, 9]\n",
      "Image: 100kf/808.jpg, Majority Vote: [4]\n",
      "Image: 100kf/814.jpg, Majority Vote: [4]\n",
      "Image: 100kf/820.jpg, Majority Vote: [0]\n",
      "Image: 100kf/826.jpg, Majority Vote: [0]\n",
      "Image: 100kf/831.jpg, Majority Vote: [8, 5, 0, 4]\n",
      "Image: 100kf/837.jpg, Majority Vote: [4]\n",
      "Image: 100kf/84.jpg, Majority Vote: [9]\n",
      "Image: 100kf/843.jpg, Majority Vote: [7]\n",
      "Image: 100kf/849.jpg, Majority Vote: [3, 9, 0, 7]\n",
      "Image: 100kf/855.jpg, Majority Vote: [0]\n",
      "Image: 100kf/861.jpg, Majority Vote: [2]\n",
      "Image: 100kf/866.jpg, Majority Vote: [5]\n",
      "Image: 100kf/872.jpg, Majority Vote: [0]\n",
      "Image: 100kf/877.jpg, Majority Vote: [10, 4, 0, 7]\n",
      "Image: 100kf/883.jpg, Majority Vote: [4]\n",
      "Image: 100kf/889.jpg, Majority Vote: [8, 4, 0, 11]\n",
      "Image: 100kf/89.jpg, Majority Vote: [4]\n",
      "Image: 100kf/894.jpg, Majority Vote: [2, 7, 0, 4]\n",
      "Image: 100kf/9.jpg, Majority Vote: [5]\n",
      "Image: 100kf/900.jpg, Majority Vote: [11, 4, 0, 3]\n",
      "Image: 100kf/906.jpg, Majority Vote: [3, 9, 0, 11]\n",
      "Image: 100kf/912.jpg, Majority Vote: [0, 5]\n",
      "Image: 100kf/918.jpg, Majority Vote: [2]\n",
      "Image: 100kf/924.jpg, Majority Vote: [11, 7, 0, 9]\n",
      "Image: 100kf/929.jpg, Majority Vote: [4]\n",
      "Image: 100kf/935.jpg, Majority Vote: [7, 5, 0, 6]\n",
      "Image: 100kf/941.jpg, Majority Vote: [7, 4, 0, 2]\n",
      "Image: 100kf/947.jpg, Majority Vote: [6]\n",
      "Image: 100kf/95.jpg, Majority Vote: [0]\n",
      "Image: 100kf/953.jpg, Majority Vote: [6, 5, 0, 3]\n",
      "Image: 100kf/958.jpg, Majority Vote: [1, 7, 0, 11]\n",
      "Image: 100kf/963.jpg, Majority Vote: [2, 4, 0, 7]\n",
      "Image: 100kf/969.jpg, Majority Vote: [1, 4, 0, 10]\n",
      "Image: 100kf/975.jpg, Majority Vote: [11, 4, 0, 3]\n",
      "Image: 100kf/981.jpg, Majority Vote: [0]\n",
      "Image: 100kf/987.jpg, Majority Vote: [6]\n",
      "Image: 100kf/992.jpg, Majority Vote: [8, 4, 0, 6]\n",
      "Image: 100kf/998.jpg, Majority Vote: [1, 4, 0, 3]\n",
      "Image: 10k/10.jpg, Majority Vote: [4, 9, 0, 3]\n",
      "Image: 10k/1001.jpg, Majority Vote: [7]\n",
      "Image: 10k/1007.jpg, Majority Vote: [0]\n",
      "Image: 10k/1013.jpg, Majority Vote: [0]\n",
      "Image: 10k/1019.jpg, Majority Vote: [2, 5, 0, 8]\n",
      "Image: 10k/1025.jpg, Majority Vote: [0]\n",
      "Image: 10k/103.jpg, Majority Vote: [0]\n",
      "Image: 10k/1030.jpg, Majority Vote: [5, 7, 0, 2]\n",
      "Image: 10k/1036.jpg, Majority Vote: [11, 4, 0, 10]\n",
      "Image: 10k/1042.jpg, Majority Vote: [11, 5, 0, 1]\n",
      "Image: 10k/1048.jpg, Majority Vote: [6, 7, 0, 11]\n",
      "Image: 10k/1054.jpg, Majority Vote: [9, 4, 0, 11]\n",
      "Image: 10k/1060.jpg, Majority Vote: [9]\n",
      "Image: 10k/1065.jpg, Majority Vote: [6]\n",
      "Image: 10k/1071.jpg, Majority Vote: [5, 4, 0, 7]\n",
      "Image: 10k/1077.jpg, Majority Vote: [2, 4, 0, 7]\n",
      "Image: 10k/1083.jpg, Majority Vote: [0]\n",
      "Image: 10k/1089.jpg, Majority Vote: [2, 7, 0, 11]\n",
      "Image: 10k/109.jpg, Majority Vote: [4]\n",
      "Image: 10k/1095.jpg, Majority Vote: [8, 5, 0, 3]\n",
      "Image: 10k/1100.jpg, Majority Vote: [5]\n",
      "Image: 10k/1106.jpg, Majority Vote: [9, 5, 0, 1]\n",
      "Image: 10k/1112.jpg, Majority Vote: [7]\n",
      "Image: 10k/1118.jpg, Majority Vote: [6, 9, 0, 1]\n",
      "Image: 10k/1124.jpg, Majority Vote: [10, 4, 0, 11]\n",
      "Image: 10k/1130.jpg, Majority Vote: [0]\n",
      "Image: 10k/1135.jpg, Majority Vote: [11, 7, 0, 9]\n",
      "Image: 10k/1141.jpg, Majority Vote: [3, 5, 0, 11]\n",
      "Image: 10k/1147.jpg, Majority Vote: [6]\n",
      "Image: 10k/115.jpg, Majority Vote: [8, 4, 0, 3]\n",
      "Image: 10k/1153.jpg, Majority Vote: [0]\n",
      "Image: 10k/1159.jpg, Majority Vote: [0]\n",
      "Image: 10k/1165.jpg, Majority Vote: [7, 4, 0, 10]\n",
      "Image: 10k/1170.jpg, Majority Vote: [5, 4, 0, 9]\n",
      "Image: 10k/1176.jpg, Majority Vote: [1, 5, 0, 9]\n",
      "Image: 10k/1182.jpg, Majority Vote: [6, 4, 0, 10]\n",
      "Image: 10k/1188.jpg, Majority Vote: [1, 4, 0, 11]\n",
      "Image: 10k/1194.jpg, Majority Vote: [5, 9, 0, 8]\n",
      "Image: 10k/120.jpg, Majority Vote: [7, 4, 0, 6]\n",
      "Image: 10k/1200.jpg, Majority Vote: [6, 7, 0, 9]\n",
      "Image: 10k/1205.jpg, Majority Vote: [2, 4, 0, 6]\n",
      "Image: 10k/1211.jpg, Majority Vote: [4]\n",
      "Image: 10k/1217.jpg, Majority Vote: [0]\n",
      "Image: 10k/1223.jpg, Majority Vote: [5, 9, 0, 7]\n",
      "Image: 10k/1229.jpg, Majority Vote: [11, 5, 0, 4]\n",
      "Image: 10k/1235.jpg, Majority Vote: [0]\n",
      "Image: 10k/1240.jpg, Majority Vote: [2]\n",
      "Image: 10k/1246.jpg, Majority Vote: [3, 7, 0, 4]\n",
      "Image: 10k/1252.jpg, Majority Vote: [5, 7, 0, 11]\n",
      "Image: 10k/1258.jpg, Majority Vote: [9, 4, 0, 8]\n",
      "Image: 10k/1264.jpg, Majority Vote: [7]\n",
      "Image: 10k/1270.jpg, Majority Vote: [11, 9, 0, 5]\n",
      "Image: 10k/1275.jpg, Majority Vote: [7, 4, 0, 3]\n",
      "Image: 10k/1281.jpg, Majority Vote: [0]\n",
      "Image: 10k/1287.jpg, Majority Vote: [3, 4, 0, 11]\n",
      "Image: 10k/1293.jpg, Majority Vote: [7]\n",
      "Image: 10k/1299.jpg, Majority Vote: [0]\n",
      "Image: 10k/1305.jpg, Majority Vote: [2, 7, 0, 6]\n",
      "Image: 10k/1310.jpg, Majority Vote: [7, 5, 0, 9]\n",
      "Image: 10k/1316.jpg, Majority Vote: [5, 4, 0, 6]\n",
      "Image: 10k/132.jpg, Majority Vote: [6, 4, 0, 11]\n",
      "Image: 10k/1322.jpg, Majority Vote: [10, 4, 0, 5]\n",
      "Image: 10k/1328.jpg, Majority Vote: [4]\n",
      "Image: 10k/1334.jpg, Majority Vote: [0]\n",
      "Image: 10k/1340.jpg, Majority Vote: [3, 5, 0, 1]\n",
      "Image: 10k/1345.jpg, Majority Vote: [0]\n",
      "Image: 10k/1351.jpg, Majority Vote: [3, 4, 0, 7]\n",
      "Image: 10k/1357.jpg, Majority Vote: [2]\n",
      "Image: 10k/1363.jpg, Majority Vote: [11, 4, 0, 10]\n",
      "Image: 10k/1369.jpg, Majority Vote: [0]\n",
      "Image: 10k/1375.jpg, Majority Vote: [5, 0]\n",
      "Image: 10k/138.jpg, Majority Vote: [7]\n",
      "Image: 10k/1380.jpg, Majority Vote: [5, 7, 0, 3]\n",
      "Image: 10k/1386.jpg, Majority Vote: [4]\n",
      "Image: 10k/1392.jpg, Majority Vote: [7, 5, 0, 6]\n",
      "Image: 10k/1398.jpg, Majority Vote: [4, 5, 0, 1]\n",
      "Image: 10k/1415.jpg, Majority Vote: [3, 4, 0, 11]\n",
      "Image: 10k/1421.jpg, Majority Vote: [4]\n",
      "Image: 10k/1427.jpg, Majority Vote: [3, 9, 0, 7]\n",
      "Image: 10k/1433.jpg, Majority Vote: [0]\n",
      "Image: 10k/1439.jpg, Majority Vote: [6, 4, 0, 1]\n",
      "Image: 10k/144.jpg, Majority Vote: [1]\n",
      "Image: 10k/1445.jpg, Majority Vote: [1, 7, 0, 3]\n",
      "Image: 10k/1450.jpg, Majority Vote: [7, 5, 0, 1]\n",
      "Image: 10k/1456.jpg, Majority Vote: [0]\n",
      "Image: 10k/1462.jpg, Majority Vote: [6, 7, 0, 4]\n",
      "Image: 10k/1468.jpg, Majority Vote: [7, 4, 0, 5]\n",
      "Image: 10k/1474.jpg, Majority Vote: [5]\n",
      "Image: 10k/1480.jpg, Majority Vote: [5, 4, 0, 11]\n",
      "Image: 10k/1485.jpg, Majority Vote: [6, 7, 0, 1]\n",
      "Image: 10k/1491.jpg, Majority Vote: [2, 5, 0, 3]\n",
      "Image: 10k/1497.jpg, Majority Vote: [0]\n",
      "Image: 10k/15.jpg, Majority Vote: [5]\n",
      "Image: 10k/150.jpg, Majority Vote: [2, 4, 0, 6]\n",
      "Image: 10k/1503.jpg, Majority Vote: [9, 4, 0, 3]\n",
      "Image: 10k/1509.jpg, Majority Vote: [7]\n",
      "Image: 10k/1515.jpg, Majority Vote: [5]\n",
      "Image: 10k/1520.jpg, Majority Vote: [0]\n",
      "Image: 10k/1526.jpg, Majority Vote: [1, 4, 0, 2]\n",
      "Image: 10k/1532.jpg, Majority Vote: [4]\n",
      "Image: 10k/1538.jpg, Majority Vote: [11, 4, 0, 3]\n",
      "Image: 10k/1544.jpg, Majority Vote: [9, 4, 0, 8]\n",
      "Image: 10k/155.jpg, Majority Vote: [0]\n",
      "Image: 10k/1550.jpg, Majority Vote: [11, 7, 0, 10]\n",
      "Image: 10k/1555.jpg, Majority Vote: [9, 5, 0, 4]\n",
      "Image: 10k/1561.jpg, Majority Vote: [3, 4, 0, 2]\n",
      "Image: 10k/1567.jpg, Majority Vote: [5]\n",
      "Image: 10k/1573.jpg, Majority Vote: [11, 7, 0, 9]\n",
      "Image: 10k/1579.jpg, Majority Vote: [0]\n",
      "Image: 10k/1585.jpg, Majority Vote: [8, 5, 0, 1]\n",
      "Image: 10k/1590.jpg, Majority Vote: [11, 7, 0, 5]\n",
      "Image: 10k/1596.jpg, Majority Vote: [7, 4, 0, 11]\n",
      "Image: 10k/1602.jpg, Majority Vote: [11, 4, 0, 10]\n",
      "Image: 10k/1608.jpg, Majority Vote: [9, 5, 0, 4]\n",
      "Image: 10k/161.jpg, Majority Vote: [5]\n",
      "Image: 10k/1614.jpg, Majority Vote: [2, 9, 0, 11]\n",
      "Image: 10k/1620.jpg, Majority Vote: [8, 7, 0, 1]\n",
      "Image: 10k/1625.jpg, Majority Vote: [9, 5, 0, 7]\n",
      "Image: 10k/1631.jpg, Majority Vote: [6, 4, 0, 2]\n",
      "Image: 10k/1637.jpg, Majority Vote: [6, 7, 0, 8]\n",
      "Image: 10k/1643.jpg, Majority Vote: [3, 5, 0, 8]\n",
      "Image: 10k/1649.jpg, Majority Vote: [2, 5, 0, 10]\n",
      "Image: 10k/1655.jpg, Majority Vote: [11, 4, 0, 8]\n",
      "Image: 10k/1660.jpg, Majority Vote: [9]\n",
      "Image: 10k/1666.jpg, Majority Vote: [7]\n",
      "Image: 10k/167.jpg, Majority Vote: [6]\n",
      "Image: 10k/1672.jpg, Majority Vote: [5, 4, 0, 1]\n",
      "Image: 10k/1684.jpg, Majority Vote: [0]\n",
      "Image: 10k/1690.jpg, Majority Vote: [3, 4, 0, 7]\n",
      "Image: 10k/1695.jpg, Majority Vote: [6, 5, 0, 10]\n",
      "Image: 10k/1701.jpg, Majority Vote: [6, 4, 0, 3]\n",
      "Image: 10k/1707.jpg, Majority Vote: [4]\n",
      "Image: 10k/1713.jpg, Majority Vote: [6, 7, 0, 3]\n",
      "Image: 10k/1719.jpg, Majority Vote: [5, 7, 0, 2]\n",
      "Image: 10k/1725.jpg, Majority Vote: [2, 4, 0, 9]\n",
      "Image: 10k/173.jpg, Majority Vote: [8]\n",
      "Image: 10k/1730.jpg, Majority Vote: [0]\n",
      "Image: 10k/1736.jpg, Majority Vote: [11, 5, 0, 3]\n",
      "Image: 10k/1742.jpg, Majority Vote: [9]\n",
      "Image: 10k/1754.jpg, Majority Vote: [0]\n",
      "Image: 10k/1771.jpg, Majority Vote: [4]\n",
      "Image: 10k/1777.jpg, Majority Vote: [5, 4, 0, 3]\n",
      "Image: 10k/1783.jpg, Majority Vote: [1, 4, 0, 11]\n",
      "Image: 10k/1789.jpg, Majority Vote: [4]\n",
      "Image: 10k/179.jpg, Majority Vote: [6, 7, 0, 2]\n",
      "Image: 10k/1795.jpg, Majority Vote: [4, 5, 0, 6]\n",
      "Image: 10k/1800.jpg, Majority Vote: [9, 5, 0, 3]\n",
      "Image: 10k/1806.jpg, Majority Vote: [0]\n",
      "Image: 10k/1812.jpg, Majority Vote: [11, 4, 0, 6]\n",
      "Image: 10k/1818.jpg, Majority Vote: [7, 9, 0, 4]\n",
      "Image: 10k/1823.jpg, Majority Vote: [9]\n",
      "Image: 10k/1828.jpg, Majority Vote: [0]\n",
      "Image: 10k/1833.jpg, Majority Vote: [7]\n",
      "Image: 10k/1838.jpg, Majority Vote: [6, 7, 0, 5]\n",
      "Image: 10k/1843.jpg, Majority Vote: [0]\n",
      "Image: 10k/1848.jpg, Majority Vote: [6, 7, 0, 1]\n",
      "Image: 10k/1853.jpg, Majority Vote: [8, 9, 0, 2]\n",
      "Image: 10k/1858.jpg, Majority Vote: [2, 5, 0, 7]\n",
      "Image: 10k/190.jpg, Majority Vote: [9]\n",
      "Image: 10k/196.jpg, Majority Vote: [5, 4, 0, 11]\n",
      "Image: 10k/202.jpg, Majority Vote: [11, 5, 0, 2]\n",
      "Image: 10k/208.jpg, Majority Vote: [9, 4, 0, 2]\n",
      "Image: 10k/21.jpg, Majority Vote: [0]\n",
      "Image: 10k/214.jpg, Majority Vote: [0]\n",
      "Image: 10k/220.jpg, Majority Vote: [0]\n",
      "Image: 10k/225.jpg, Majority Vote: [4]\n",
      "Image: 10k/231.jpg, Majority Vote: [4, 7, 0, 8]\n",
      "Image: 10k/237.jpg, Majority Vote: [2, 4, 0, 7]\n",
      "Image: 10k/243.jpg, Majority Vote: [7, 4, 0, 2]\n",
      "Image: 10k/249.jpg, Majority Vote: [8, 5, 0, 6]\n",
      "Image: 10k/255.jpg, Majority Vote: [5]\n",
      "Image: 10k/260.jpg, Majority Vote: [6, 4, 0, 3]\n",
      "Image: 10k/266.jpg, Majority Vote: [6, 9, 0, 2]\n",
      "Image: 10k/27.jpg, Majority Vote: [5, 4, 0, 9]\n",
      "Image: 10k/272.jpg, Majority Vote: [5]\n",
      "Image: 10k/278.jpg, Majority Vote: [8, 4, 0, 6]\n",
      "Image: 10k/284.jpg, Majority Vote: [7, 0]\n",
      "Image: 10k/290.jpg, Majority Vote: [0]\n",
      "Image: 10k/295.jpg, Majority Vote: [2, 9, 0, 10]\n",
      "Image: 10k/301.jpg, Majority Vote: [4, 7, 0, 6]\n",
      "Image: 10k/307.jpg, Majority Vote: [5]\n",
      "Image: 10k/313.jpg, Majority Vote: [6, 5, 0, 4]\n",
      "Image: 10k/319.jpg, Majority Vote: [4, 7, 0, 5]\n",
      "Image: 10k/325.jpg, Majority Vote: [6, 9, 0, 1]\n",
      "Image: 10k/33.jpg, Majority Vote: [3, 9, 0, 2]\n",
      "Image: 10k/330.jpg, Majority Vote: [7]\n",
      "Image: 10k/336.jpg, Majority Vote: [9]\n",
      "Image: 10k/342.jpg, Majority Vote: [6, 9, 0, 2]\n",
      "Image: 10k/348.jpg, Majority Vote: [6, 4, 0, 10]\n",
      "Image: 10k/354.jpg, Majority Vote: [7]\n",
      "Image: 10k/360.jpg, Majority Vote: [9]\n",
      "Image: 10k/365.jpg, Majority Vote: [4]\n",
      "Image: 10k/371.jpg, Majority Vote: [0]\n",
      "Image: 10k/377.jpg, Majority Vote: [0]\n",
      "Image: 10k/383.jpg, Majority Vote: [0]\n",
      "Image: 10k/389.jpg, Majority Vote: [11, 4, 0, 5]\n",
      "Image: 10k/39.jpg, Majority Vote: [5]\n",
      "Image: 10k/395.jpg, Majority Vote: [7, 5, 0, 2]\n",
      "Image: 10k/4.jpg, Majority Vote: [3, 9, 0, 4]\n",
      "Image: 10k/400.jpg, Majority Vote: [0]\n",
      "Image: 10k/406.jpg, Majority Vote: [6, 4, 0, 11]\n",
      "Image: 10k/412.jpg, Majority Vote: [7]\n",
      "Image: 10k/418.jpg, Majority Vote: [5, 4, 0, 8]\n",
      "Image: 10k/424.jpg, Majority Vote: [8, 7, 0, 9]\n",
      "Image: 10k/430.jpg, Majority Vote: [2, 5, 0, 6]\n",
      "Image: 10k/441.jpg, Majority Vote: [7]\n",
      "Image: 10k/447.jpg, Majority Vote: [5, 4, 0, 3]\n",
      "Image: 10k/453.jpg, Majority Vote: [5]\n",
      "Image: 10k/459.jpg, Majority Vote: [3, 4, 0, 10]\n",
      "Image: 10k/465.jpg, Majority Vote: [8, 9, 0, 4]\n",
      "Image: 10k/470.jpg, Majority Vote: [7, 4, 0, 3]\n",
      "Image: 10k/476.jpg, Majority Vote: [7, 4, 0, 1]\n",
      "Image: 10k/482.jpg, Majority Vote: [9]\n",
      "Image: 10k/488.jpg, Majority Vote: [9, 7, 0, 3]\n",
      "Image: 10k/494.jpg, Majority Vote: [6, 4, 0, 5]\n",
      "Image: 10k/50.jpg, Majority Vote: [0]\n",
      "Image: 10k/500.jpg, Majority Vote: [2, 9, 0, 1]\n",
      "Image: 10k/505.jpg, Majority Vote: [4]\n",
      "Image: 10k/511.jpg, Majority Vote: [11, 5, 0, 8]\n",
      "Image: 10k/517.jpg, Majority Vote: [6, 9, 0, 3]\n",
      "Image: 10k/523.jpg, Majority Vote: [1, 7, 0, 9]\n",
      "Image: 10k/529.jpg, Majority Vote: [5, 9, 0, 7]\n",
      "Image: 10k/535.jpg, Majority Vote: [0]\n",
      "Image: 10k/540.jpg, Majority Vote: [2, 4, 0, 1]\n",
      "Image: 10k/546.jpg, Majority Vote: [9, 4, 0, 5]\n",
      "Image: 10k/552.jpg, Majority Vote: [6, 9, 0, 5]\n",
      "Image: 10k/558.jpg, Majority Vote: [0]\n",
      "Image: 10k/564.jpg, Majority Vote: [1, 4, 0, 7]\n",
      "Image: 10k/570.jpg, Majority Vote: [0]\n",
      "Image: 10k/575.jpg, Majority Vote: [8, 5, 0, 1]\n",
      "Image: 10k/581.jpg, Majority Vote: [11, 9, 0, 5]\n",
      "Image: 10k/587.jpg, Majority Vote: [8, 4, 0, 1]\n",
      "Image: 10k/593.jpg, Majority Vote: [9, 5, 0, 8]\n",
      "Image: 10k/599.jpg, Majority Vote: [8, 5, 0, 2]\n",
      "Image: 10k/605.jpg, Majority Vote: [0]\n",
      "Image: 10k/610.jpg, Majority Vote: [9]\n",
      "Image: 10k/616.jpg, Majority Vote: [0]\n",
      "Image: 10k/62.jpg, Majority Vote: [4, 5, 0, 11]\n",
      "Image: 10k/622.jpg, Majority Vote: [1]\n",
      "Image: 10k/628.jpg, Majority Vote: [5]\n",
      "Image: 10k/634.jpg, Majority Vote: [0]\n",
      "Image: 10k/640.jpg, Majority Vote: [1, 7, 0, 5]\n",
      "Image: 10k/645.jpg, Majority Vote: [1, 7, 0, 11]\n",
      "Image: 10k/651.jpg, Majority Vote: [7, 4, 0, 9]\n",
      "Image: 10k/657.jpg, Majority Vote: [10, 7, 0, 8]\n",
      "Image: 10k/663.jpg, Majority Vote: [2, 9, 0, 4]\n",
      "Image: 10k/669.jpg, Majority Vote: [0]\n",
      "Image: 10k/675.jpg, Majority Vote: [2, 9, 0, 8]\n",
      "Image: 10k/680.jpg, Majority Vote: [9, 5, 0, 3]\n",
      "Image: 10k/686.jpg, Majority Vote: [4]\n",
      "Image: 10k/692.jpg, Majority Vote: [7]\n",
      "Image: 10k/698.jpg, Majority Vote: [4, 7, 0, 9]\n",
      "Image: 10k/704.jpg, Majority Vote: [5]\n",
      "Image: 10k/710.jpg, Majority Vote: [5, 4, 0, 3]\n",
      "Image: 10k/715.jpg, Majority Vote: [8, 4, 0, 1]\n",
      "Image: 10k/721.jpg, Majority Vote: [0]\n",
      "Image: 10k/727.jpg, Majority Vote: [9, 4, 0, 11]\n",
      "Image: 10k/733.jpg, Majority Vote: [1]\n",
      "Image: 10k/739.jpg, Majority Vote: [9, 4, 0, 6]\n",
      "Image: 10k/74.jpg, Majority Vote: [9, 4, 0, 1]\n",
      "Image: 10k/745.jpg, Majority Vote: [5, 4, 0, 10]\n",
      "Image: 10k/750.jpg, Majority Vote: [7]\n",
      "Image: 10k/756.jpg, Majority Vote: [5, 4, 0, 7]\n",
      "Image: 10k/762.jpg, Majority Vote: [7, 5, 0, 9]\n",
      "Image: 10k/768.jpg, Majority Vote: [2]\n",
      "Image: 10k/780.jpg, Majority Vote: [3, 4, 0, 9]\n",
      "Image: 10k/785.jpg, Majority Vote: [4]\n",
      "Image: 10k/791.jpg, Majority Vote: [2]\n",
      "Image: 10k/797.jpg, Majority Vote: [0]\n",
      "Image: 10k/80.jpg, Majority Vote: [5]\n",
      "Image: 10k/803.jpg, Majority Vote: [5]\n",
      "Image: 10k/809.jpg, Majority Vote: [5, 7, 0, 3]\n",
      "Image: 10k/815.jpg, Majority Vote: [6, 5, 0, 9]\n",
      "Image: 10k/820.jpg, Majority Vote: [7]\n",
      "Image: 10k/826.jpg, Majority Vote: [9, 7, 0, 5]\n",
      "Image: 10k/832.jpg, Majority Vote: [0]\n",
      "Image: 10k/844.jpg, Majority Vote: [11]\n",
      "Image: 10k/850.jpg, Majority Vote: [4, 9, 0, 10]\n",
      "Image: 10k/855.jpg, Majority Vote: [2, 4, 0, 3]\n",
      "Image: 10k/861.jpg, Majority Vote: [2, 4, 0, 5]\n",
      "Image: 10k/867.jpg, Majority Vote: [5]\n",
      "Image: 10k/873.jpg, Majority Vote: [5]\n",
      "Image: 10k/879.jpg, Majority Vote: [2, 5, 0, 10]\n",
      "Image: 10k/885.jpg, Majority Vote: [0]\n",
      "Image: 10k/890.jpg, Majority Vote: [11, 4, 0, 1]\n",
      "Image: 10k/896.jpg, Majority Vote: [2, 9, 0, 11]\n",
      "Image: 10k/902.jpg, Majority Vote: [6, 4, 0, 3]\n",
      "Image: 10k/908.jpg, Majority Vote: [4]\n",
      "Image: 10k/91.jpg, Majority Vote: [6, 4, 0, 1]\n",
      "Image: 10k/914.jpg, Majority Vote: [2, 7, 0, 11]\n",
      "Image: 10k/920.jpg, Majority Vote: [4]\n",
      "Image: 10k/925.jpg, Majority Vote: [7, 9, 0, 2]\n",
      "Image: 10k/931.jpg, Majority Vote: [0]\n",
      "Image: 10k/937.jpg, Majority Vote: [4]\n",
      "Image: 10k/943.jpg, Majority Vote: [2, 7, 0, 4]\n",
      "Image: 10k/949.jpg, Majority Vote: [6, 4, 0, 1]\n",
      "Image: 10k/955.jpg, Majority Vote: [6, 5, 0, 4]\n",
      "Image: 10k/960.jpg, Majority Vote: [7, 4, 0, 3]\n",
      "Image: 10k/966.jpg, Majority Vote: [4]\n",
      "Image: 10k/97.jpg, Majority Vote: [2, 9, 0, 3]\n",
      "Image: 10k/972.jpg, Majority Vote: [10, 5, 0, 1]\n",
      "Image: 10k/978.jpg, Majority Vote: [0]\n",
      "Image: 10k/984.jpg, Majority Vote: [7]\n",
      "Image: 10k/990.jpg, Majority Vote: [8, 9, 0, 3]\n",
      "Image: 10k/995.jpg, Majority Vote: [9]\n",
      "Image: 10kf/1000.jpg, Majority Vote: [8, 4, 0, 3]\n",
      "Image: 10kf/1006.jpg, Majority Vote: [8, 4, 0, 9]\n",
      "Image: 10kf/1012.jpg, Majority Vote: [8, 4, 0, 11]\n",
      "Image: 10kf/1018.jpg, Majority Vote: [7, 4, 0, 3]\n",
      "Image: 10kf/102.jpg, Majority Vote: [7]\n",
      "Image: 10kf/1024.jpg, Majority Vote: [4, 7, 0, 10]\n",
      "Image: 10kf/1030.jpg, Majority Vote: [11, 7, 0, 8]\n",
      "Image: 10kf/1035.jpg, Majority Vote: [2, 5, 0, 1]\n",
      "Image: 10kf/1041.jpg, Majority Vote: [6, 7, 0, 9]\n",
      "Image: 10kf/1047.jpg, Majority Vote: [11, 5, 0, 7]\n",
      "Image: 10kf/1053.jpg, Majority Vote: [4]\n",
      "Image: 10kf/1059.jpg, Majority Vote: [5, 4, 0, 7]\n",
      "Image: 10kf/1065.jpg, Majority Vote: [2, 5, 0, 1]\n",
      "Image: 10kf/1070.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1076.jpg, Majority Vote: [6]\n",
      "Image: 10kf/108.jpg, Majority Vote: [9, 7, 0, 1]\n",
      "Image: 10kf/1082.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1088.jpg, Majority Vote: [5, 4, 0, 3]\n",
      "Image: 10kf/1094.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1100.jpg, Majority Vote: [1, 4, 0, 5]\n",
      "Image: 10kf/1105.jpg, Majority Vote: [5]\n",
      "Image: 10kf/1111.jpg, Majority Vote: [7]\n",
      "Image: 10kf/1117.jpg, Majority Vote: [1, 5, 0, 8]\n",
      "Image: 10kf/1123.jpg, Majority Vote: [2, 5, 0, 6]\n",
      "Image: 10kf/1129.jpg, Majority Vote: [8, 4, 0, 6]\n",
      "Image: 10kf/1135.jpg, Majority Vote: [4]\n",
      "Image: 10kf/114.jpg, Majority Vote: [4, 5, 0, 2]\n",
      "Image: 10kf/1140.jpg, Majority Vote: [6, 9, 0, 11]\n",
      "Image: 10kf/1146.jpg, Majority Vote: [3, 9, 0, 2]\n",
      "Image: 10kf/1152.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1158.jpg, Majority Vote: [11, 9, 0, 10]\n",
      "Image: 10kf/1164.jpg, Majority Vote: [5, 4, 0, 3]\n",
      "Image: 10kf/1170.jpg, Majority Vote: [5]\n",
      "Image: 10kf/1175.jpg, Majority Vote: [7, 4, 0, 10]\n",
      "Image: 10kf/1181.jpg, Majority Vote: [11, 4, 0, 2]\n",
      "Image: 10kf/1187.jpg, Majority Vote: [9, 4, 0, 6]\n",
      "Image: 10kf/1193.jpg, Majority Vote: [3, 4, 0, 7]\n",
      "Image: 10kf/1199.jpg, Majority Vote: [5]\n",
      "Image: 10kf/120.jpg, Majority Vote: [1, 4, 0, 2]\n",
      "Image: 10kf/1205.jpg, Majority Vote: [9]\n",
      "Image: 10kf/1210.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1216.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1222.jpg, Majority Vote: [4]\n",
      "Image: 10kf/1228.jpg, Majority Vote: [7]\n",
      "Image: 10kf/1234.jpg, Majority Vote: [2, 7, 0, 1]\n",
      "Image: 10kf/1240.jpg, Majority Vote: [4]\n",
      "Image: 10kf/1245.jpg, Majority Vote: [6]\n",
      "Image: 10kf/125.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1251.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1257.jpg, Majority Vote: [2, 4, 0, 10]\n",
      "Image: 10kf/1263.jpg, Majority Vote: [3, 5, 0, 1]\n",
      "Image: 10kf/1269.jpg, Majority Vote: [5, 9, 0, 2]\n",
      "Image: 10kf/1275.jpg, Majority Vote: [3, 5, 0, 4]\n",
      "Image: 10kf/1280.jpg, Majority Vote: [3, 7, 0, 4]\n",
      "Image: 10kf/1286.jpg, Majority Vote: [6, 4, 0, 5]\n",
      "Image: 10kf/1292.jpg, Majority Vote: [5]\n",
      "Image: 10kf/1298.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1304.jpg, Majority Vote: [2, 4, 0, 7]\n",
      "Image: 10kf/131.jpg, Majority Vote: [2, 5, 0, 6]\n",
      "Image: 10kf/1310.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1315.jpg, Majority Vote: [7]\n",
      "Image: 10kf/1321.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1327.jpg, Majority Vote: [10, 5, 0, 11]\n",
      "Image: 10kf/1333.jpg, Majority Vote: [3, 4, 0, 5]\n",
      "Image: 10kf/1339.jpg, Majority Vote: [5]\n",
      "Image: 10kf/1345.jpg, Majority Vote: [10, 4, 0, 1]\n",
      "Image: 10kf/1350.jpg, Majority Vote: [2, 4, 0, 5]\n",
      "Image: 10kf/1356.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1362.jpg, Majority Vote: [11, 4, 0, 1]\n",
      "Image: 10kf/1368.jpg, Majority Vote: [6, 5, 0, 1]\n",
      "Image: 10kf/137.jpg, Majority Vote: [4]\n",
      "Image: 10kf/1374.jpg, Majority Vote: [7, 4, 0, 10]\n",
      "Image: 10kf/1380.jpg, Majority Vote: [2, 4, 0, 6]\n",
      "Image: 10kf/1385.jpg, Majority Vote: [7, 4, 0, 10]\n",
      "Image: 10kf/1391.jpg, Majority Vote: [11, 4, 0, 9]\n",
      "Image: 10kf/1397.jpg, Majority Vote: [3, 4, 0, 8]\n",
      "Image: 10kf/1403.jpg, Majority Vote: [9, 4, 0, 6]\n",
      "Image: 10kf/1409.jpg, Majority Vote: [7, 4, 0, 11]\n",
      "Image: 10kf/1415.jpg, Majority Vote: [8, 5, 0, 4]\n",
      "Image: 10kf/1420.jpg, Majority Vote: [4, 7, 0, 8]\n",
      "Image: 10kf/1426.jpg, Majority Vote: [0]\n",
      "Image: 10kf/143.jpg, Majority Vote: [5, 0]\n",
      "Image: 10kf/1432.jpg, Majority Vote: [5, 4, 0, 1]\n",
      "Image: 10kf/1438.jpg, Majority Vote: [5]\n",
      "Image: 10kf/1444.jpg, Majority Vote: [10, 4, 0, 2]\n",
      "Image: 10kf/1450.jpg, Majority Vote: [4]\n",
      "Image: 10kf/1455.jpg, Majority Vote: [9]\n",
      "Image: 10kf/1461.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1467.jpg, Majority Vote: [4]\n",
      "Image: 10kf/1473.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1479.jpg, Majority Vote: [6, 4, 0, 7]\n",
      "Image: 10kf/1485.jpg, Majority Vote: [0]\n",
      "Image: 10kf/149.jpg, Majority Vote: [7, 4, 0, 3]\n",
      "Image: 10kf/1490.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1496.jpg, Majority Vote: [3, 7, 0, 2]\n",
      "Image: 10kf/15.jpg, Majority Vote: [11, 5, 0, 4]\n",
      "Image: 10kf/1502.jpg, Majority Vote: [6, 5, 0, 3]\n",
      "Image: 10kf/1508.jpg, Majority Vote: [4, 0]\n",
      "Image: 10kf/1514.jpg, Majority Vote: [9]\n",
      "Image: 10kf/1520.jpg, Majority Vote: [11, 4, 0, 10]\n",
      "Image: 10kf/1525.jpg, Majority Vote: [11]\n",
      "Image: 10kf/1531.jpg, Majority Vote: [6, 5, 0, 7]\n",
      "Image: 10kf/1537.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1543.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1549.jpg, Majority Vote: [0]\n",
      "Image: 10kf/155.jpg, Majority Vote: [2, 4, 0, 6]\n",
      "Image: 10kf/1555.jpg, Majority Vote: [6, 4, 0, 7]\n",
      "Image: 10kf/1560.jpg, Majority Vote: [5, 4, 0, 11]\n",
      "Image: 10kf/1566.jpg, Majority Vote: [6, 4, 0, 10]\n",
      "Image: 10kf/1572.jpg, Majority Vote: [5, 4, 0, 6]\n",
      "Image: 10kf/1578.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1584.jpg, Majority Vote: [6, 5, 0, 1]\n",
      "Image: 10kf/1590.jpg, Majority Vote: [3, 9, 0, 7]\n",
      "Image: 10kf/1595.jpg, Majority Vote: [0]\n",
      "Image: 10kf/160.jpg, Majority Vote: [5]\n",
      "Image: 10kf/1601.jpg, Majority Vote: [5]\n",
      "Image: 10kf/1607.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1613.jpg, Majority Vote: [9]\n",
      "Image: 10kf/1619.jpg, Majority Vote: [7]\n",
      "Image: 10kf/1625.jpg, Majority Vote: [9]\n",
      "Image: 10kf/1630.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1636.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1642.jpg, Majority Vote: [4]\n",
      "Image: 10kf/1648.jpg, Majority Vote: [2, 4, 0, 7]\n",
      "Image: 10kf/1654.jpg, Majority Vote: [4]\n",
      "Image: 10kf/166.jpg, Majority Vote: [11, 4, 0, 9]\n",
      "Image: 10kf/1660.jpg, Majority Vote: [7]\n",
      "Image: 10kf/1665.jpg, Majority Vote: [3, 9, 0, 2]\n",
      "Image: 10kf/1671.jpg, Majority Vote: [11, 4, 0, 6]\n",
      "Image: 10kf/1677.jpg, Majority Vote: [6, 4, 0, 1]\n",
      "Image: 10kf/1683.jpg, Majority Vote: [5, 4, 0, 3]\n",
      "Image: 10kf/1689.jpg, Majority Vote: [2, 4, 0, 5]\n",
      "Image: 10kf/1695.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1700.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1706.jpg, Majority Vote: [1]\n",
      "Image: 10kf/1712.jpg, Majority Vote: [10, 5, 0, 4]\n",
      "Image: 10kf/1718.jpg, Majority Vote: [6, 7, 0, 3]\n",
      "Image: 10kf/172.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1724.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1730.jpg, Majority Vote: [5]\n",
      "Image: 10kf/1735.jpg, Majority Vote: [5]\n",
      "Image: 10kf/1741.jpg, Majority Vote: [6]\n",
      "Image: 10kf/1747.jpg, Majority Vote: [11, 4, 0, 5]\n",
      "Image: 10kf/1753.jpg, Majority Vote: [2]\n",
      "Image: 10kf/1759.jpg, Majority Vote: [11, 4, 0, 3]\n",
      "Image: 10kf/1765.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1770.jpg, Majority Vote: [3, 4, 0, 8]\n",
      "Image: 10kf/1776.jpg, Majority Vote: [6, 5, 0, 2]\n",
      "Image: 10kf/178.jpg, Majority Vote: [11, 4, 0, 3]\n",
      "Image: 10kf/1782.jpg, Majority Vote: [5]\n",
      "Image: 10kf/1788.jpg, Majority Vote: [9, 7, 0, 2]\n",
      "Image: 10kf/1794.jpg, Majority Vote: [11, 4, 0, 5]\n",
      "Image: 10kf/1800.jpg, Majority Vote: [5]\n",
      "Image: 10kf/1805.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1811.jpg, Majority Vote: [4]\n",
      "Image: 10kf/1817.jpg, Majority Vote: [11, 9, 0, 8]\n",
      "Image: 10kf/1823.jpg, Majority Vote: [3, 7, 0, 9]\n",
      "Image: 10kf/1828.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1833.jpg, Majority Vote: [4]\n",
      "Image: 10kf/1838.jpg, Majority Vote: [5, 7, 0, 3]\n",
      "Image: 10kf/184.jpg, Majority Vote: [9]\n",
      "Image: 10kf/1843.jpg, Majority Vote: [6, 5, 0, 9]\n",
      "Image: 10kf/1848.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1853.jpg, Majority Vote: [0]\n",
      "Image: 10kf/1858.jpg, Majority Vote: [11, 4, 0, 5]\n",
      "Image: 10kf/190.jpg, Majority Vote: [5, 4, 0, 11]\n",
      "Image: 10kf/195.jpg, Majority Vote: [7, 4, 0, 1]\n",
      "Image: 10kf/20.jpg, Majority Vote: [5, 4, 0, 1]\n",
      "Image: 10kf/201.jpg, Majority Vote: [10, 5, 0, 7]\n",
      "Image: 10kf/207.jpg, Majority Vote: [0]\n",
      "Image: 10kf/213.jpg, Majority Vote: [0]\n",
      "Image: 10kf/219.jpg, Majority Vote: [8, 7, 0, 3]\n",
      "Image: 10kf/225.jpg, Majority Vote: [1, 5, 0, 8]\n",
      "Image: 10kf/230.jpg, Majority Vote: [0]\n",
      "Image: 10kf/236.jpg, Majority Vote: [2, 4, 0, 3]\n",
      "Image: 10kf/242.jpg, Majority Vote: [6, 4, 0, 3]\n",
      "Image: 10kf/248.jpg, Majority Vote: [0]\n",
      "Image: 10kf/254.jpg, Majority Vote: [6, 4, 0, 2]\n",
      "Image: 10kf/26.jpg, Majority Vote: [1, 9, 0, 2]\n",
      "Image: 10kf/260.jpg, Majority Vote: [0]\n",
      "Image: 10kf/265.jpg, Majority Vote: [6, 5, 0, 1]\n",
      "Image: 10kf/271.jpg, Majority Vote: [6]\n",
      "Image: 10kf/277.jpg, Majority Vote: [8, 9, 0, 5]\n",
      "Image: 10kf/283.jpg, Majority Vote: [3, 5, 0, 1]\n",
      "Image: 10kf/289.jpg, Majority Vote: [0]\n",
      "Image: 10kf/295.jpg, Majority Vote: [8, 4, 0, 6]\n",
      "Image: 10kf/3.jpg, Majority Vote: [2, 5, 0, 4]\n",
      "Image: 10kf/300.jpg, Majority Vote: [5, 4, 0, 6]\n",
      "Image: 10kf/306.jpg, Majority Vote: [0]\n",
      "Image: 10kf/312.jpg, Majority Vote: [1, 5, 0, 2]\n",
      "Image: 10kf/318.jpg, Majority Vote: [4]\n",
      "Image: 10kf/32.jpg, Majority Vote: [0]\n",
      "Image: 10kf/324.jpg, Majority Vote: [7, 4, 0, 11]\n",
      "Image: 10kf/330.jpg, Majority Vote: [6, 5, 0, 9]\n",
      "Image: 10kf/335.jpg, Majority Vote: [8, 4, 0, 11]\n",
      "Image: 10kf/341.jpg, Majority Vote: [0]\n",
      "Image: 10kf/347.jpg, Majority Vote: [9, 7, 0, 3]\n",
      "Image: 10kf/353.jpg, Majority Vote: [10, 4, 0, 1]\n",
      "Image: 10kf/359.jpg, Majority Vote: [5]\n",
      "Image: 10kf/365.jpg, Majority Vote: [0]\n",
      "Image: 10kf/370.jpg, Majority Vote: [7, 4, 0, 5]\n",
      "Image: 10kf/376.jpg, Majority Vote: [4]\n",
      "Image: 10kf/38.jpg, Majority Vote: [0, 4]\n",
      "Image: 10kf/382.jpg, Majority Vote: [5, 4, 0, 8]\n",
      "Image: 10kf/388.jpg, Majority Vote: [1, 5, 0, 3]\n",
      "Image: 10kf/394.jpg, Majority Vote: [8, 4, 0, 9]\n",
      "Image: 10kf/400.jpg, Majority Vote: [2, 7, 0, 3]\n",
      "Image: 10kf/405.jpg, Majority Vote: [4, 7, 0, 5]\n",
      "Image: 10kf/411.jpg, Majority Vote: [7, 5, 0, 10]\n",
      "Image: 10kf/417.jpg, Majority Vote: [3, 4, 0, 1]\n",
      "Image: 10kf/423.jpg, Majority Vote: [0, 9]\n",
      "Image: 10kf/429.jpg, Majority Vote: [0]\n",
      "Image: 10kf/435.jpg, Majority Vote: [7, 4, 0, 6]\n",
      "Image: 10kf/44.jpg, Majority Vote: [3, 5, 0, 4]\n",
      "Image: 10kf/440.jpg, Majority Vote: [5, 7, 0, 4]\n",
      "Image: 10kf/446.jpg, Majority Vote: [0]\n",
      "Image: 10kf/452.jpg, Majority Vote: [4]\n",
      "Image: 10kf/458.jpg, Majority Vote: [2, 5, 0, 9]\n",
      "Image: 10kf/464.jpg, Majority Vote: [2, 5, 0, 6]\n",
      "Image: 10kf/470.jpg, Majority Vote: [2, 7, 0, 1]\n",
      "Image: 10kf/475.jpg, Majority Vote: [4]\n",
      "Image: 10kf/481.jpg, Majority Vote: [9]\n",
      "Image: 10kf/487.jpg, Majority Vote: [9]\n",
      "Image: 10kf/493.jpg, Majority Vote: [0]\n",
      "Image: 10kf/499.jpg, Majority Vote: [1]\n",
      "Image: 10kf/50.jpg, Majority Vote: [8, 4, 0, 5]\n",
      "Image: 10kf/505.jpg, Majority Vote: [3, 4, 0, 7]\n",
      "Image: 10kf/510.jpg, Majority Vote: [8, 4, 0, 11]\n",
      "Image: 10kf/516.jpg, Majority Vote: [1, 4, 0, 9]\n",
      "Image: 10kf/522.jpg, Majority Vote: [9]\n",
      "Image: 10kf/528.jpg, Majority Vote: [3, 4, 0, 1]\n",
      "Image: 10kf/534.jpg, Majority Vote: [8, 4, 0, 7]\n",
      "Image: 10kf/540.jpg, Majority Vote: [7, 4, 0, 11]\n",
      "Image: 10kf/545.jpg, Majority Vote: [10, 4, 0, 3]\n",
      "Image: 10kf/55.jpg, Majority Vote: [9, 4, 0, 6]\n",
      "Image: 10kf/551.jpg, Majority Vote: [4, 9, 0, 1]\n",
      "Image: 10kf/557.jpg, Majority Vote: [5, 4, 0, 11]\n",
      "Image: 10kf/563.jpg, Majority Vote: [11, 9, 0, 5]\n",
      "Image: 10kf/569.jpg, Majority Vote: [2, 5, 0, 10]\n",
      "Image: 10kf/575.jpg, Majority Vote: [3, 4, 0, 10]\n",
      "Image: 10kf/580.jpg, Majority Vote: [5, 7, 0, 11]\n",
      "Image: 10kf/586.jpg, Majority Vote: [4, 5, 0, 11]\n",
      "Image: 10kf/592.jpg, Majority Vote: [5, 9, 0, 6]\n",
      "Image: 10kf/598.jpg, Majority Vote: [7, 9, 0, 4]\n",
      "Image: 10kf/604.jpg, Majority Vote: [7, 4, 0, 9]\n",
      "Image: 10kf/61.jpg, Majority Vote: [11, 5, 0, 1]\n",
      "Image: 10kf/610.jpg, Majority Vote: [2, 7, 0, 8]\n",
      "Image: 10kf/615.jpg, Majority Vote: [3]\n",
      "Image: 10kf/621.jpg, Majority Vote: [9, 5, 0, 7]\n",
      "Image: 10kf/627.jpg, Majority Vote: [6, 9, 0, 1]\n",
      "Image: 10kf/633.jpg, Majority Vote: [7, 4, 0, 10]\n",
      "Image: 10kf/639.jpg, Majority Vote: [6, 4, 0, 9]\n",
      "Image: 10kf/645.jpg, Majority Vote: [11, 4, 0, 3]\n",
      "Image: 10kf/650.jpg, Majority Vote: [5, 4, 0, 11]\n",
      "Image: 10kf/656.jpg, Majority Vote: [8, 4, 0, 11]\n",
      "Image: 10kf/662.jpg, Majority Vote: [7]\n",
      "Image: 10kf/668.jpg, Majority Vote: [9, 4, 0, 6]\n",
      "Image: 10kf/67.jpg, Majority Vote: [4, 7, 0, 1]\n",
      "Image: 10kf/674.jpg, Majority Vote: [10, 4, 0, 2]\n",
      "Image: 10kf/680.jpg, Majority Vote: [1, 4, 0, 6]\n",
      "Image: 10kf/685.jpg, Majority Vote: [0]\n",
      "Image: 10kf/691.jpg, Majority Vote: [3, 9, 0, 11]\n",
      "Image: 10kf/697.jpg, Majority Vote: [6]\n",
      "Image: 10kf/703.jpg, Majority Vote: [11, 4, 0, 5]\n",
      "Image: 10kf/709.jpg, Majority Vote: [6, 4, 0, 2]\n",
      "Image: 10kf/715.jpg, Majority Vote: [3, 4, 0, 6]\n",
      "Image: 10kf/720.jpg, Majority Vote: [0]\n",
      "Image: 10kf/726.jpg, Majority Vote: [3, 9, 0, 6]\n",
      "Image: 10kf/73.jpg, Majority Vote: [2, 5, 0, 9]\n",
      "Image: 10kf/732.jpg, Majority Vote: [0]\n",
      "Image: 10kf/738.jpg, Majority Vote: [0]\n",
      "Image: 10kf/744.jpg, Majority Vote: [7, 5, 0, 6]\n",
      "Image: 10kf/750.jpg, Majority Vote: [6, 4, 0, 11]\n",
      "Image: 10kf/755.jpg, Majority Vote: [5, 9, 0, 7]\n",
      "Image: 10kf/761.jpg, Majority Vote: [4]\n",
      "Image: 10kf/767.jpg, Majority Vote: [1, 4, 0, 3]\n",
      "Image: 10kf/773.jpg, Majority Vote: [6, 9, 0, 8]\n",
      "Image: 10kf/779.jpg, Majority Vote: [11, 5, 0, 8]\n",
      "Image: 10kf/785.jpg, Majority Vote: [11, 4, 0, 10]\n",
      "Image: 10kf/79.jpg, Majority Vote: [2, 7, 0, 11]\n",
      "Image: 10kf/790.jpg, Majority Vote: [2, 4, 0, 6]\n",
      "Image: 10kf/796.jpg, Majority Vote: [4]\n",
      "Image: 10kf/802.jpg, Majority Vote: [4, 9, 0, 10]\n",
      "Image: 10kf/808.jpg, Majority Vote: [6, 4, 0, 3]\n",
      "Image: 10kf/814.jpg, Majority Vote: [11, 7, 0, 5]\n",
      "Image: 10kf/820.jpg, Majority Vote: [1, 4, 0, 5]\n",
      "Image: 10kf/825.jpg, Majority Vote: [4, 9, 0, 7]\n",
      "Image: 10kf/831.jpg, Majority Vote: [9, 4, 0, 6]\n",
      "Image: 10kf/837.jpg, Majority Vote: [2, 4, 0, 3]\n",
      "Image: 10kf/843.jpg, Majority Vote: [7, 4, 0, 2]\n",
      "Image: 10kf/849.jpg, Majority Vote: [6, 5, 0, 3]\n",
      "Image: 10kf/85.jpg, Majority Vote: [1, 9, 0, 4]\n",
      "Image: 10kf/855.jpg, Majority Vote: [8, 4, 0, 10]\n",
      "Image: 10kf/860.jpg, Majority Vote: [11, 7, 0, 3]\n",
      "Image: 10kf/866.jpg, Majority Vote: [9, 4, 0, 3]\n",
      "Image: 10kf/872.jpg, Majority Vote: [9, 4, 0, 7]\n",
      "Image: 10kf/878.jpg, Majority Vote: [5]\n",
      "Image: 10kf/884.jpg, Majority Vote: [0]\n",
      "Image: 10kf/890.jpg, Majority Vote: [6, 5, 0, 4]\n",
      "Image: 10kf/895.jpg, Majority Vote: [5]\n",
      "Image: 10kf/9.jpg, Majority Vote: [3, 4, 0, 2]\n",
      "Image: 10kf/90.jpg, Majority Vote: [7, 4, 0, 8]\n",
      "Image: 10kf/901.jpg, Majority Vote: [4]\n",
      "Image: 10kf/907.jpg, Majority Vote: [1, 4, 0, 7]\n",
      "Image: 10kf/913.jpg, Majority Vote: [11, 4, 0, 3]\n",
      "Image: 10kf/919.jpg, Majority Vote: [3, 7, 0, 1]\n",
      "Image: 10kf/925.jpg, Majority Vote: [0]\n",
      "Image: 10kf/930.jpg, Majority Vote: [6, 4, 0, 9]\n",
      "Image: 10kf/936.jpg, Majority Vote: [9, 4, 0, 6]\n",
      "Image: 10kf/942.jpg, Majority Vote: [0]\n",
      "Image: 10kf/948.jpg, Majority Vote: [2]\n",
      "Image: 10kf/954.jpg, Majority Vote: [11, 4, 0, 7]\n",
      "Image: 10kf/96.jpg, Majority Vote: [9, 5, 0, 7]\n",
      "Image: 10kf/960.jpg, Majority Vote: [4, 5, 0, 10]\n",
      "Image: 10kf/965.jpg, Majority Vote: [2, 9, 0, 8]\n",
      "Image: 10kf/971.jpg, Majority Vote: [0]\n",
      "Image: 10kf/977.jpg, Majority Vote: [0]\n",
      "Image: 10kf/983.jpg, Majority Vote: [2, 7, 0, 8]\n",
      "Image: 10kf/989.jpg, Majority Vote: [5, 4, 0, 2]\n",
      "Image: 10kf/995.jpg, Majority Vote: [6, 4, 0, 8]\n",
      "Image: 50k/1001.jpg, Majority Vote: [1, 5, 0, 9]\n",
      "Image: 50k/1007.jpg, Majority Vote: [0]\n",
      "Image: 50k/1012.jpg, Majority Vote: [10, 7, 0, 2]\n",
      "Image: 50k/1018.jpg, Majority Vote: [0]\n",
      "Image: 50k/102.jpg, Majority Vote: [9, 5, 0, 6]\n",
      "Image: 50k/1024.jpg, Majority Vote: [0]\n",
      "Image: 50k/1030.jpg, Majority Vote: [6, 9, 0, 2]\n",
      "Image: 50k/1036.jpg, Majority Vote: [2, 4, 0, 8]\n",
      "Image: 50k/1042.jpg, Majority Vote: [7, 4, 0, 3]\n",
      "Image: 50k/1047.jpg, Majority Vote: [1]\n",
      "Image: 50k/1053.jpg, Majority Vote: [0]\n",
      "Image: 50k/1059.jpg, Majority Vote: [2, 4, 0, 9]\n",
      "Image: 50k/1071.jpg, Majority Vote: [10, 4, 0, 9]\n",
      "Image: 50k/1077.jpg, Majority Vote: [7, 4, 0, 5]\n",
      "Image: 50k/108.jpg, Majority Vote: [2, 4, 0, 5]\n",
      "Image: 50k/1088.jpg, Majority Vote: [0]\n",
      "Image: 50k/1094.jpg, Majority Vote: [5, 4, 0, 11]\n",
      "Image: 50k/1100.jpg, Majority Vote: [4, 5, 0, 6]\n",
      "Image: 50k/1106.jpg, Majority Vote: [2, 7, 0, 10]\n",
      "Image: 50k/1112.jpg, Majority Vote: [9, 4, 0, 3]\n",
      "Image: 50k/1123.jpg, Majority Vote: [8, 4, 0, 1]\n",
      "Image: 50k/1135.jpg, Majority Vote: [9, 4, 0, 11]\n",
      "Image: 50k/114.jpg, Majority Vote: [8, 7, 0, 5]\n",
      "Image: 50k/1147.jpg, Majority Vote: [0]\n",
      "Image: 50k/1152.jpg, Majority Vote: [7, 4, 0, 9]\n",
      "Image: 50k/1158.jpg, Majority Vote: [2, 4, 0, 9]\n",
      "Image: 50k/1164.jpg, Majority Vote: [7, 4, 0, 3]\n",
      "Image: 50k/1170.jpg, Majority Vote: [0]\n",
      "Image: 50k/1182.jpg, Majority Vote: [5, 4, 0, 9]\n",
      "Image: 50k/1193.jpg, Majority Vote: [5, 9, 0, 6]\n",
      "Image: 50k/1199.jpg, Majority Vote: [0]\n",
      "Image: 50k/120.jpg, Majority Vote: [8, 5, 0, 3]\n",
      "Image: 50k/1205.jpg, Majority Vote: [9]\n",
      "Image: 50k/1211.jpg, Majority Vote: [5, 4, 0, 3]\n",
      "Image: 50k/1217.jpg, Majority Vote: [11, 4, 0, 5]\n",
      "Image: 50k/1222.jpg, Majority Vote: [6, 4, 0, 10]\n",
      "Image: 50k/1234.jpg, Majority Vote: [0, 4]\n",
      "Image: 50k/1240.jpg, Majority Vote: [1, 7, 0, 4]\n",
      "Image: 50k/1252.jpg, Majority Vote: [3, 9, 0, 7]\n",
      "Image: 50k/1257.jpg, Majority Vote: [9, 4, 0, 10]\n",
      "Image: 50k/126.jpg, Majority Vote: [7, 5, 0, 10]\n",
      "Image: 50k/1263.jpg, Majority Vote: [6, 4, 0, 1]\n",
      "Image: 50k/1269.jpg, Majority Vote: [8, 9, 0, 5]\n",
      "Image: 50k/1275.jpg, Majority Vote: [3, 5, 0, 9]\n",
      "Image: 50k/1281.jpg, Majority Vote: [4, 5, 0, 9]\n",
      "Image: 50k/1287.jpg, Majority Vote: [11, 4, 0, 6]\n",
      "Image: 50k/1292.jpg, Majority Vote: [2, 5, 0, 1]\n",
      "Image: 50k/1298.jpg, Majority Vote: [6, 7, 0, 10]\n",
      "Image: 50k/1304.jpg, Majority Vote: [7]\n",
      "Image: 50k/1310.jpg, Majority Vote: [8, 7, 0, 6]\n",
      "Image: 50k/1316.jpg, Majority Vote: [11]\n",
      "Image: 50k/132.jpg, Majority Vote: [2, 5, 0, 6]\n",
      "Image: 50k/1322.jpg, Majority Vote: [4]\n",
      "Image: 50k/1333.jpg, Majority Vote: [9, 5, 0, 6]\n",
      "Image: 50k/1339.jpg, Majority Vote: [3]\n",
      "Image: 50k/1345.jpg, Majority Vote: [6, 4, 0, 3]\n",
      "Image: 50k/1351.jpg, Majority Vote: [6, 5, 0, 9]\n",
      "Image: 50k/1357.jpg, Majority Vote: [1, 4, 0, 8]\n",
      "Image: 50k/1362.jpg, Majority Vote: [0]\n",
      "Image: 50k/1368.jpg, Majority Vote: [5]\n",
      "Image: 50k/137.jpg, Majority Vote: [6, 7, 0, 10]\n",
      "Image: 50k/1374.jpg, Majority Vote: [0]\n",
      "Image: 50k/1380.jpg, Majority Vote: [7, 4, 0, 1]\n",
      "Image: 50k/1386.jpg, Majority Vote: [0]\n",
      "Image: 50k/1392.jpg, Majority Vote: [0]\n",
      "Image: 50k/1397.jpg, Majority Vote: [5]\n",
      "Image: 50k/1403.jpg, Majority Vote: [5]\n",
      "Image: 50k/1409.jpg, Majority Vote: [8, 5, 0, 10]\n",
      "Image: 50k/1415.jpg, Majority Vote: [11, 7, 0, 1]\n",
      "Image: 50k/1421.jpg, Majority Vote: [3, 5, 0, 9]\n",
      "Image: 50k/1427.jpg, Majority Vote: [1, 4, 0, 2]\n",
      "Image: 50k/143.jpg, Majority Vote: [6, 4, 0, 2]\n",
      "Image: 50k/1432.jpg, Majority Vote: [0]\n",
      "Image: 50k/1438.jpg, Majority Vote: [5, 4, 0, 11]\n",
      "Image: 50k/1444.jpg, Majority Vote: [1, 5, 0, 8]\n",
      "Image: 50k/1450.jpg, Majority Vote: [0]\n",
      "Image: 50k/1456.jpg, Majority Vote: [3, 5, 0, 9]\n",
      "Image: 50k/1462.jpg, Majority Vote: [10, 4, 0, 6]\n",
      "Image: 50k/1467.jpg, Majority Vote: [5, 9, 0, 7]\n",
      "Image: 50k/1473.jpg, Majority Vote: [0]\n",
      "Image: 50k/1479.jpg, Majority Vote: [9, 7, 0, 3]\n",
      "Image: 50k/1485.jpg, Majority Vote: [7]\n",
      "Image: 50k/149.jpg, Majority Vote: [0]\n",
      "Image: 50k/1491.jpg, Majority Vote: [2, 4, 0, 5]\n",
      "Image: 50k/1497.jpg, Majority Vote: [2, 4, 0, 3]\n",
      "Image: 50k/15.jpg, Majority Vote: [11, 5, 0, 1]\n",
      "Image: 50k/1502.jpg, Majority Vote: [11, 4, 0, 5]\n",
      "Image: 50k/1508.jpg, Majority Vote: [10, 4, 0, 6]\n",
      "Image: 50k/1514.jpg, Majority Vote: [6, 4, 0, 11]\n",
      "Image: 50k/1520.jpg, Majority Vote: [0]\n",
      "Image: 50k/1526.jpg, Majority Vote: [4]\n",
      "Image: 50k/1532.jpg, Majority Vote: [8, 5, 0, 4]\n",
      "Image: 50k/1537.jpg, Majority Vote: [6, 5, 0, 8]\n",
      "Image: 50k/1543.jpg, Majority Vote: [7, 9, 0, 10]\n",
      "Image: 50k/155.jpg, Majority Vote: [7, 4, 0, 6]\n",
      "Image: 50k/1555.jpg, Majority Vote: [1, 7, 0, 2]\n",
      "Image: 50k/1561.jpg, Majority Vote: [4]\n",
      "Image: 50k/1567.jpg, Majority Vote: [7, 5, 0, 8]\n",
      "Image: 50k/1572.jpg, Majority Vote: [6, 5, 0, 1]\n",
      "Image: 50k/1578.jpg, Majority Vote: [2, 7, 0, 10]\n",
      "Image: 50k/1584.jpg, Majority Vote: [7, 9, 0, 4]\n",
      "Image: 50k/1590.jpg, Majority Vote: [6, 9, 0, 1]\n",
      "Image: 50k/1596.jpg, Majority Vote: [1, 4, 0, 9]\n",
      "Image: 50k/1602.jpg, Majority Vote: [3, 7, 0, 6]\n",
      "Image: 50k/1607.jpg, Majority Vote: [11, 4, 0, 8]\n",
      "Image: 50k/161.jpg, Majority Vote: [2, 9, 0, 5]\n",
      "Image: 50k/1613.jpg, Majority Vote: [2, 7, 0, 9]\n",
      "Image: 50k/1619.jpg, Majority Vote: [11, 9, 0, 1]\n",
      "Image: 50k/1625.jpg, Majority Vote: [3, 4, 0, 2]\n",
      "Image: 50k/1631.jpg, Majority Vote: [7, 5, 0, 3]\n",
      "Image: 50k/1637.jpg, Majority Vote: [0]\n",
      "Image: 50k/1642.jpg, Majority Vote: [5, 7, 0, 4]\n",
      "Image: 50k/1648.jpg, Majority Vote: [4]\n",
      "Image: 50k/1654.jpg, Majority Vote: [7, 5, 0, 11]\n",
      "Image: 50k/1660.jpg, Majority Vote: [9, 4, 0, 2]\n",
      "Image: 50k/1666.jpg, Majority Vote: [8, 4, 0, 11]\n",
      "Image: 50k/167.jpg, Majority Vote: [0]\n",
      "Image: 50k/1672.jpg, Majority Vote: [1, 4, 0, 3]\n",
      "Image: 50k/1677.jpg, Majority Vote: [3, 9, 0, 6]\n",
      "Image: 50k/1689.jpg, Majority Vote: [8, 7, 0, 5]\n",
      "Image: 50k/1707.jpg, Majority Vote: [0]\n",
      "Image: 50k/1712.jpg, Majority Vote: [2, 9, 0, 5]\n",
      "Image: 50k/1718.jpg, Majority Vote: [7, 5, 0, 2]\n",
      "Image: 50k/172.jpg, Majority Vote: [4, 7, 0, 5]\n",
      "Image: 50k/1724.jpg, Majority Vote: [4]\n",
      "Image: 50k/1730.jpg, Majority Vote: [3, 5, 0, 1]\n",
      "Image: 50k/1736.jpg, Majority Vote: [6, 4, 0, 11]\n",
      "Image: 50k/1742.jpg, Majority Vote: [3, 4, 0, 5]\n",
      "Image: 50k/1747.jpg, Majority Vote: [0]\n",
      "Image: 50k/1753.jpg, Majority Vote: [9]\n",
      "Image: 50k/1759.jpg, Majority Vote: [3, 5, 0, 11]\n",
      "Image: 50k/1765.jpg, Majority Vote: [2, 4, 0, 1]\n",
      "Image: 50k/1771.jpg, Majority Vote: [1, 5, 0, 4]\n",
      "Image: 50k/1777.jpg, Majority Vote: [2, 5, 0, 3]\n",
      "Image: 50k/178.jpg, Majority Vote: [4]\n",
      "Image: 50k/1788.jpg, Majority Vote: [7]\n",
      "Image: 50k/1794.jpg, Majority Vote: [4]\n",
      "Image: 50k/1800.jpg, Majority Vote: [6, 7, 0, 5]\n",
      "Image: 50k/1806.jpg, Majority Vote: [9, 4, 0, 2]\n",
      "Image: 50k/1812.jpg, Majority Vote: [3, 4, 0, 9]\n",
      "Image: 50k/1817.jpg, Majority Vote: [9, 4, 0, 10]\n",
      "Image: 50k/1828.jpg, Majority Vote: [6, 7, 0, 9]\n",
      "Image: 50k/1833.jpg, Majority Vote: [8, 5, 0, 7]\n",
      "Image: 50k/1838.jpg, Majority Vote: [9]\n",
      "Image: 50k/184.jpg, Majority Vote: [9, 5, 0, 7]\n",
      "Image: 50k/1843.jpg, Majority Vote: [11, 5, 0, 1]\n",
      "Image: 50k/1848.jpg, Majority Vote: [4]\n",
      "Image: 50k/1853.jpg, Majority Vote: [3, 4, 0, 5]\n",
      "Image: 50k/1858.jpg, Majority Vote: [5]\n",
      "Image: 50k/190.jpg, Majority Vote: [2]\n",
      "Image: 50k/196.jpg, Majority Vote: [1, 4, 0, 8]\n",
      "Image: 50k/202.jpg, Majority Vote: [0]\n",
      "Image: 50k/207.jpg, Majority Vote: [9, 7, 0, 6]\n",
      "Image: 50k/21.jpg, Majority Vote: [4]\n",
      "Image: 50k/213.jpg, Majority Vote: [5]\n",
      "Image: 50k/219.jpg, Majority Vote: [0]\n",
      "Image: 50k/225.jpg, Majority Vote: [11, 5, 0, 8]\n",
      "Image: 50k/231.jpg, Majority Vote: [2, 7, 0, 10]\n",
      "Image: 50k/237.jpg, Majority Vote: [7, 5, 0, 9]\n",
      "Image: 50k/242.jpg, Majority Vote: [7]\n",
      "Image: 50k/248.jpg, Majority Vote: [8, 9, 0, 2]\n",
      "Image: 50k/254.jpg, Majority Vote: [7]\n",
      "Image: 50k/260.jpg, Majority Vote: [7, 4, 0, 3]\n",
      "Image: 50k/266.jpg, Majority Vote: [5]\n",
      "Image: 50k/27.jpg, Majority Vote: [9, 5, 0, 7]\n",
      "Image: 50k/272.jpg, Majority Vote: [11, 4, 0, 3]\n",
      "Image: 50k/277.jpg, Majority Vote: [3, 4, 0, 9]\n",
      "Image: 50k/283.jpg, Majority Vote: [11, 5, 0, 6]\n",
      "Image: 50k/289.jpg, Majority Vote: [11, 7, 0, 3]\n",
      "Image: 50k/295.jpg, Majority Vote: [4]\n",
      "Image: 50k/3.jpg, Majority Vote: [11, 4, 0, 9]\n",
      "Image: 50k/301.jpg, Majority Vote: [8, 4, 0, 11]\n",
      "Image: 50k/307.jpg, Majority Vote: [9, 4, 0, 10]\n",
      "Image: 50k/312.jpg, Majority Vote: [8, 5, 0, 6]\n",
      "Image: 50k/318.jpg, Majority Vote: [0]\n",
      "Image: 50k/32.jpg, Majority Vote: [0]\n",
      "Image: 50k/324.jpg, Majority Vote: [5, 4, 0, 3]\n",
      "Image: 50k/330.jpg, Majority Vote: [7, 4, 0, 8]\n",
      "Image: 50k/336.jpg, Majority Vote: [1, 4, 0, 6]\n",
      "Image: 50k/342.jpg, Majority Vote: [3, 5, 0, 6]\n",
      "Image: 50k/347.jpg, Majority Vote: [1, 5, 0, 7]\n",
      "Image: 50k/353.jpg, Majority Vote: [2, 7, 0, 3]\n",
      "Image: 50k/359.jpg, Majority Vote: [5]\n",
      "Image: 50k/365.jpg, Majority Vote: [2, 7, 0, 3]\n",
      "Image: 50k/371.jpg, Majority Vote: [9, 5, 0, 11]\n",
      "Image: 50k/377.jpg, Majority Vote: [4]\n",
      "Image: 50k/38.jpg, Majority Vote: [0]\n",
      "Image: 50k/382.jpg, Majority Vote: [4]\n",
      "Image: 50k/388.jpg, Majority Vote: [2, 4, 0, 1]\n",
      "Image: 50k/394.jpg, Majority Vote: [6, 4, 0, 9]\n",
      "Image: 50k/400.jpg, Majority Vote: [3, 7, 0, 1]\n",
      "Image: 50k/406.jpg, Majority Vote: [8, 5, 0, 6]\n",
      "Image: 50k/412.jpg, Majority Vote: [9, 7, 0, 11]\n",
      "Image: 50k/417.jpg, Majority Vote: [8, 4, 0, 3]\n",
      "Image: 50k/423.jpg, Majority Vote: [0]\n",
      "Image: 50k/429.jpg, Majority Vote: [3, 4, 0, 1]\n",
      "Image: 50k/435.jpg, Majority Vote: [7]\n",
      "Image: 50k/44.jpg, Majority Vote: [0]\n",
      "Image: 50k/441.jpg, Majority Vote: [6, 7, 0, 11]\n",
      "Image: 50k/447.jpg, Majority Vote: [6, 4, 0, 1]\n",
      "Image: 50k/452.jpg, Majority Vote: [3, 5, 0, 9]\n",
      "Image: 50k/458.jpg, Majority Vote: [2]\n",
      "Image: 50k/464.jpg, Majority Vote: [6, 7, 0, 9]\n",
      "Image: 50k/470.jpg, Majority Vote: [11, 4, 0, 6]\n",
      "Image: 50k/476.jpg, Majority Vote: [10]\n",
      "Image: 50k/482.jpg, Majority Vote: [2, 5, 0, 11]\n",
      "Image: 50k/487.jpg, Majority Vote: [4]\n",
      "Image: 50k/493.jpg, Majority Vote: [0]\n",
      "Image: 50k/499.jpg, Majority Vote: [11, 5, 0, 9]\n",
      "Image: 50k/50.jpg, Majority Vote: [11, 7, 0, 9]\n",
      "Image: 50k/505.jpg, Majority Vote: [9]\n",
      "Image: 50k/511.jpg, Majority Vote: [1, 7, 0, 11]\n",
      "Image: 50k/517.jpg, Majority Vote: [7]\n",
      "Image: 50k/522.jpg, Majority Vote: [1, 4, 0, 8]\n",
      "Image: 50k/528.jpg, Majority Vote: [2, 4, 0, 1]\n",
      "Image: 50k/534.jpg, Majority Vote: [6]\n",
      "Image: 50k/540.jpg, Majority Vote: [6, 7, 0, 2]\n",
      "Image: 50k/546.jpg, Majority Vote: [2, 7, 0, 4]\n",
      "Image: 50k/552.jpg, Majority Vote: [7]\n",
      "Image: 50k/557.jpg, Majority Vote: [1]\n",
      "Image: 50k/56.jpg, Majority Vote: [6, 4, 0, 11]\n",
      "Image: 50k/563.jpg, Majority Vote: [3, 4, 0, 5]\n",
      "Image: 50k/569.jpg, Majority Vote: [0, 4]\n",
      "Image: 50k/575.jpg, Majority Vote: [8, 4, 0, 10]\n",
      "Image: 50k/581.jpg, Majority Vote: [6, 5, 0, 1]\n",
      "Image: 50k/587.jpg, Majority Vote: [7, 9, 0, 2]\n",
      "Image: 50k/592.jpg, Majority Vote: [6, 4, 0, 2]\n",
      "Image: 50k/598.jpg, Majority Vote: [0]\n",
      "Image: 50k/604.jpg, Majority Vote: [3, 9, 0, 11]\n",
      "Image: 50k/610.jpg, Majority Vote: [10, 4, 0, 9]\n",
      "Image: 50k/616.jpg, Majority Vote: [9, 4, 0, 8]\n",
      "Image: 50k/62.jpg, Majority Vote: [11, 7, 0, 6]\n",
      "Image: 50k/622.jpg, Majority Vote: [8, 4, 0, 7]\n",
      "Image: 50k/627.jpg, Majority Vote: [4]\n",
      "Image: 50k/633.jpg, Majority Vote: [1, 5, 0, 7]\n",
      "Image: 50k/639.jpg, Majority Vote: [3]\n",
      "Image: 50k/645.jpg, Majority Vote: [11]\n",
      "Image: 50k/651.jpg, Majority Vote: [5, 4, 0, 11]\n",
      "Image: 50k/657.jpg, Majority Vote: [0]\n",
      "Image: 50k/662.jpg, Majority Vote: [9, 4, 0, 1]\n",
      "Image: 50k/668.jpg, Majority Vote: [0]\n",
      "Image: 50k/67.jpg, Majority Vote: [5]\n",
      "Image: 50k/674.jpg, Majority Vote: [8, 4, 0, 11]\n",
      "Image: 50k/680.jpg, Majority Vote: [0]\n",
      "Image: 50k/686.jpg, Majority Vote: [9, 4, 0, 6]\n",
      "Image: 50k/692.jpg, Majority Vote: [4]\n",
      "Image: 50k/697.jpg, Majority Vote: [11]\n",
      "Image: 50k/703.jpg, Majority Vote: [2, 4, 0, 1]\n",
      "Image: 50k/709.jpg, Majority Vote: [7]\n",
      "Image: 50k/715.jpg, Majority Vote: [11]\n",
      "Image: 50k/721.jpg, Majority Vote: [2, 4, 0, 7]\n",
      "Image: 50k/727.jpg, Majority Vote: [0]\n",
      "Image: 50k/73.jpg, Majority Vote: [4]\n",
      "Image: 50k/732.jpg, Majority Vote: [3, 4, 0, 11]\n",
      "Image: 50k/738.jpg, Majority Vote: [7, 5, 0, 11]\n",
      "Image: 50k/744.jpg, Majority Vote: [2, 4, 0, 11]\n",
      "Image: 50k/750.jpg, Majority Vote: [8, 5, 0, 9]\n",
      "Image: 50k/756.jpg, Majority Vote: [5, 4, 0, 10]\n",
      "Image: 50k/762.jpg, Majority Vote: [9, 4, 0, 3]\n",
      "Image: 50k/767.jpg, Majority Vote: [9]\n",
      "Image: 50k/773.jpg, Majority Vote: [9, 7, 0, 1]\n",
      "Image: 50k/779.jpg, Majority Vote: [0]\n",
      "Image: 50k/785.jpg, Majority Vote: [0]\n",
      "Image: 50k/79.jpg, Majority Vote: [4]\n",
      "Image: 50k/791.jpg, Majority Vote: [5]\n",
      "Image: 50k/797.jpg, Majority Vote: [2]\n",
      "Image: 50k/802.jpg, Majority Vote: [9, 4, 0, 11]\n",
      "Image: 50k/808.jpg, Majority Vote: [3, 7, 0, 5]\n",
      "Image: 50k/814.jpg, Majority Vote: [5, 4, 0, 3]\n",
      "Image: 50k/820.jpg, Majority Vote: [2, 4, 0, 5]\n",
      "Image: 50k/826.jpg, Majority Vote: [0]\n",
      "Image: 50k/832.jpg, Majority Vote: [9, 7, 0, 4]\n",
      "Image: 50k/837.jpg, Majority Vote: [0, 5]\n",
      "Image: 50k/843.jpg, Majority Vote: [5, 4, 0, 9]\n",
      "Image: 50k/849.jpg, Majority Vote: [8, 9, 0, 3]\n",
      "Image: 50k/85.jpg, Majority Vote: [5, 4, 0, 3]\n",
      "Image: 50k/855.jpg, Majority Vote: [7]\n",
      "Image: 50k/861.jpg, Majority Vote: [8, 4, 0, 1]\n",
      "Image: 50k/867.jpg, Majority Vote: [2, 5, 0, 10]\n",
      "Image: 50k/872.jpg, Majority Vote: [3, 5, 0, 9]\n",
      "Image: 50k/878.jpg, Majority Vote: [5, 4, 0, 9]\n",
      "Image: 50k/884.jpg, Majority Vote: [1]\n",
      "Image: 50k/890.jpg, Majority Vote: [0, 9]\n",
      "Image: 50k/896.jpg, Majority Vote: [11, 7, 0, 4]\n",
      "Image: 50k/9.jpg, Majority Vote: [0]\n",
      "Image: 50k/902.jpg, Majority Vote: [9, 4, 0, 7]\n",
      "Image: 50k/907.jpg, Majority Vote: [1, 4, 0, 5]\n",
      "Image: 50k/91.jpg, Majority Vote: [6, 4, 0, 1]\n",
      "Image: 50k/913.jpg, Majority Vote: [9, 4, 0, 1]\n",
      "Image: 50k/919.jpg, Majority Vote: [2, 5, 0, 1]\n",
      "Image: 50k/925.jpg, Majority Vote: [4, 5, 0, 2]\n",
      "Image: 50k/931.jpg, Majority Vote: [0]\n",
      "Image: 50k/937.jpg, Majority Vote: [5]\n",
      "Image: 50k/942.jpg, Majority Vote: [5]\n",
      "Image: 50k/948.jpg, Majority Vote: [1, 7, 0, 4]\n",
      "Image: 50k/954.jpg, Majority Vote: [5, 9, 0, 10]\n",
      "Image: 50k/960.jpg, Majority Vote: [5]\n",
      "Image: 50k/966.jpg, Majority Vote: [4, 5, 0, 10]\n",
      "Image: 50k/97.jpg, Majority Vote: [6, 4, 0, 5]\n",
      "Image: 50k/972.jpg, Majority Vote: [0]\n",
      "Image: 50k/977.jpg, Majority Vote: [7, 0]\n",
      "Image: 50k/983.jpg, Majority Vote: [11, 7, 0, 3]\n",
      "Image: 50k/989.jpg, Majority Vote: [6, 4, 0, 11]\n",
      "Image: 50k/995.jpg, Majority Vote: [2, 4, 0, 9]\n",
      "Image: 50kf/1001.jpg, Majority Vote: [5, 0]\n",
      "Image: 50kf/1007.jpg, Majority Vote: [9]\n",
      "Image: 50kf/1012.jpg, Majority Vote: [8, 4, 0, 3]\n",
      "Image: 50kf/1018.jpg, Majority Vote: [11, 5, 0, 7]\n",
      "Image: 50kf/102.jpg, Majority Vote: [9, 5, 0, 3]\n",
      "Image: 50kf/1024.jpg, Majority Vote: [8, 4, 0, 10]\n",
      "Image: 50kf/1030.jpg, Majority Vote: [4, 5, 0, 2]\n",
      "Image: 50kf/1036.jpg, Majority Vote: [2]\n",
      "Image: 50kf/1042.jpg, Majority Vote: [3, 4, 0, 10]\n",
      "Image: 50kf/1047.jpg, Majority Vote: [9, 4, 0, 2]\n",
      "Image: 50kf/1053.jpg, Majority Vote: [9]\n",
      "Image: 50kf/1059.jpg, Majority Vote: [1, 4, 0, 7]\n",
      "Image: 50kf/1065.jpg, Majority Vote: [8, 7, 0, 10]\n",
      "Image: 50kf/1071.jpg, Majority Vote: [7]\n",
      "Image: 50kf/1077.jpg, Majority Vote: [9]\n",
      "Image: 50kf/108.jpg, Majority Vote: [4, 7, 0, 11]\n",
      "Image: 50kf/1082.jpg, Majority Vote: [5, 7, 0, 8]\n",
      "Image: 50kf/1088.jpg, Majority Vote: [0]\n",
      "Image: 50kf/1094.jpg, Majority Vote: [2, 9, 0, 7]\n",
      "Image: 50kf/1100.jpg, Majority Vote: [3, 5, 0, 11]\n",
      "Image: 50kf/1106.jpg, Majority Vote: [6, 9, 0, 11]\n",
      "Image: 50kf/1112.jpg, Majority Vote: [2, 4, 0, 7]\n",
      "Image: 50kf/1117.jpg, Majority Vote: [1, 4, 0, 10]\n",
      "Image: 50kf/1123.jpg, Majority Vote: [0]\n",
      "Image: 50kf/1129.jpg, Majority Vote: [11, 5, 0, 6]\n",
      "Image: 50kf/1135.jpg, Majority Vote: [2, 4, 0, 8]\n",
      "Image: 50kf/114.jpg, Majority Vote: [6, 4, 0, 7]\n",
      "Image: 50kf/1141.jpg, Majority Vote: [3, 7, 0, 10]\n",
      "Image: 50kf/1147.jpg, Majority Vote: [6, 7, 0, 1]\n",
      "Image: 50kf/1152.jpg, Majority Vote: [3, 4, 0, 6]\n",
      "Image: 50kf/1158.jpg, Majority Vote: [0]\n",
      "Image: 50kf/1164.jpg, Majority Vote: [9]\n",
      "Image: 50kf/1170.jpg, Majority Vote: [6, 4, 0, 8]\n",
      "Image: 50kf/1176.jpg, Majority Vote: [4]\n",
      "Image: 50kf/1182.jpg, Majority Vote: [0]\n",
      "Image: 50kf/1187.jpg, Majority Vote: [3, 4, 0, 8]\n",
      "Image: 50kf/1193.jpg, Majority Vote: [6, 7, 0, 9]\n",
      "Image: 50kf/1199.jpg, Majority Vote: [6, 4, 0, 8]\n",
      "Image: 50kf/120.jpg, Majority Vote: [11, 7, 0, 2]\n",
      "Image: 50kf/1205.jpg, Majority Vote: [3, 5, 0, 2]\n",
      "Image: 50kf/1211.jpg, Majority Vote: [7, 4, 0, 10]\n",
      "Image: 50kf/1217.jpg, Majority Vote: [7, 4, 0, 1]\n",
      "Image: 50kf/1222.jpg, Majority Vote: [8, 4, 0, 11]\n",
      "Image: 50kf/1228.jpg, Majority Vote: [8, 4, 0, 1]\n",
      "Image: 50kf/1234.jpg, Majority Vote: [8, 4, 0, 11]\n",
      "Image: 50kf/1240.jpg, Majority Vote: [4]\n",
      "Image: 50kf/1246.jpg, Majority Vote: [9, 4, 0, 8]\n",
      "Image: 50kf/1252.jpg, Majority Vote: [3, 5, 0, 11]\n",
      "Image: 50kf/1257.jpg, Majority Vote: [0, 4]\n",
      "Image: 50kf/126.jpg, Majority Vote: [4]\n",
      "Image: 50kf/1263.jpg, Majority Vote: [7]\n",
      "Image: 50kf/1269.jpg, Majority Vote: [7, 4, 0, 9]\n",
      "Image: 50kf/1275.jpg, Majority Vote: [3, 5, 0, 4]\n",
      "Image: 50kf/1281.jpg, Majority Vote: [6, 7, 0, 3]\n",
      "Image: 50kf/1287.jpg, Majority Vote: [4]\n",
      "Image: 50kf/1292.jpg, Majority Vote: [7, 5, 0, 1]\n",
      "Image: 50kf/1298.jpg, Majority Vote: [0]\n",
      "Image: 50kf/1304.jpg, Majority Vote: [11, 5, 0, 10]\n",
      "Image: 50kf/1310.jpg, Majority Vote: [2]\n",
      "Image: 50kf/1316.jpg, Majority Vote: [8, 4, 0, 7]\n",
      "Image: 50kf/132.jpg, Majority Vote: [7, 4, 0, 6]\n",
      "Image: 50kf/1322.jpg, Majority Vote: [0]\n",
      "Image: 50kf/1327.jpg, Majority Vote: [1, 9, 0, 4]\n",
      "Image: 50kf/1333.jpg, Majority Vote: [10, 7, 0, 1]\n",
      "Image: 50kf/1339.jpg, Majority Vote: [6, 7, 0, 1]\n",
      "Image: 50kf/1345.jpg, Majority Vote: [4, 5, 0, 3]\n",
      "Image: 50kf/1351.jpg, Majority Vote: [1]\n",
      "Image: 50kf/1357.jpg, Majority Vote: [1, 7, 0, 2]\n",
      "Image: 50kf/1362.jpg, Majority Vote: [2, 5, 0, 7]\n",
      "Image: 50kf/1368.jpg, Majority Vote: [0]\n",
      "Image: 50kf/137.jpg, Majority Vote: [1, 4, 0, 2]\n",
      "Image: 50kf/1374.jpg, Majority Vote: [11]\n",
      "Image: 50kf/1380.jpg, Majority Vote: [9]\n",
      "Image: 50kf/1386.jpg, Majority Vote: [0]\n",
      "Image: 50kf/1392.jpg, Majority Vote: [0]\n",
      "Image: 50kf/1397.jpg, Majority Vote: [4]\n",
      "Image: 50kf/1403.jpg, Majority Vote: [0]\n",
      "Image: 50kf/1409.jpg, Majority Vote: [3, 5, 0, 6]\n",
      "Image: 50kf/1415.jpg, Majority Vote: [11, 4, 0, 3]\n",
      "Image: 50kf/1421.jpg, Majority Vote: [0]\n",
      "Image: 50kf/1427.jpg, Majority Vote: [0]\n",
      "Image: 50kf/143.jpg, Majority Vote: [4]\n",
      "Image: 50kf/1432.jpg, Majority Vote: [11, 4, 0, 5]\n",
      "Image: 50kf/1438.jpg, Majority Vote: [4, 5, 0, 10]\n",
      "Image: 50kf/1444.jpg, Majority Vote: [6, 4, 0, 5]\n",
      "Image: 50kf/1450.jpg, Majority Vote: [3, 5, 0, 10]\n",
      "Image: 50kf/1456.jpg, Majority Vote: [0]\n",
      "Image: 50kf/1462.jpg, Majority Vote: [3, 4, 0, 2]\n",
      "Image: 50kf/1467.jpg, Majority Vote: [5]\n",
      "Image: 50kf/1473.jpg, Majority Vote: [7]\n",
      "Image: 50kf/1479.jpg, Majority Vote: [0]\n",
      "Image: 50kf/1485.jpg, Majority Vote: [7, 9, 0, 1]\n",
      "Image: 50kf/149.jpg, Majority Vote: [8, 7, 0, 4]\n",
      "Image: 50kf/1491.jpg, Majority Vote: [4]\n",
      "Image: 50kf/1497.jpg, Majority Vote: [0, 5]\n",
      "Image: 50kf/15.jpg, Majority Vote: [8, 7, 0, 1]\n",
      "Image: 50kf/1502.jpg, Majority Vote: [6, 9, 0, 5]\n",
      "Image: 50kf/1508.jpg, Majority Vote: [3, 7, 0, 11]\n",
      "Image: 50kf/1514.jpg, Majority Vote: [5]\n",
      "Image: 50kf/1520.jpg, Majority Vote: [0]\n",
      "Image: 50kf/1526.jpg, Majority Vote: [5]\n",
      "Image: 50kf/1532.jpg, Majority Vote: [4]\n",
      "Image: 50kf/1537.jpg, Majority Vote: [6, 4, 0, 9]\n",
      "Image: 50kf/1543.jpg, Majority Vote: [0]\n",
      "Image: 50kf/1549.jpg, Majority Vote: [3, 5, 0, 11]\n",
      "Image: 50kf/155.jpg, Majority Vote: [0]\n",
      "Image: 50kf/1555.jpg, Majority Vote: [11, 4, 0, 5]\n",
      "Image: 50kf/1561.jpg, Majority Vote: [11, 5, 0, 2]\n",
      "Image: 50kf/1567.jpg, Majority Vote: [2, 5, 0, 6]\n",
      "Image: 50kf/1572.jpg, Majority Vote: [4, 5, 0, 3]\n",
      "Image: 50kf/1578.jpg, Majority Vote: [1, 4, 0, 6]\n",
      "Image: 50kf/1584.jpg, Majority Vote: [7, 4, 0, 5]\n",
      "Image: 50kf/1590.jpg, Majority Vote: [5]\n",
      "Image: 50kf/1596.jpg, Majority Vote: [7]\n",
      "Image: 50kf/1602.jpg, Majority Vote: [2, 9, 0, 10]\n",
      "Image: 50kf/1607.jpg, Majority Vote: [4]\n",
      "Image: 50kf/161.jpg, Majority Vote: [0]\n",
      "Image: 50kf/1613.jpg, Majority Vote: [0]\n",
      "Image: 50kf/1619.jpg, Majority Vote: [7]\n",
      "Image: 50kf/1625.jpg, Majority Vote: [3, 7, 0, 10]\n",
      "Image: 50kf/1631.jpg, Majority Vote: [2, 7, 0, 10]\n",
      "Image: 50kf/1637.jpg, Majority Vote: [7, 5, 0, 2]\n",
      "Image: 50kf/1642.jpg, Majority Vote: [3, 4, 0, 2]\n",
      "Image: 50kf/1648.jpg, Majority Vote: [0]\n",
      "Image: 50kf/1654.jpg, Majority Vote: [4]\n",
      "Image: 50kf/1660.jpg, Majority Vote: [7]\n",
      "Image: 50kf/1666.jpg, Majority Vote: [9]\n",
      "Image: 50kf/167.jpg, Majority Vote: [2, 9, 0, 7]\n",
      "Image: 50kf/1672.jpg, Majority Vote: [2, 4, 0, 6]\n",
      "Image: 50kf/1677.jpg, Majority Vote: [6, 5, 0, 3]\n",
      "Image: 50kf/1683.jpg, Majority Vote: [3, 7, 0, 8]\n",
      "Image: 50kf/1689.jpg, Majority Vote: [6, 4, 0, 7]\n",
      "Image: 50kf/1695.jpg, Majority Vote: [0]\n",
      "Image: 50kf/1701.jpg, Majority Vote: [5, 7, 0, 4]\n",
      "Image: 50kf/1707.jpg, Majority Vote: [5, 7, 0, 1]\n",
      "Image: 50kf/1712.jpg, Majority Vote: [1, 7, 0, 6]\n",
      "Image: 50kf/1718.jpg, Majority Vote: [2, 4, 0, 5]\n",
      "Image: 50kf/172.jpg, Majority Vote: [4]\n",
      "Image: 50kf/1724.jpg, Majority Vote: [9, 5, 0, 3]\n",
      "Image: 50kf/1730.jpg, Majority Vote: [0, 7]\n",
      "Image: 50kf/1736.jpg, Majority Vote: [0]\n",
      "Image: 50kf/1742.jpg, Majority Vote: [11, 5, 0, 3]\n",
      "Image: 50kf/1747.jpg, Majority Vote: [9]\n",
      "Image: 50kf/1753.jpg, Majority Vote: [9, 4, 0, 10]\n",
      "Image: 50kf/1759.jpg, Majority Vote: [2, 5, 0, 3]\n",
      "Image: 50kf/1765.jpg, Majority Vote: [11, 4, 0, 8]\n",
      "Image: 50kf/1771.jpg, Majority Vote: [5, 9, 0, 11]\n",
      "Image: 50kf/1777.jpg, Majority Vote: [7, 4, 0, 10]\n",
      "Image: 50kf/178.jpg, Majority Vote: [2, 4, 0, 10]\n",
      "Image: 50kf/1782.jpg, Majority Vote: [6, 5, 0, 7]\n",
      "Image: 50kf/1788.jpg, Majority Vote: [2, 5, 0, 7]\n",
      "Image: 50kf/1794.jpg, Majority Vote: [3, 4, 0, 7]\n",
      "Image: 50kf/1800.jpg, Majority Vote: [7]\n",
      "Image: 50kf/1806.jpg, Majority Vote: [6, 4, 0, 9]\n",
      "Image: 50kf/1812.jpg, Majority Vote: [7]\n",
      "Image: 50kf/1817.jpg, Majority Vote: [5, 4, 0, 1]\n",
      "Image: 50kf/1823.jpg, Majority Vote: [4]\n",
      "Image: 50kf/1828.jpg, Majority Vote: [2, 9, 0, 10]\n",
      "Image: 50kf/1833.jpg, Majority Vote: [11, 4, 0, 10]\n",
      "Image: 50kf/1838.jpg, Majority Vote: [7, 4, 0, 5]\n",
      "Image: 50kf/184.jpg, Majority Vote: [3]\n",
      "Image: 50kf/1843.jpg, Majority Vote: [3, 7, 0, 8]\n",
      "Image: 50kf/1848.jpg, Majority Vote: [0]\n",
      "Image: 50kf/1853.jpg, Majority Vote: [10, 4, 0, 9]\n",
      "Image: 50kf/1858.jpg, Majority Vote: [2, 5, 0, 10]\n",
      "Image: 50kf/190.jpg, Majority Vote: [3, 5, 0, 1]\n",
      "Image: 50kf/196.jpg, Majority Vote: [4]\n",
      "Image: 50kf/202.jpg, Majority Vote: [0]\n",
      "Image: 50kf/207.jpg, Majority Vote: [7]\n",
      "Image: 50kf/21.jpg, Majority Vote: [3, 5, 0, 1]\n",
      "Image: 50kf/213.jpg, Majority Vote: [2, 5, 0, 11]\n",
      "Image: 50kf/219.jpg, Majority Vote: [6]\n",
      "Image: 50kf/225.jpg, Majority Vote: [2, 4, 0, 1]\n",
      "Image: 50kf/231.jpg, Majority Vote: [2, 4, 0, 6]\n",
      "Image: 50kf/237.jpg, Majority Vote: [10, 5, 0, 9]\n",
      "Image: 50kf/242.jpg, Majority Vote: [3, 9, 0, 7]\n",
      "Image: 50kf/248.jpg, Majority Vote: [10, 5, 0, 7]\n",
      "Image: 50kf/254.jpg, Majority Vote: [8, 4, 0, 7]\n",
      "Image: 50kf/260.jpg, Majority Vote: [7]\n",
      "Image: 50kf/266.jpg, Majority Vote: [8, 4, 0, 3]\n",
      "Image: 50kf/27.jpg, Majority Vote: [6, 4, 0, 8]\n",
      "Image: 50kf/272.jpg, Majority Vote: [2, 4, 0, 10]\n",
      "Image: 50kf/277.jpg, Majority Vote: [9, 5, 0, 11]\n",
      "Image: 50kf/283.jpg, Majority Vote: [6, 7, 0, 9]\n",
      "Image: 50kf/289.jpg, Majority Vote: [5, 4, 0, 9]\n",
      "Image: 50kf/295.jpg, Majority Vote: [4, 5, 0, 7]\n",
      "Image: 50kf/3.jpg, Majority Vote: [8, 4, 0, 2]\n",
      "Image: 50kf/301.jpg, Majority Vote: [2, 9, 0, 11]\n",
      "Image: 50kf/307.jpg, Majority Vote: [0]\n",
      "Image: 50kf/312.jpg, Majority Vote: [0]\n",
      "Image: 50kf/318.jpg, Majority Vote: [5]\n",
      "Image: 50kf/32.jpg, Majority Vote: [3, 4, 0, 6]\n",
      "Image: 50kf/324.jpg, Majority Vote: [0]\n",
      "Image: 50kf/330.jpg, Majority Vote: [0]\n",
      "Image: 50kf/336.jpg, Majority Vote: [2, 7, 0, 5]\n",
      "Image: 50kf/342.jpg, Majority Vote: [10, 9, 0, 6]\n",
      "Image: 50kf/347.jpg, Majority Vote: [10, 5, 0, 11]\n",
      "Image: 50kf/353.jpg, Majority Vote: [7]\n",
      "Image: 50kf/359.jpg, Majority Vote: [0]\n",
      "Image: 50kf/365.jpg, Majority Vote: [4]\n",
      "Image: 50kf/371.jpg, Majority Vote: [6, 5, 0, 10]\n",
      "Image: 50kf/377.jpg, Majority Vote: [1, 4, 0, 11]\n",
      "Image: 50kf/38.jpg, Majority Vote: [8, 4, 0, 3]\n",
      "Image: 50kf/382.jpg, Majority Vote: [5, 4, 0, 2]\n",
      "Image: 50kf/388.jpg, Majority Vote: [3, 7, 0, 5]\n",
      "Image: 50kf/394.jpg, Majority Vote: [0]\n",
      "Image: 50kf/400.jpg, Majority Vote: [2, 4, 0, 6]\n",
      "Image: 50kf/406.jpg, Majority Vote: [3, 4, 0, 6]\n",
      "Image: 50kf/412.jpg, Majority Vote: [7]\n",
      "Image: 50kf/417.jpg, Majority Vote: [7, 5, 0, 2]\n",
      "Image: 50kf/423.jpg, Majority Vote: [0]\n",
      "Image: 50kf/429.jpg, Majority Vote: [9, 5, 0, 7]\n",
      "Image: 50kf/435.jpg, Majority Vote: [4, 7, 0, 1]\n",
      "Image: 50kf/44.jpg, Majority Vote: [1, 5, 0, 11]\n",
      "Image: 50kf/441.jpg, Majority Vote: [9, 7, 0, 1]\n",
      "Image: 50kf/447.jpg, Majority Vote: [0, 4]\n",
      "Image: 50kf/452.jpg, Majority Vote: [11, 5, 0, 4]\n",
      "Image: 50kf/458.jpg, Majority Vote: [4]\n",
      "Image: 50kf/464.jpg, Majority Vote: [0]\n",
      "Image: 50kf/470.jpg, Majority Vote: [6, 5, 0, 1]\n",
      "Image: 50kf/476.jpg, Majority Vote: [8, 5, 0, 6]\n",
      "Image: 50kf/482.jpg, Majority Vote: [9, 4, 0, 7]\n",
      "Image: 50kf/487.jpg, Majority Vote: [8, 4, 0, 3]\n",
      "Image: 50kf/493.jpg, Majority Vote: [5]\n",
      "Image: 50kf/499.jpg, Majority Vote: [0]\n",
      "Image: 50kf/50.jpg, Majority Vote: [5, 4, 0, 3]\n",
      "Image: 50kf/505.jpg, Majority Vote: [7, 5, 0, 2]\n",
      "Image: 50kf/511.jpg, Majority Vote: [3, 5, 0, 7]\n",
      "Image: 50kf/517.jpg, Majority Vote: [0]\n",
      "Image: 50kf/522.jpg, Majority Vote: [1, 7, 0, 2]\n",
      "Image: 50kf/528.jpg, Majority Vote: [9, 4, 0, 6]\n",
      "Image: 50kf/534.jpg, Majority Vote: [11, 5, 0, 3]\n",
      "Image: 50kf/540.jpg, Majority Vote: [0]\n",
      "Image: 50kf/546.jpg, Majority Vote: [10, 7, 0, 11]\n",
      "Image: 50kf/552.jpg, Majority Vote: [6, 4, 0, 1]\n",
      "Image: 50kf/557.jpg, Majority Vote: [0]\n",
      "Image: 50kf/56.jpg, Majority Vote: [2, 5, 0, 7]\n",
      "Image: 50kf/563.jpg, Majority Vote: [0]\n",
      "Image: 50kf/569.jpg, Majority Vote: [2, 4, 0, 3]\n",
      "Image: 50kf/575.jpg, Majority Vote: [0, 4]\n",
      "Image: 50kf/581.jpg, Majority Vote: [7, 4, 0, 10]\n",
      "Image: 50kf/587.jpg, Majority Vote: [6, 9, 0, 5]\n",
      "Image: 50kf/592.jpg, Majority Vote: [9, 4, 0, 10]\n",
      "Image: 50kf/598.jpg, Majority Vote: [9, 5, 0, 11]\n",
      "Image: 50kf/604.jpg, Majority Vote: [7]\n",
      "Image: 50kf/610.jpg, Majority Vote: [1, 7, 0, 3]\n",
      "Image: 50kf/616.jpg, Majority Vote: [11, 4, 0, 2]\n",
      "Image: 50kf/62.jpg, Majority Vote: [11, 7, 0, 10]\n",
      "Image: 50kf/622.jpg, Majority Vote: [6, 4, 0, 5]\n",
      "Image: 50kf/627.jpg, Majority Vote: [3, 4, 0, 7]\n",
      "Image: 50kf/633.jpg, Majority Vote: [1]\n",
      "Image: 50kf/639.jpg, Majority Vote: [0]\n",
      "Image: 50kf/645.jpg, Majority Vote: [4, 5, 0, 2]\n",
      "Image: 50kf/651.jpg, Majority Vote: [3, 4, 0, 1]\n",
      "Image: 50kf/657.jpg, Majority Vote: [7]\n",
      "Image: 50kf/662.jpg, Majority Vote: [0]\n",
      "Image: 50kf/668.jpg, Majority Vote: [6, 5, 0, 3]\n",
      "Image: 50kf/67.jpg, Majority Vote: [0]\n",
      "Image: 50kf/674.jpg, Majority Vote: [3, 7, 0, 11]\n",
      "Image: 50kf/680.jpg, Majority Vote: [5, 9, 0, 10]\n",
      "Image: 50kf/686.jpg, Majority Vote: [2, 9, 0, 6]\n",
      "Image: 50kf/692.jpg, Majority Vote: [5]\n",
      "Image: 50kf/697.jpg, Majority Vote: [0]\n",
      "Image: 50kf/703.jpg, Majority Vote: [7, 9, 0, 3]\n",
      "Image: 50kf/709.jpg, Majority Vote: [7, 4, 0, 2]\n",
      "Image: 50kf/715.jpg, Majority Vote: [0]\n",
      "Image: 50kf/721.jpg, Majority Vote: [9, 5, 0, 2]\n",
      "Image: 50kf/727.jpg, Majority Vote: [2, 4, 0, 5]\n",
      "Image: 50kf/73.jpg, Majority Vote: [0]\n",
      "Image: 50kf/732.jpg, Majority Vote: [5]\n",
      "Image: 50kf/738.jpg, Majority Vote: [4]\n",
      "Image: 50kf/744.jpg, Majority Vote: [6, 7, 0, 5]\n",
      "Image: 50kf/750.jpg, Majority Vote: [10, 9, 0, 11]\n",
      "Image: 50kf/756.jpg, Majority Vote: [4]\n",
      "Image: 50kf/762.jpg, Majority Vote: [6, 7, 0, 2]\n",
      "Image: 50kf/767.jpg, Majority Vote: [0]\n",
      "Image: 50kf/773.jpg, Majority Vote: [4]\n",
      "Image: 50kf/779.jpg, Majority Vote: [9, 4, 0, 2]\n",
      "Image: 50kf/785.jpg, Majority Vote: [6, 5, 0, 4]\n",
      "Image: 50kf/79.jpg, Majority Vote: [5]\n",
      "Image: 50kf/791.jpg, Majority Vote: [10, 9, 0, 2]\n",
      "Image: 50kf/797.jpg, Majority Vote: [6, 4, 0, 2]\n",
      "Image: 50kf/802.jpg, Majority Vote: [10, 5, 0, 3]\n",
      "Image: 50kf/808.jpg, Majority Vote: [2, 4, 0, 6]\n",
      "Image: 50kf/814.jpg, Majority Vote: [5]\n",
      "Image: 50kf/820.jpg, Majority Vote: [5, 7, 0, 9]\n",
      "Image: 50kf/826.jpg, Majority Vote: [9]\n",
      "Image: 50kf/832.jpg, Majority Vote: [2, 5, 0, 4]\n",
      "Image: 50kf/837.jpg, Majority Vote: [0]\n",
      "Image: 50kf/843.jpg, Majority Vote: [8, 4, 0, 11]\n",
      "Image: 50kf/849.jpg, Majority Vote: [0]\n",
      "Image: 50kf/85.jpg, Majority Vote: [8, 4, 0, 1]\n",
      "Image: 50kf/855.jpg, Majority Vote: [5]\n",
      "Image: 50kf/861.jpg, Majority Vote: [9, 4, 0, 3]\n",
      "Image: 50kf/867.jpg, Majority Vote: [4]\n",
      "Image: 50kf/872.jpg, Majority Vote: [3, 4, 0, 5]\n",
      "Image: 50kf/878.jpg, Majority Vote: [9, 4, 0, 7]\n",
      "Image: 50kf/884.jpg, Majority Vote: [0]\n",
      "Image: 50kf/890.jpg, Majority Vote: [0]\n",
      "Image: 50kf/896.jpg, Majority Vote: [0]\n",
      "Image: 50kf/9.jpg, Majority Vote: [1]\n",
      "Image: 50kf/902.jpg, Majority Vote: [0]\n",
      "Image: 50kf/907.jpg, Majority Vote: [0]\n",
      "Image: 50kf/91.jpg, Majority Vote: [7]\n",
      "Image: 50kf/913.jpg, Majority Vote: [5, 7, 0, 1]\n",
      "Image: 50kf/919.jpg, Majority Vote: [6, 4, 0, 3]\n",
      "Image: 50kf/925.jpg, Majority Vote: [3, 4, 0, 1]\n",
      "Image: 50kf/931.jpg, Majority Vote: [3, 5, 0, 4]\n",
      "Image: 50kf/937.jpg, Majority Vote: [10, 9, 0, 2]\n",
      "Image: 50kf/942.jpg, Majority Vote: [7, 4, 0, 5]\n",
      "Image: 50kf/948.jpg, Majority Vote: [3, 7, 0, 11]\n",
      "Image: 50kf/954.jpg, Majority Vote: [9, 7, 0, 6]\n",
      "Image: 50kf/960.jpg, Majority Vote: [3]\n",
      "Image: 50kf/966.jpg, Majority Vote: [4, 9, 0, 8]\n",
      "Image: 50kf/97.jpg, Majority Vote: [6, 7, 0, 4]\n",
      "Image: 50kf/972.jpg, Majority Vote: [5, 4, 0, 6]\n",
      "Image: 50kf/977.jpg, Majority Vote: [9, 7, 0, 10]\n",
      "Image: 50kf/983.jpg, Majority Vote: [9, 4, 0, 7]\n",
      "Image: 50kf/989.jpg, Majority Vote: [0]\n",
      "Image: 50kf/995.jpg, Majority Vote: [0]\n",
      "Image: 5k/1001.jpg, Majority Vote: [5, 7, 0, 10]\n",
      "Image: 5k/1007.jpg, Majority Vote: [8]\n",
      "Image: 5k/1013.jpg, Majority Vote: [6, 4, 0, 7]\n",
      "Image: 5k/1018.jpg, Majority Vote: [0]\n",
      "Image: 5k/1024.jpg, Majority Vote: [9, 5, 0, 6]\n",
      "Image: 5k/103.jpg, Majority Vote: [5, 4, 0, 7]\n",
      "Image: 5k/1030.jpg, Majority Vote: [2, 5, 0, 3]\n",
      "Image: 5k/1036.jpg, Majority Vote: [4, 5, 0, 1]\n",
      "Image: 5k/1042.jpg, Majority Vote: [9, 4, 0, 11]\n",
      "Image: 5k/1048.jpg, Majority Vote: [4, 5, 0, 2]\n",
      "Image: 5k/1053.jpg, Majority Vote: [9, 4, 0, 7]\n",
      "Image: 5k/1059.jpg, Majority Vote: [11, 4, 0, 9]\n",
      "Image: 5k/1065.jpg, Majority Vote: [0]\n",
      "Image: 5k/1071.jpg, Majority Vote: [7, 5, 0, 11]\n",
      "Image: 5k/1077.jpg, Majority Vote: [1, 4, 0, 3]\n",
      "Image: 5k/108.jpg, Majority Vote: [7, 4, 0, 3]\n",
      "Image: 5k/1083.jpg, Majority Vote: [5, 9, 0, 10]\n",
      "Image: 5k/1088.jpg, Majority Vote: [7, 4, 0, 6]\n",
      "Image: 5k/1094.jpg, Majority Vote: [11]\n",
      "Image: 5k/1100.jpg, Majority Vote: [6, 4, 0, 7]\n",
      "Image: 5k/1106.jpg, Majority Vote: [0]\n",
      "Image: 5k/1118.jpg, Majority Vote: [3, 4, 0, 9]\n",
      "Image: 5k/1123.jpg, Majority Vote: [5, 4, 0, 6]\n",
      "Image: 5k/1129.jpg, Majority Vote: [7]\n",
      "Image: 5k/1135.jpg, Majority Vote: [6, 7, 0, 11]\n",
      "Image: 5k/114.jpg, Majority Vote: [8]\n",
      "Image: 5k/1141.jpg, Majority Vote: [7, 9, 0, 10]\n",
      "Image: 5k/1147.jpg, Majority Vote: [3, 5, 0, 7]\n",
      "Image: 5k/1153.jpg, Majority Vote: [0]\n",
      "Image: 5k/1164.jpg, Majority Vote: [0]\n",
      "Image: 5k/1170.jpg, Majority Vote: [4]\n",
      "Image: 5k/1176.jpg, Majority Vote: [0]\n",
      "Image: 5k/1182.jpg, Majority Vote: [5]\n",
      "Image: 5k/1188.jpg, Majority Vote: [10, 7, 0, 1]\n",
      "Image: 5k/1193.jpg, Majority Vote: [4, 7, 0, 8]\n",
      "Image: 5k/1199.jpg, Majority Vote: [6, 5, 0, 11]\n",
      "Image: 5k/120.jpg, Majority Vote: [0]\n",
      "Image: 5k/1205.jpg, Majority Vote: [0]\n",
      "Image: 5k/1217.jpg, Majority Vote: [8, 5, 0, 9]\n",
      "Image: 5k/1223.jpg, Majority Vote: [8, 5, 0, 7]\n",
      "Image: 5k/1228.jpg, Majority Vote: [2, 4, 0, 1]\n",
      "Image: 5k/1234.jpg, Majority Vote: [0]\n",
      "Image: 5k/1240.jpg, Majority Vote: [0]\n",
      "Image: 5k/1246.jpg, Majority Vote: [11, 5, 0, 7]\n",
      "Image: 5k/1252.jpg, Majority Vote: [4]\n",
      "Image: 5k/1258.jpg, Majority Vote: [5, 4, 0, 3]\n",
      "Image: 5k/126.jpg, Majority Vote: [8, 4, 0, 1]\n",
      "Image: 5k/1263.jpg, Majority Vote: [7, 5, 0, 10]\n",
      "Image: 5k/1269.jpg, Majority Vote: [4]\n",
      "Image: 5k/1275.jpg, Majority Vote: [2, 5, 0, 7]\n",
      "Image: 5k/1281.jpg, Majority Vote: [9]\n",
      "Image: 5k/1287.jpg, Majority Vote: [9, 7, 0, 6]\n",
      "Image: 5k/1293.jpg, Majority Vote: [4]\n",
      "Image: 5k/1298.jpg, Majority Vote: [9]\n",
      "Image: 5k/1304.jpg, Majority Vote: [0]\n",
      "Image: 5k/1310.jpg, Majority Vote: [6, 4, 0, 9]\n",
      "Image: 5k/1316.jpg, Majority Vote: [5]\n",
      "Image: 5k/132.jpg, Majority Vote: [2, 4, 0, 1]\n",
      "Image: 5k/1322.jpg, Majority Vote: [10, 4, 0, 2]\n",
      "Image: 5k/1328.jpg, Majority Vote: [0]\n",
      "Image: 5k/1333.jpg, Majority Vote: [6, 5, 0, 3]\n",
      "Image: 5k/1339.jpg, Majority Vote: [11, 4, 0, 9]\n",
      "Image: 5k/1345.jpg, Majority Vote: [3, 7, 0, 2]\n",
      "Image: 5k/1351.jpg, Majority Vote: [3, 4, 0, 7]\n",
      "Image: 5k/1357.jpg, Majority Vote: [7]\n",
      "Image: 5k/1363.jpg, Majority Vote: [6, 4, 0, 11]\n",
      "Image: 5k/1368.jpg, Majority Vote: [4, 5, 0, 8]\n",
      "Image: 5k/1374.jpg, Majority Vote: [11, 4, 0, 7]\n",
      "Image: 5k/138.jpg, Majority Vote: [9, 7, 0, 11]\n",
      "Image: 5k/1380.jpg, Majority Vote: [5, 0]\n",
      "Image: 5k/1386.jpg, Majority Vote: [11, 4, 0, 6]\n",
      "Image: 5k/1392.jpg, Majority Vote: [7]\n",
      "Image: 5k/1398.jpg, Majority Vote: [0]\n",
      "Image: 5k/1403.jpg, Majority Vote: [10, 5, 0, 4]\n",
      "Image: 5k/1409.jpg, Majority Vote: [7]\n",
      "Image: 5k/1415.jpg, Majority Vote: [0]\n",
      "Image: 5k/1421.jpg, Majority Vote: [2]\n",
      "Image: 5k/1427.jpg, Majority Vote: [2, 7, 0, 4]\n",
      "Image: 5k/143.jpg, Majority Vote: [9, 5, 0, 1]\n",
      "Image: 5k/1433.jpg, Majority Vote: [4]\n",
      "Image: 5k/1438.jpg, Majority Vote: [7]\n",
      "Image: 5k/1444.jpg, Majority Vote: [0]\n",
      "Image: 5k/1450.jpg, Majority Vote: [8, 4, 0, 7]\n",
      "Image: 5k/1456.jpg, Majority Vote: [0]\n",
      "Image: 5k/1462.jpg, Majority Vote: [0]\n",
      "Image: 5k/1468.jpg, Majority Vote: [8, 4, 0, 6]\n",
      "Image: 5k/1473.jpg, Majority Vote: [7]\n",
      "Image: 5k/1479.jpg, Majority Vote: [6, 5, 0, 2]\n",
      "Image: 5k/1485.jpg, Majority Vote: [11, 7, 0, 8]\n",
      "Image: 5k/149.jpg, Majority Vote: [9, 7, 0, 8]\n",
      "Image: 5k/1491.jpg, Majority Vote: [3, 9, 0, 11]\n",
      "Image: 5k/1497.jpg, Majority Vote: [2, 4, 0, 9]\n",
      "Image: 5k/15.jpg, Majority Vote: [11, 9, 0, 2]\n",
      "Image: 5k/1503.jpg, Majority Vote: [1, 4, 0, 7]\n",
      "Image: 5k/1508.jpg, Majority Vote: [4]\n",
      "Image: 5k/1514.jpg, Majority Vote: [11, 4, 0, 7]\n",
      "Image: 5k/1520.jpg, Majority Vote: [8, 4, 0, 5]\n",
      "Image: 5k/1526.jpg, Majority Vote: [3, 4, 0, 5]\n",
      "Image: 5k/1532.jpg, Majority Vote: [5]\n",
      "Image: 5k/1538.jpg, Majority Vote: [1, 7, 0, 8]\n",
      "Image: 5k/1543.jpg, Majority Vote: [5, 4, 0, 1]\n",
      "Image: 5k/1549.jpg, Majority Vote: [8, 4, 0, 7]\n",
      "Image: 5k/155.jpg, Majority Vote: [6, 4, 0, 2]\n",
      "Image: 5k/1555.jpg, Majority Vote: [2, 5, 0, 1]\n",
      "Image: 5k/1561.jpg, Majority Vote: [6, 4, 0, 2]\n",
      "Image: 5k/1567.jpg, Majority Vote: [8, 5, 0, 3]\n",
      "Image: 5k/1573.jpg, Majority Vote: [8, 9, 0, 7]\n",
      "Image: 5k/1578.jpg, Majority Vote: [9]\n",
      "Image: 5k/1584.jpg, Majority Vote: [9, 4, 0, 3]\n",
      "Image: 5k/1590.jpg, Majority Vote: [4]\n",
      "Image: 5k/1596.jpg, Majority Vote: [11, 4, 0, 2]\n",
      "Image: 5k/1602.jpg, Majority Vote: [2, 7, 0, 1]\n",
      "Image: 5k/1608.jpg, Majority Vote: [7, 9, 0, 2]\n",
      "Image: 5k/161.jpg, Majority Vote: [3, 4, 0, 9]\n",
      "Image: 5k/1613.jpg, Majority Vote: [9]\n",
      "Image: 5k/1619.jpg, Majority Vote: [2, 9, 0, 3]\n",
      "Image: 5k/1625.jpg, Majority Vote: [3, 4, 0, 1]\n",
      "Image: 5k/1631.jpg, Majority Vote: [1]\n",
      "Image: 5k/1637.jpg, Majority Vote: [3, 4, 0, 11]\n",
      "Image: 5k/1643.jpg, Majority Vote: [0]\n",
      "Image: 5k/1648.jpg, Majority Vote: [11, 4, 0, 7]\n",
      "Image: 5k/1654.jpg, Majority Vote: [0]\n",
      "Image: 5k/1660.jpg, Majority Vote: [5, 4, 0, 1]\n",
      "Image: 5k/1666.jpg, Majority Vote: [5, 9, 0, 2]\n",
      "Image: 5k/167.jpg, Majority Vote: [6, 4, 0, 5]\n",
      "Image: 5k/1672.jpg, Majority Vote: [9, 4, 0, 8]\n",
      "Image: 5k/1678.jpg, Majority Vote: [6, 7, 0, 11]\n",
      "Image: 5k/1683.jpg, Majority Vote: [0]\n",
      "Image: 5k/1689.jpg, Majority Vote: [10]\n",
      "Image: 5k/1695.jpg, Majority Vote: [11, 4, 0, 2]\n",
      "Image: 5k/1701.jpg, Majority Vote: [4]\n",
      "Image: 5k/1707.jpg, Majority Vote: [0]\n",
      "Image: 5k/1713.jpg, Majority Vote: [2, 7, 0, 10]\n",
      "Image: 5k/1718.jpg, Majority Vote: [7, 5, 0, 10]\n",
      "Image: 5k/173.jpg, Majority Vote: [6, 5, 0, 7]\n",
      "Image: 5k/1730.jpg, Majority Vote: [5]\n",
      "Image: 5k/1736.jpg, Majority Vote: [6, 9, 0, 8]\n",
      "Image: 5k/1742.jpg, Majority Vote: [9, 4, 0, 6]\n",
      "Image: 5k/1753.jpg, Majority Vote: [11, 4, 0, 3]\n",
      "Image: 5k/1759.jpg, Majority Vote: [3, 9, 0, 11]\n",
      "Image: 5k/1771.jpg, Majority Vote: [4]\n",
      "Image: 5k/1794.jpg, Majority Vote: [6, 4, 0, 9]\n",
      "Image: 5k/1800.jpg, Majority Vote: [5, 4, 0, 11]\n",
      "Image: 5k/1818.jpg, Majority Vote: [6, 4, 0, 9]\n",
      "Image: 5k/1823.jpg, Majority Vote: [0]\n",
      "Image: 5k/1828.jpg, Majority Vote: [3, 5, 0, 2]\n",
      "Image: 5k/1833.jpg, Majority Vote: [8, 7, 0, 2]\n",
      "Image: 5k/184.jpg, Majority Vote: [4]\n",
      "Image: 5k/1843.jpg, Majority Vote: [5, 4, 0, 11]\n",
      "Image: 5k/1848.jpg, Majority Vote: [5, 7, 0, 11]\n",
      "Image: 5k/1853.jpg, Majority Vote: [0]\n",
      "Image: 5k/1858.jpg, Majority Vote: [11, 9, 0, 7]\n",
      "Image: 5k/190.jpg, Majority Vote: [7]\n",
      "Image: 5k/208.jpg, Majority Vote: [2]\n",
      "Image: 5k/21.jpg, Majority Vote: [3, 9, 0, 10]\n",
      "Image: 5k/213.jpg, Majority Vote: [3, 4, 0, 5]\n",
      "Image: 5k/219.jpg, Majority Vote: [3, 5, 0, 1]\n",
      "Image: 5k/225.jpg, Majority Vote: [9, 4, 0, 5]\n",
      "Image: 5k/231.jpg, Majority Vote: [1, 7, 0, 9]\n",
      "Image: 5k/237.jpg, Majority Vote: [9]\n",
      "Image: 5k/243.jpg, Majority Vote: [7, 4, 0, 10]\n",
      "Image: 5k/248.jpg, Majority Vote: [3, 7, 0, 10]\n",
      "Image: 5k/254.jpg, Majority Vote: [2, 5, 0, 1]\n",
      "Image: 5k/260.jpg, Majority Vote: [0]\n",
      "Image: 5k/266.jpg, Majority Vote: [5]\n",
      "Image: 5k/272.jpg, Majority Vote: [2, 4, 0, 10]\n",
      "Image: 5k/278.jpg, Majority Vote: [0]\n",
      "Image: 5k/283.jpg, Majority Vote: [5]\n",
      "Image: 5k/289.jpg, Majority Vote: [10, 5, 0, 7]\n",
      "Image: 5k/295.jpg, Majority Vote: [9, 4, 0, 1]\n",
      "Image: 5k/3.jpg, Majority Vote: [11, 4, 0, 7]\n",
      "Image: 5k/301.jpg, Majority Vote: [6, 4, 0, 7]\n",
      "Image: 5k/307.jpg, Majority Vote: [7]\n",
      "Image: 5k/313.jpg, Majority Vote: [0]\n",
      "Image: 5k/318.jpg, Majority Vote: [6, 5, 0, 11]\n",
      "Image: 5k/324.jpg, Majority Vote: [11, 9, 0, 1]\n",
      "Image: 5k/330.jpg, Majority Vote: [4, 0]\n",
      "Image: 5k/336.jpg, Majority Vote: [9, 4, 0, 7]\n",
      "Image: 5k/342.jpg, Majority Vote: [7, 4, 0, 10]\n",
      "Image: 5k/348.jpg, Majority Vote: [10, 4, 0, 7]\n",
      "Image: 5k/353.jpg, Majority Vote: [3, 5, 0, 1]\n",
      "Image: 5k/359.jpg, Majority Vote: [1, 4, 0, 10]\n",
      "Image: 5k/365.jpg, Majority Vote: [0]\n",
      "Image: 5k/371.jpg, Majority Vote: [2, 9, 0, 3]\n",
      "Image: 5k/377.jpg, Majority Vote: [0]\n",
      "Image: 5k/38.jpg, Majority Vote: [11, 4, 0, 9]\n",
      "Image: 5k/383.jpg, Majority Vote: [11, 4, 0, 5]\n",
      "Image: 5k/388.jpg, Majority Vote: [1, 5, 0, 9]\n",
      "Image: 5k/394.jpg, Majority Vote: [5]\n",
      "Image: 5k/400.jpg, Majority Vote: [7]\n",
      "Image: 5k/406.jpg, Majority Vote: [11, 4, 0, 2]\n",
      "Image: 5k/423.jpg, Majority Vote: [4]\n",
      "Image: 5k/44.jpg, Majority Vote: [3, 4, 0, 6]\n",
      "Image: 5k/458.jpg, Majority Vote: [4, 5, 0, 3]\n",
      "Image: 5k/464.jpg, Majority Vote: [2]\n",
      "Image: 5k/470.jpg, Majority Vote: [1, 4, 0, 5]\n",
      "Image: 5k/476.jpg, Majority Vote: [2, 4, 0, 1]\n",
      "Image: 5k/482.jpg, Majority Vote: [7]\n",
      "Image: 5k/488.jpg, Majority Vote: [10, 4, 0, 3]\n",
      "Image: 5k/493.jpg, Majority Vote: [9, 5, 0, 10]\n",
      "Image: 5k/499.jpg, Majority Vote: [4]\n",
      "Image: 5k/50.jpg, Majority Vote: [3, 4, 0, 5]\n",
      "Image: 5k/505.jpg, Majority Vote: [6, 7, 0, 9]\n",
      "Image: 5k/511.jpg, Majority Vote: [3, 5, 0, 1]\n",
      "Image: 5k/517.jpg, Majority Vote: [3, 4, 0, 7]\n",
      "Image: 5k/523.jpg, Majority Vote: [11, 5, 0, 10]\n",
      "Image: 5k/528.jpg, Majority Vote: [8, 7, 0, 5]\n",
      "Image: 5k/534.jpg, Majority Vote: [4]\n",
      "Image: 5k/540.jpg, Majority Vote: [2, 5, 0, 9]\n",
      "Image: 5k/546.jpg, Majority Vote: [0]\n",
      "Image: 5k/552.jpg, Majority Vote: [9, 5, 0, 11]\n",
      "Image: 5k/558.jpg, Majority Vote: [9, 4, 0, 7]\n",
      "Image: 5k/56.jpg, Majority Vote: [5]\n",
      "Image: 5k/563.jpg, Majority Vote: [2, 4, 0, 9]\n",
      "Image: 5k/569.jpg, Majority Vote: [4, 5, 0, 9]\n",
      "Image: 5k/575.jpg, Majority Vote: [6, 4, 0, 9]\n",
      "Image: 5k/581.jpg, Majority Vote: [0]\n",
      "Image: 5k/587.jpg, Majority Vote: [3, 7, 0, 9]\n",
      "Image: 5k/593.jpg, Majority Vote: [5, 7, 0, 1]\n",
      "Image: 5k/598.jpg, Majority Vote: [5]\n",
      "Image: 5k/604.jpg, Majority Vote: [0]\n",
      "Image: 5k/610.jpg, Majority Vote: [4]\n",
      "Image: 5k/616.jpg, Majority Vote: [10, 5, 0, 1]\n",
      "Image: 5k/622.jpg, Majority Vote: [8, 9, 0, 10]\n",
      "Image: 5k/628.jpg, Majority Vote: [4]\n",
      "Image: 5k/633.jpg, Majority Vote: [1]\n",
      "Image: 5k/639.jpg, Majority Vote: [3, 9, 0, 4]\n",
      "Image: 5k/645.jpg, Majority Vote: [0]\n",
      "Image: 5k/651.jpg, Majority Vote: [0]\n",
      "Image: 5k/668.jpg, Majority Vote: [11]\n",
      "Image: 5k/674.jpg, Majority Vote: [7]\n",
      "Image: 5k/68.jpg, Majority Vote: [8, 7, 0, 3]\n",
      "Image: 5k/680.jpg, Majority Vote: [1, 7, 0, 11]\n",
      "Image: 5k/686.jpg, Majority Vote: [0]\n",
      "Image: 5k/692.jpg, Majority Vote: [8, 4, 0, 3]\n",
      "Image: 5k/698.jpg, Majority Vote: [5, 4, 0, 8]\n",
      "Image: 5k/703.jpg, Majority Vote: [10]\n",
      "Image: 5k/709.jpg, Majority Vote: [6, 4, 0, 8]\n",
      "Image: 5k/715.jpg, Majority Vote: [1]\n",
      "Image: 5k/721.jpg, Majority Vote: [0]\n",
      "Image: 5k/727.jpg, Majority Vote: [3, 4, 0, 11]\n",
      "Image: 5k/73.jpg, Majority Vote: [10, 4, 0, 6]\n",
      "Image: 5k/738.jpg, Majority Vote: [5]\n",
      "Image: 5k/744.jpg, Majority Vote: [4, 7, 0, 6]\n",
      "Image: 5k/750.jpg, Majority Vote: [3, 7, 0, 9]\n",
      "Image: 5k/756.jpg, Majority Vote: [11, 4, 0, 5]\n",
      "Image: 5k/762.jpg, Majority Vote: [5, 9, 0, 6]\n",
      "Image: 5k/768.jpg, Majority Vote: [1, 4, 0, 3]\n",
      "Image: 5k/773.jpg, Majority Vote: [3, 5, 0, 2]\n",
      "Image: 5k/779.jpg, Majority Vote: [8, 4, 0, 11]\n",
      "Image: 5k/785.jpg, Majority Vote: [5, 4, 0, 7]\n",
      "Image: 5k/79.jpg, Majority Vote: [0]\n",
      "Image: 5k/791.jpg, Majority Vote: [0]\n",
      "Image: 5k/797.jpg, Majority Vote: [0]\n",
      "Image: 5k/803.jpg, Majority Vote: [3]\n",
      "Image: 5k/808.jpg, Majority Vote: [5, 7, 0, 11]\n",
      "Image: 5k/814.jpg, Majority Vote: [6, 9, 0, 1]\n",
      "Image: 5k/820.jpg, Majority Vote: [8, 7, 0, 6]\n",
      "Image: 5k/826.jpg, Majority Vote: [2, 4, 0, 1]\n",
      "Image: 5k/832.jpg, Majority Vote: [1, 4, 0, 3]\n",
      "Image: 5k/838.jpg, Majority Vote: [2, 5, 0, 10]\n",
      "Image: 5k/843.jpg, Majority Vote: [5, 9, 0, 11]\n",
      "Image: 5k/849.jpg, Majority Vote: [0]\n",
      "Image: 5k/85.jpg, Majority Vote: [0]\n",
      "Image: 5k/855.jpg, Majority Vote: [3, 5, 0, 10]\n",
      "Image: 5k/861.jpg, Majority Vote: [1, 7, 0, 5]\n",
      "Image: 5k/867.jpg, Majority Vote: [5]\n",
      "Image: 5k/873.jpg, Majority Vote: [2, 9, 0, 5]\n",
      "Image: 5k/878.jpg, Majority Vote: [5, 4, 0, 3]\n",
      "Image: 5k/884.jpg, Majority Vote: [0]\n",
      "Image: 5k/890.jpg, Majority Vote: [10]\n",
      "Image: 5k/896.jpg, Majority Vote: [2, 9, 0, 1]\n",
      "Image: 5k/9.jpg, Majority Vote: [8, 4, 0, 3]\n",
      "Image: 5k/902.jpg, Majority Vote: [10, 4, 0, 3]\n",
      "Image: 5k/908.jpg, Majority Vote: [9]\n",
      "Image: 5k/91.jpg, Majority Vote: [5, 0]\n",
      "Image: 5k/913.jpg, Majority Vote: [4]\n",
      "Image: 5k/919.jpg, Majority Vote: [2, 4, 0, 1]\n",
      "Image: 5k/925.jpg, Majority Vote: [5, 4, 0, 7]\n",
      "Image: 5k/931.jpg, Majority Vote: [7, 5, 0, 8]\n",
      "Image: 5k/937.jpg, Majority Vote: [5]\n",
      "Image: 5k/943.jpg, Majority Vote: [2, 5, 0, 10]\n",
      "Image: 5k/948.jpg, Majority Vote: [4]\n",
      "Image: 5k/954.jpg, Majority Vote: [11, 7, 0, 9]\n",
      "Image: 5k/960.jpg, Majority Vote: [2, 7, 0, 6]\n",
      "Image: 5k/966.jpg, Majority Vote: [4]\n",
      "Image: 5k/97.jpg, Majority Vote: [7, 5, 0, 3]\n",
      "Image: 5k/972.jpg, Majority Vote: [3, 4, 0, 5]\n",
      "Image: 5k/978.jpg, Majority Vote: [6, 4, 0, 10]\n",
      "Image: 5k/983.jpg, Majority Vote: [8, 4, 0, 1]\n",
      "Image: 5k/989.jpg, Majority Vote: [4]\n",
      "Image: 5k/995.jpg, Majority Vote: [8]\n",
      "Image: 5kf/1001.jpg, Majority Vote: [2, 5, 0, 9]\n",
      "Image: 5kf/1007.jpg, Majority Vote: [3, 5, 0, 1]\n",
      "Image: 5kf/1013.jpg, Majority Vote: [7, 9, 0, 3]\n",
      "Image: 5kf/1019.jpg, Majority Vote: [0]\n",
      "Image: 5kf/1024.jpg, Majority Vote: [3, 5, 0, 2]\n",
      "Image: 5kf/103.jpg, Majority Vote: [0]\n",
      "Image: 5kf/1030.jpg, Majority Vote: [3, 4, 0, 5]\n",
      "Image: 5kf/1036.jpg, Majority Vote: [3, 5, 0, 2]\n",
      "Image: 5kf/1042.jpg, Majority Vote: [7, 4, 0, 3]\n",
      "Image: 5kf/1048.jpg, Majority Vote: [3, 5, 0, 11]\n",
      "Image: 5kf/1054.jpg, Majority Vote: [7]\n",
      "Image: 5kf/1059.jpg, Majority Vote: [9, 7, 0, 3]\n",
      "Image: 5kf/1065.jpg, Majority Vote: [2]\n",
      "Image: 5kf/1071.jpg, Majority Vote: [3, 4, 0, 8]\n",
      "Image: 5kf/1077.jpg, Majority Vote: [9]\n",
      "Image: 5kf/1083.jpg, Majority Vote: [5, 4, 0, 2]\n",
      "Image: 5kf/1089.jpg, Majority Vote: [3, 9, 0, 4]\n",
      "Image: 5kf/109.jpg, Majority Vote: [2]\n",
      "Image: 5kf/1094.jpg, Majority Vote: [0]\n",
      "Image: 5kf/1100.jpg, Majority Vote: [8, 5, 0, 11]\n",
      "Image: 5kf/1106.jpg, Majority Vote: [6, 5, 0, 4]\n",
      "Image: 5kf/1112.jpg, Majority Vote: [4, 5, 0, 2]\n",
      "Image: 5kf/1118.jpg, Majority Vote: [9]\n",
      "Image: 5kf/1124.jpg, Majority Vote: [0, 5]\n",
      "Image: 5kf/1129.jpg, Majority Vote: [7]\n",
      "Image: 5kf/1135.jpg, Majority Vote: [4, 7, 0, 5]\n",
      "Image: 5kf/114.jpg, Majority Vote: [5]\n",
      "Image: 5kf/1141.jpg, Majority Vote: [2, 4, 0, 10]\n",
      "Image: 5kf/1147.jpg, Majority Vote: [8, 5, 0, 3]\n",
      "Image: 5kf/1153.jpg, Majority Vote: [11, 5, 0, 2]\n",
      "Image: 5kf/1159.jpg, Majority Vote: [6, 9, 0, 7]\n",
      "Image: 5kf/1164.jpg, Majority Vote: [2]\n",
      "Image: 5kf/1170.jpg, Majority Vote: [3, 5, 0, 7]\n",
      "Image: 5kf/1176.jpg, Majority Vote: [5, 4, 0, 11]\n",
      "Image: 5kf/1182.jpg, Majority Vote: [4, 7, 0, 2]\n",
      "Image: 5kf/1188.jpg, Majority Vote: [7, 4, 0, 2]\n",
      "Image: 5kf/1194.jpg, Majority Vote: [0]\n",
      "Image: 5kf/1199.jpg, Majority Vote: [1, 5, 0, 6]\n",
      "Image: 5kf/120.jpg, Majority Vote: [2, 4, 0, 10]\n",
      "Image: 5kf/1205.jpg, Majority Vote: [11, 5, 0, 7]\n",
      "Image: 5kf/1211.jpg, Majority Vote: [4]\n",
      "Image: 5kf/1217.jpg, Majority Vote: [7, 4, 0, 5]\n",
      "Image: 5kf/1223.jpg, Majority Vote: [0]\n",
      "Image: 5kf/1229.jpg, Majority Vote: [7, 4, 0, 1]\n",
      "Image: 5kf/1234.jpg, Majority Vote: [9, 0]\n",
      "Image: 5kf/1240.jpg, Majority Vote: [11, 4, 0, 6]\n",
      "Image: 5kf/1246.jpg, Majority Vote: [11, 5, 0, 7]\n",
      "Image: 5kf/1252.jpg, Majority Vote: [0]\n",
      "Image: 5kf/1258.jpg, Majority Vote: [2, 7, 0, 6]\n",
      "Image: 5kf/126.jpg, Majority Vote: [6, 4, 0, 3]\n",
      "Image: 5kf/1264.jpg, Majority Vote: [1]\n",
      "Image: 5kf/1269.jpg, Majority Vote: [5, 7, 0, 11]\n",
      "Image: 5kf/1275.jpg, Majority Vote: [10, 4, 0, 8]\n",
      "Image: 5kf/1281.jpg, Majority Vote: [2]\n",
      "Image: 5kf/1287.jpg, Majority Vote: [11, 4, 0, 1]\n",
      "Image: 5kf/1293.jpg, Majority Vote: [9, 5, 0, 7]\n",
      "Image: 5kf/1299.jpg, Majority Vote: [5, 4, 0, 10]\n",
      "Image: 5kf/1304.jpg, Majority Vote: [5, 7, 0, 9]\n",
      "Image: 5kf/1310.jpg, Majority Vote: [6, 7, 0, 4]\n",
      "Image: 5kf/1316.jpg, Majority Vote: [0]\n",
      "Image: 5kf/132.jpg, Majority Vote: [10, 4, 0, 9]\n",
      "Image: 5kf/1322.jpg, Majority Vote: [11, 5, 0, 10]\n",
      "Image: 5kf/1328.jpg, Majority Vote: [0]\n",
      "Image: 5kf/1334.jpg, Majority Vote: [8, 9, 0, 7]\n",
      "Image: 5kf/1339.jpg, Majority Vote: [0]\n",
      "Image: 5kf/1345.jpg, Majority Vote: [6, 4, 0, 3]\n",
      "Image: 5kf/1351.jpg, Majority Vote: [4, 5, 0, 11]\n",
      "Image: 5kf/1357.jpg, Majority Vote: [4, 5, 0, 8]\n",
      "Image: 5kf/1363.jpg, Majority Vote: [7]\n",
      "Image: 5kf/1369.jpg, Majority Vote: [11]\n",
      "Image: 5kf/1374.jpg, Majority Vote: [11, 5, 0, 9]\n",
      "Image: 5kf/138.jpg, Majority Vote: [5, 4, 0, 10]\n",
      "Image: 5kf/1380.jpg, Majority Vote: [1, 5, 0, 11]\n",
      "Image: 5kf/1386.jpg, Majority Vote: [0]\n",
      "Image: 5kf/1392.jpg, Majority Vote: [5, 7, 0, 10]\n",
      "Image: 5kf/1398.jpg, Majority Vote: [6, 4, 0, 11]\n",
      "Image: 5kf/1404.jpg, Majority Vote: [3, 4, 0, 8]\n",
      "Image: 5kf/1409.jpg, Majority Vote: [9]\n",
      "Image: 5kf/1415.jpg, Majority Vote: [0]\n",
      "Image: 5kf/1421.jpg, Majority Vote: [2, 7, 0, 11]\n",
      "Image: 5kf/1427.jpg, Majority Vote: [3, 9, 0, 7]\n",
      "Image: 5kf/1433.jpg, Majority Vote: [3, 5, 0, 6]\n",
      "Image: 5kf/1439.jpg, Majority Vote: [10, 7, 0, 11]\n",
      "Image: 5kf/144.jpg, Majority Vote: [4, 5, 0, 10]\n",
      "Image: 5kf/1444.jpg, Majority Vote: [7]\n",
      "Image: 5kf/1450.jpg, Majority Vote: [6, 7, 0, 8]\n",
      "Image: 5kf/1456.jpg, Majority Vote: [5, 4, 0, 1]\n",
      "Image: 5kf/1462.jpg, Majority Vote: [0]\n",
      "Image: 5kf/1468.jpg, Majority Vote: [5]\n",
      "Image: 5kf/1474.jpg, Majority Vote: [2, 5, 0, 9]\n",
      "Image: 5kf/1479.jpg, Majority Vote: [9]\n",
      "Image: 5kf/1485.jpg, Majority Vote: [1, 5, 0, 7]\n",
      "Image: 5kf/149.jpg, Majority Vote: [0]\n",
      "Image: 5kf/1491.jpg, Majority Vote: [8, 7, 0, 5]\n",
      "Image: 5kf/1497.jpg, Majority Vote: [2, 5, 0, 11]\n",
      "Image: 5kf/15.jpg, Majority Vote: [7, 4, 0, 3]\n",
      "Image: 5kf/1503.jpg, Majority Vote: [0]\n",
      "Image: 5kf/1509.jpg, Majority Vote: [4]\n",
      "Image: 5kf/1514.jpg, Majority Vote: [1, 7, 0, 2]\n",
      "Image: 5kf/1520.jpg, Majority Vote: [3, 7, 0, 5]\n",
      "Image: 5kf/1526.jpg, Majority Vote: [6, 5, 0, 9]\n",
      "Image: 5kf/1532.jpg, Majority Vote: [7]\n",
      "Image: 5kf/1538.jpg, Majority Vote: [1, 5, 0, 3]\n",
      "Image: 5kf/1544.jpg, Majority Vote: [6, 4, 0, 5]\n",
      "Image: 5kf/1549.jpg, Majority Vote: [11, 7, 0, 4]\n",
      "Image: 5kf/155.jpg, Majority Vote: [4, 9, 0, 2]\n",
      "Image: 5kf/1555.jpg, Majority Vote: [11, 5, 0, 1]\n",
      "Image: 5kf/1561.jpg, Majority Vote: [8, 4, 0, 2]\n",
      "Image: 5kf/1567.jpg, Majority Vote: [0]\n",
      "Image: 5kf/1573.jpg, Majority Vote: [6, 5, 0, 9]\n",
      "Image: 5kf/1579.jpg, Majority Vote: [2, 9, 0, 1]\n",
      "Image: 5kf/1584.jpg, Majority Vote: [0]\n",
      "Image: 5kf/1590.jpg, Majority Vote: [9, 4, 0, 5]\n",
      "Image: 5kf/1596.jpg, Majority Vote: [6]\n",
      "Image: 5kf/1602.jpg, Majority Vote: [6, 4, 0, 9]\n",
      "Image: 5kf/1608.jpg, Majority Vote: [5]\n",
      "Image: 5kf/161.jpg, Majority Vote: [5]\n",
      "Image: 5kf/1614.jpg, Majority Vote: [1, 5, 0, 9]\n",
      "Image: 5kf/1619.jpg, Majority Vote: [0]\n",
      "Image: 5kf/1625.jpg, Majority Vote: [7, 4, 0, 9]\n",
      "Image: 5kf/1631.jpg, Majority Vote: [4]\n",
      "Image: 5kf/1637.jpg, Majority Vote: [11, 5, 0, 1]\n",
      "Image: 5kf/1643.jpg, Majority Vote: [2, 7, 0, 3]\n",
      "Image: 5kf/1649.jpg, Majority Vote: [9]\n",
      "Image: 5kf/1654.jpg, Majority Vote: [4, 7, 0, 10]\n",
      "Image: 5kf/1660.jpg, Majority Vote: [4]\n",
      "Image: 5kf/1666.jpg, Majority Vote: [6]\n",
      "Image: 5kf/167.jpg, Majority Vote: [4]\n",
      "Image: 5kf/1672.jpg, Majority Vote: [6, 4, 0, 2]\n",
      "Image: 5kf/1678.jpg, Majority Vote: [2, 4, 0, 8]\n",
      "Image: 5kf/1684.jpg, Majority Vote: [9]\n",
      "Image: 5kf/1689.jpg, Majority Vote: [6, 5, 0, 1]\n",
      "Image: 5kf/1695.jpg, Majority Vote: [4]\n",
      "Image: 5kf/1701.jpg, Majority Vote: [11, 9, 0, 6]\n",
      "Image: 5kf/1707.jpg, Majority Vote: [2]\n",
      "Image: 5kf/1713.jpg, Majority Vote: [4]\n",
      "Image: 5kf/1719.jpg, Majority Vote: [1, 4, 0, 10]\n",
      "Image: 5kf/1724.jpg, Majority Vote: [0]\n",
      "Image: 5kf/173.jpg, Majority Vote: [9, 4, 0, 11]\n",
      "Image: 5kf/1730.jpg, Majority Vote: [2, 4, 0, 9]\n",
      "Image: 5kf/1736.jpg, Majority Vote: [9]\n",
      "Image: 5kf/1742.jpg, Majority Vote: [0]\n",
      "Image: 5kf/1748.jpg, Majority Vote: [4, 7, 0, 10]\n",
      "Image: 5kf/1754.jpg, Majority Vote: [5]\n",
      "Image: 5kf/1759.jpg, Majority Vote: [2, 5, 0, 11]\n",
      "Image: 5kf/1765.jpg, Majority Vote: [5]\n",
      "Image: 5kf/1771.jpg, Majority Vote: [3, 5, 0, 11]\n",
      "Image: 5kf/1777.jpg, Majority Vote: [6, 5, 0, 1]\n",
      "Image: 5kf/1783.jpg, Majority Vote: [4]\n",
      "Image: 5kf/1789.jpg, Majority Vote: [0]\n",
      "Image: 5kf/179.jpg, Majority Vote: [6, 4, 0, 11]\n",
      "Image: 5kf/1794.jpg, Majority Vote: [8, 5, 0, 7]\n",
      "Image: 5kf/1800.jpg, Majority Vote: [1, 4, 0, 2]\n",
      "Image: 5kf/1806.jpg, Majority Vote: [11, 5, 0, 2]\n",
      "Image: 5kf/1812.jpg, Majority Vote: [11, 9, 0, 5]\n",
      "Image: 5kf/1818.jpg, Majority Vote: [3, 5, 0, 4]\n",
      "Image: 5kf/1823.jpg, Majority Vote: [8, 4, 0, 5]\n",
      "Image: 5kf/1828.jpg, Majority Vote: [2, 5, 0, 10]\n",
      "Image: 5kf/1833.jpg, Majority Vote: [2, 5, 0, 6]\n",
      "Image: 5kf/1838.jpg, Majority Vote: [2, 4, 0, 9]\n",
      "Image: 5kf/184.jpg, Majority Vote: [5]\n",
      "Image: 5kf/1843.jpg, Majority Vote: [8, 4, 0, 5]\n",
      "Image: 5kf/1848.jpg, Majority Vote: [0]\n",
      "Image: 5kf/1853.jpg, Majority Vote: [11, 4, 0, 5]\n",
      "Image: 5kf/1858.jpg, Majority Vote: [2, 4, 0, 9]\n",
      "Image: 5kf/190.jpg, Majority Vote: [7]\n",
      "Image: 5kf/196.jpg, Majority Vote: [7, 0]\n",
      "Image: 5kf/202.jpg, Majority Vote: [7]\n",
      "Image: 5kf/208.jpg, Majority Vote: [2, 5, 0, 11]\n",
      "Image: 5kf/21.jpg, Majority Vote: [3, 5, 0, 1]\n",
      "Image: 5kf/214.jpg, Majority Vote: [9]\n",
      "Image: 5kf/219.jpg, Majority Vote: [9, 5, 0, 2]\n",
      "Image: 5kf/225.jpg, Majority Vote: [11, 4, 0, 8]\n",
      "Image: 5kf/231.jpg, Majority Vote: [4]\n",
      "Image: 5kf/237.jpg, Majority Vote: [0]\n",
      "Image: 5kf/243.jpg, Majority Vote: [11, 4, 0, 3]\n",
      "Image: 5kf/249.jpg, Majority Vote: [7]\n",
      "Image: 5kf/254.jpg, Majority Vote: [8, 9, 0, 5]\n",
      "Image: 5kf/260.jpg, Majority Vote: [2, 4, 0, 7]\n",
      "Image: 5kf/266.jpg, Majority Vote: [5]\n",
      "Image: 5kf/27.jpg, Majority Vote: [0]\n",
      "Image: 5kf/272.jpg, Majority Vote: [4, 5, 0, 1]\n",
      "Image: 5kf/278.jpg, Majority Vote: [0]\n",
      "Image: 5kf/284.jpg, Majority Vote: [6, 4, 0, 2]\n",
      "Image: 5kf/289.jpg, Majority Vote: [0]\n",
      "Image: 5kf/295.jpg, Majority Vote: [5, 7, 0, 11]\n",
      "Image: 5kf/301.jpg, Majority Vote: [9]\n",
      "Image: 5kf/307.jpg, Majority Vote: [1, 5, 0, 10]\n",
      "Image: 5kf/313.jpg, Majority Vote: [3, 4, 0, 5]\n",
      "Image: 5kf/319.jpg, Majority Vote: [9]\n",
      "Image: 5kf/324.jpg, Majority Vote: [3]\n",
      "Image: 5kf/33.jpg, Majority Vote: [5, 9, 0, 10]\n",
      "Image: 5kf/330.jpg, Majority Vote: [1, 4, 0, 6]\n",
      "Image: 5kf/336.jpg, Majority Vote: [1, 5, 0, 3]\n",
      "Image: 5kf/342.jpg, Majority Vote: [3]\n",
      "Image: 5kf/348.jpg, Majority Vote: [3]\n",
      "Image: 5kf/354.jpg, Majority Vote: [4]\n",
      "Image: 5kf/359.jpg, Majority Vote: [4]\n",
      "Image: 5kf/365.jpg, Majority Vote: [10, 4, 0, 11]\n",
      "Image: 5kf/371.jpg, Majority Vote: [9]\n",
      "Image: 5kf/377.jpg, Majority Vote: [9]\n",
      "Image: 5kf/383.jpg, Majority Vote: [5, 7, 0, 6]\n",
      "Image: 5kf/389.jpg, Majority Vote: [6, 9, 0, 11]\n",
      "Image: 5kf/39.jpg, Majority Vote: [9]\n",
      "Image: 5kf/394.jpg, Majority Vote: [0, 7]\n",
      "Image: 5kf/4.jpg, Majority Vote: [1, 5, 0, 6]\n",
      "Image: 5kf/400.jpg, Majority Vote: [3, 4, 0, 5]\n",
      "Image: 5kf/406.jpg, Majority Vote: [4]\n",
      "Image: 5kf/412.jpg, Majority Vote: [3]\n",
      "Image: 5kf/418.jpg, Majority Vote: [2, 5, 0, 9]\n",
      "Image: 5kf/424.jpg, Majority Vote: [10, 5, 0, 3]\n",
      "Image: 5kf/429.jpg, Majority Vote: [11, 4, 0, 7]\n",
      "Image: 5kf/435.jpg, Majority Vote: [5, 7, 0, 1]\n",
      "Image: 5kf/44.jpg, Majority Vote: [3, 7, 0, 2]\n",
      "Image: 5kf/441.jpg, Majority Vote: [10, 4, 0, 3]\n",
      "Image: 5kf/447.jpg, Majority Vote: [11, 7, 0, 6]\n",
      "Image: 5kf/453.jpg, Majority Vote: [4]\n",
      "Image: 5kf/459.jpg, Majority Vote: [0]\n",
      "Image: 5kf/464.jpg, Majority Vote: [11, 4, 0, 8]\n",
      "Image: 5kf/470.jpg, Majority Vote: [7, 5, 0, 10]\n",
      "Image: 5kf/476.jpg, Majority Vote: [1, 7, 0, 8]\n",
      "Image: 5kf/482.jpg, Majority Vote: [0]\n",
      "Image: 5kf/488.jpg, Majority Vote: [5, 4, 0, 2]\n",
      "Image: 5kf/494.jpg, Majority Vote: [0]\n",
      "Image: 5kf/499.jpg, Majority Vote: [8, 4, 0, 6]\n",
      "Image: 5kf/50.jpg, Majority Vote: [11]\n",
      "Image: 5kf/505.jpg, Majority Vote: [0]\n",
      "Image: 5kf/511.jpg, Majority Vote: [0]\n",
      "Image: 5kf/517.jpg, Majority Vote: [5, 9, 0, 8]\n",
      "Image: 5kf/523.jpg, Majority Vote: [4]\n",
      "Image: 5kf/529.jpg, Majority Vote: [0]\n",
      "Image: 5kf/534.jpg, Majority Vote: [2, 5, 0, 11]\n",
      "Image: 5kf/540.jpg, Majority Vote: [2, 4, 0, 1]\n",
      "Image: 5kf/546.jpg, Majority Vote: [7, 5, 0, 6]\n",
      "Image: 5kf/552.jpg, Majority Vote: [0]\n",
      "Image: 5kf/558.jpg, Majority Vote: [8, 9, 0, 7]\n",
      "Image: 5kf/56.jpg, Majority Vote: [0]\n",
      "Image: 5kf/564.jpg, Majority Vote: [4, 7, 0, 8]\n",
      "Image: 5kf/569.jpg, Majority Vote: [1, 4, 0, 7]\n",
      "Image: 5kf/575.jpg, Majority Vote: [5, 4, 0, 6]\n",
      "Image: 5kf/581.jpg, Majority Vote: [5, 4, 0, 1]\n",
      "Image: 5kf/587.jpg, Majority Vote: [2, 4, 0, 7]\n",
      "Image: 5kf/593.jpg, Majority Vote: [6, 7, 0, 4]\n",
      "Image: 5kf/599.jpg, Majority Vote: [11, 5, 0, 3]\n",
      "Image: 5kf/604.jpg, Majority Vote: [10, 9, 0, 1]\n",
      "Image: 5kf/610.jpg, Majority Vote: [2, 9, 0, 6]\n",
      "Image: 5kf/616.jpg, Majority Vote: [7]\n",
      "Image: 5kf/62.jpg, Majority Vote: [2, 4, 0, 8]\n",
      "Image: 5kf/622.jpg, Majority Vote: [1, 4, 0, 5]\n",
      "Image: 5kf/628.jpg, Majority Vote: [0]\n",
      "Image: 5kf/634.jpg, Majority Vote: [0]\n",
      "Image: 5kf/639.jpg, Majority Vote: [11, 7, 0, 1]\n",
      "Image: 5kf/645.jpg, Majority Vote: [4]\n",
      "Image: 5kf/651.jpg, Majority Vote: [8, 4, 0, 10]\n",
      "Image: 5kf/657.jpg, Majority Vote: [2, 4, 0, 1]\n",
      "Image: 5kf/663.jpg, Majority Vote: [3, 5, 0, 1]\n",
      "Image: 5kf/669.jpg, Majority Vote: [8, 4, 0, 2]\n",
      "Image: 5kf/674.jpg, Majority Vote: [7]\n",
      "Image: 5kf/68.jpg, Majority Vote: [7]\n",
      "Image: 5kf/680.jpg, Majority Vote: [2, 5, 0, 7]\n",
      "Image: 5kf/686.jpg, Majority Vote: [3, 4, 0, 2]\n",
      "Image: 5kf/692.jpg, Majority Vote: [6, 4, 0, 11]\n",
      "Image: 5kf/698.jpg, Majority Vote: [6, 4, 0, 10]\n",
      "Image: 5kf/704.jpg, Majority Vote: [3, 4, 0, 1]\n",
      "Image: 5kf/709.jpg, Majority Vote: [4]\n",
      "Image: 5kf/715.jpg, Majority Vote: [0]\n",
      "Image: 5kf/721.jpg, Majority Vote: [1]\n",
      "Image: 5kf/727.jpg, Majority Vote: [8, 4, 0, 9]\n",
      "Image: 5kf/733.jpg, Majority Vote: [9, 4, 0, 2]\n",
      "Image: 5kf/739.jpg, Majority Vote: [3, 7, 0, 1]\n",
      "Image: 5kf/74.jpg, Majority Vote: [3, 7, 0, 6]\n",
      "Image: 5kf/744.jpg, Majority Vote: [9, 7, 0, 3]\n",
      "Image: 5kf/750.jpg, Majority Vote: [7, 9, 0, 10]\n",
      "Image: 5kf/756.jpg, Majority Vote: [6, 7, 0, 3]\n",
      "Image: 5kf/762.jpg, Majority Vote: [0]\n",
      "Image: 5kf/768.jpg, Majority Vote: [3, 7, 0, 2]\n",
      "Image: 5kf/774.jpg, Majority Vote: [4]\n",
      "Image: 5kf/779.jpg, Majority Vote: [0]\n",
      "Image: 5kf/785.jpg, Majority Vote: [8, 4, 0, 6]\n",
      "Image: 5kf/79.jpg, Majority Vote: [4]\n",
      "Image: 5kf/791.jpg, Majority Vote: [5]\n",
      "Image: 5kf/797.jpg, Majority Vote: [6]\n",
      "Image: 5kf/803.jpg, Majority Vote: [4]\n",
      "Image: 5kf/809.jpg, Majority Vote: [2, 9, 0, 4]\n",
      "Image: 5kf/814.jpg, Majority Vote: [0]\n",
      "Image: 5kf/820.jpg, Majority Vote: [6]\n",
      "Image: 5kf/826.jpg, Majority Vote: [9, 7, 0, 10]\n",
      "Image: 5kf/832.jpg, Majority Vote: [11, 5, 0, 8]\n",
      "Image: 5kf/838.jpg, Majority Vote: [5]\n",
      "Image: 5kf/844.jpg, Majority Vote: [1, 4, 0, 9]\n",
      "Image: 5kf/849.jpg, Majority Vote: [5]\n",
      "Image: 5kf/85.jpg, Majority Vote: [1, 9, 0, 11]\n",
      "Image: 5kf/855.jpg, Majority Vote: [3, 5, 0, 11]\n",
      "Image: 5kf/861.jpg, Majority Vote: [8, 7, 0, 2]\n",
      "Image: 5kf/867.jpg, Majority Vote: [5, 7, 0, 9]\n",
      "Image: 5kf/873.jpg, Majority Vote: [6, 7, 0, 10]\n",
      "Image: 5kf/879.jpg, Majority Vote: [0]\n",
      "Image: 5kf/884.jpg, Majority Vote: [0]\n",
      "Image: 5kf/890.jpg, Majority Vote: [11, 4, 0, 1]\n",
      "Image: 5kf/896.jpg, Majority Vote: [11, 4, 0, 2]\n",
      "Image: 5kf/9.jpg, Majority Vote: [5, 4, 0, 7]\n",
      "Image: 5kf/902.jpg, Majority Vote: [4]\n",
      "Image: 5kf/908.jpg, Majority Vote: [11, 5, 0, 7]\n",
      "Image: 5kf/91.jpg, Majority Vote: [1, 7, 0, 10]\n",
      "Image: 5kf/914.jpg, Majority Vote: [3, 7, 0, 4]\n",
      "Image: 5kf/919.jpg, Majority Vote: [0]\n",
      "Image: 5kf/925.jpg, Majority Vote: [6]\n",
      "Image: 5kf/931.jpg, Majority Vote: [8, 5, 0, 9]\n",
      "Image: 5kf/937.jpg, Majority Vote: [1, 5, 0, 11]\n",
      "Image: 5kf/943.jpg, Majority Vote: [4, 9, 0, 10]\n",
      "Image: 5kf/949.jpg, Majority Vote: [7]\n",
      "Image: 5kf/954.jpg, Majority Vote: [5]\n",
      "Image: 5kf/960.jpg, Majority Vote: [2, 4, 0, 9]\n",
      "Image: 5kf/966.jpg, Majority Vote: [5]\n",
      "Image: 5kf/97.jpg, Majority Vote: [6, 4, 0, 5]\n",
      "Image: 5kf/972.jpg, Majority Vote: [3]\n",
      "Image: 5kf/978.jpg, Majority Vote: [0]\n",
      "Image: 5kf/984.jpg, Majority Vote: [9, 4, 0, 5]\n",
      "Image: 5kf/989.jpg, Majority Vote: [5]\n",
      "Image: 5kf/995.jpg, Majority Vote: [5]\n",
      "Image: 20k/1001.jpg, Majority Vote: [0]\n",
      "Image: 20k/1007.jpg, Majority Vote: [0]\n",
      "Image: 20k/1013.jpg, Majority Vote: [0]\n",
      "Image: 20k/1025.jpg, Majority Vote: [0]\n",
      "Image: 20k/103.jpg, Majority Vote: [7, 4, 0, 10]\n",
      "Image: 20k/1031.jpg, Majority Vote: [9, 7, 0, 5]\n",
      "Image: 20k/1036.jpg, Majority Vote: [4]\n",
      "Image: 20k/1042.jpg, Majority Vote: [11, 4, 0, 7]\n",
      "Image: 20k/1048.jpg, Majority Vote: [1, 5, 0, 4]\n",
      "Image: 20k/1054.jpg, Majority Vote: [4]\n",
      "Image: 20k/1060.jpg, Majority Vote: [2, 5, 0, 11]\n",
      "Image: 20k/1066.jpg, Majority Vote: [0]\n",
      "Image: 20k/1083.jpg, Majority Vote: [0]\n",
      "Image: 20k/109.jpg, Majority Vote: [5, 7, 0, 3]\n",
      "Image: 20k/1101.jpg, Majority Vote: [7]\n",
      "Image: 20k/1106.jpg, Majority Vote: [7, 9, 0, 3]\n",
      "Image: 20k/1112.jpg, Majority Vote: [0]\n",
      "Image: 20k/1118.jpg, Majority Vote: [0]\n",
      "Image: 20k/1124.jpg, Majority Vote: [2, 4, 0, 3]\n",
      "Image: 20k/1130.jpg, Majority Vote: [2, 4, 0, 3]\n",
      "Image: 20k/1136.jpg, Majority Vote: [9, 5, 0, 4]\n",
      "Image: 20k/1147.jpg, Majority Vote: [2, 4, 0, 11]\n",
      "Image: 20k/1153.jpg, Majority Vote: [8, 9, 0, 6]\n",
      "Image: 20k/1159.jpg, Majority Vote: [0]\n",
      "Image: 20k/1165.jpg, Majority Vote: [4, 9, 0, 3]\n",
      "Image: 20k/1171.jpg, Majority Vote: [5]\n",
      "Image: 20k/1176.jpg, Majority Vote: [4]\n",
      "Image: 20k/1182.jpg, Majority Vote: [11, 9, 0, 2]\n",
      "Image: 20k/1188.jpg, Majority Vote: [3]\n",
      "Image: 20k/1194.jpg, Majority Vote: [0, 7]\n",
      "Image: 20k/1200.jpg, Majority Vote: [3, 7, 0, 9]\n",
      "Image: 20k/1211.jpg, Majority Vote: [5, 7, 0, 4]\n",
      "Image: 20k/1217.jpg, Majority Vote: [9]\n",
      "Image: 20k/1223.jpg, Majority Vote: [0]\n",
      "Image: 20k/1241.jpg, Majority Vote: [3, 7, 0, 8]\n",
      "Image: 20k/1246.jpg, Majority Vote: [7, 4, 0, 2]\n",
      "Image: 20k/1252.jpg, Majority Vote: [11, 4, 0, 3]\n",
      "Image: 20k/1258.jpg, Majority Vote: [11, 9, 0, 1]\n",
      "Image: 20k/1270.jpg, Majority Vote: [3, 4, 0, 10]\n",
      "Image: 20k/1276.jpg, Majority Vote: [0]\n",
      "Image: 20k/1281.jpg, Majority Vote: [0]\n",
      "Image: 20k/1287.jpg, Majority Vote: [0]\n",
      "Image: 20k/1293.jpg, Majority Vote: [0]\n",
      "Image: 20k/1305.jpg, Majority Vote: [11, 7, 0, 3]\n",
      "Image: 20k/1311.jpg, Majority Vote: [8, 4, 0, 5]\n",
      "Image: 20k/1316.jpg, Majority Vote: [11, 5, 0, 2]\n",
      "Image: 20k/1322.jpg, Majority Vote: [2, 5, 0, 3]\n",
      "Image: 20k/1328.jpg, Majority Vote: [0]\n",
      "Image: 20k/1334.jpg, Majority Vote: [11, 4, 0, 7]\n",
      "Image: 20k/1340.jpg, Majority Vote: [1, 5, 0, 10]\n",
      "Image: 20k/1346.jpg, Majority Vote: [9, 7, 0, 10]\n",
      "Image: 20k/1351.jpg, Majority Vote: [2, 7, 0, 1]\n",
      "Image: 20k/1357.jpg, Majority Vote: [6]\n",
      "Image: 20k/1363.jpg, Majority Vote: [0]\n",
      "Image: 20k/1369.jpg, Majority Vote: [4, 5, 0, 10]\n",
      "Image: 20k/1375.jpg, Majority Vote: [8, 5, 0, 11]\n",
      "Image: 20k/1386.jpg, Majority Vote: [2, 7, 0, 10]\n",
      "Image: 20k/1392.jpg, Majority Vote: [8, 4, 0, 2]\n",
      "Image: 20k/1398.jpg, Majority Vote: [9, 0]\n",
      "Image: 20k/1404.jpg, Majority Vote: [3, 5, 0, 7]\n",
      "Image: 20k/1410.jpg, Majority Vote: [6, 4, 0, 11]\n",
      "Image: 20k/1421.jpg, Majority Vote: [2, 5, 0, 8]\n",
      "Image: 20k/1427.jpg, Majority Vote: [7, 0]\n",
      "Image: 20k/1433.jpg, Majority Vote: [0]\n",
      "Image: 20k/1439.jpg, Majority Vote: [9, 7, 0, 2]\n",
      "Image: 20k/1445.jpg, Majority Vote: [0]\n",
      "Image: 20k/1451.jpg, Majority Vote: [5, 9, 0, 4]\n",
      "Image: 20k/1456.jpg, Majority Vote: [0]\n",
      "Image: 20k/1462.jpg, Majority Vote: [3, 5, 0, 9]\n",
      "Image: 20k/1468.jpg, Majority Vote: [2, 4, 0, 1]\n",
      "Image: 20k/1480.jpg, Majority Vote: [3, 4, 0, 7]\n",
      "Image: 20k/1486.jpg, Majority Vote: [5, 7, 0, 9]\n",
      "Image: 20k/1491.jpg, Majority Vote: [11, 7, 0, 1]\n",
      "Image: 20k/1497.jpg, Majority Vote: [0]\n",
      "Image: 20k/1503.jpg, Majority Vote: [6, 9, 0, 1]\n",
      "Image: 20k/1509.jpg, Majority Vote: [4]\n",
      "Image: 20k/1515.jpg, Majority Vote: [6, 7, 0, 2]\n",
      "Image: 20k/1521.jpg, Majority Vote: [11, 7, 0, 6]\n",
      "Image: 20k/1526.jpg, Majority Vote: [11, 4, 0, 7]\n",
      "Image: 20k/1532.jpg, Majority Vote: [0]\n",
      "Image: 20k/1538.jpg, Majority Vote: [0]\n",
      "Image: 20k/1544.jpg, Majority Vote: [0]\n",
      "Image: 20k/1550.jpg, Majority Vote: [7]\n",
      "Image: 20k/1556.jpg, Majority Vote: [0]\n",
      "Image: 20k/1573.jpg, Majority Vote: [8]\n",
      "Image: 20k/1579.jpg, Majority Vote: [9, 5, 0, 3]\n",
      "Image: 20k/1585.jpg, Majority Vote: [5, 7, 0, 6]\n",
      "Image: 20k/1596.jpg, Majority Vote: [1, 7, 0, 11]\n",
      "Image: 20k/1602.jpg, Majority Vote: [3, 5, 0, 7]\n",
      "Image: 20k/1608.jpg, Majority Vote: [3, 5, 0, 7]\n",
      "Image: 20k/161.jpg, Majority Vote: [0]\n",
      "Image: 20k/1614.jpg, Majority Vote: [2, 5, 0, 1]\n",
      "Image: 20k/1620.jpg, Majority Vote: [4, 5, 0, 11]\n",
      "Image: 20k/1626.jpg, Majority Vote: [0]\n",
      "Image: 20k/1631.jpg, Majority Vote: [6, 4, 0, 2]\n",
      "Image: 20k/1637.jpg, Majority Vote: [8, 7, 0, 11]\n",
      "Image: 20k/1643.jpg, Majority Vote: [7, 4, 0, 9]\n",
      "Image: 20k/1649.jpg, Majority Vote: [6, 7, 0, 2]\n",
      "Image: 20k/1655.jpg, Majority Vote: [5, 9, 0, 7]\n",
      "Image: 20k/1661.jpg, Majority Vote: [4]\n",
      "Image: 20k/1666.jpg, Majority Vote: [0]\n",
      "Image: 20k/167.jpg, Majority Vote: [2, 7, 0, 1]\n",
      "Image: 20k/1672.jpg, Majority Vote: [0]\n",
      "Image: 20k/1678.jpg, Majority Vote: [9, 5, 0, 7]\n",
      "Image: 20k/1684.jpg, Majority Vote: [3, 5, 0, 4]\n",
      "Image: 20k/1690.jpg, Majority Vote: [0]\n",
      "Image: 20k/1696.jpg, Majority Vote: [8, 7, 0, 9]\n",
      "Image: 20k/1701.jpg, Majority Vote: [9, 4, 0, 2]\n",
      "Image: 20k/1707.jpg, Majority Vote: [1, 4, 0, 5]\n",
      "Image: 20k/1713.jpg, Majority Vote: [1, 4, 0, 9]\n",
      "Image: 20k/1725.jpg, Majority Vote: [2, 5, 0, 7]\n",
      "Image: 20k/173.jpg, Majority Vote: [8, 4, 0, 1]\n",
      "Image: 20k/1731.jpg, Majority Vote: [0]\n",
      "Image: 20k/1736.jpg, Majority Vote: [4]\n",
      "Image: 20k/1742.jpg, Majority Vote: [11, 5, 0, 8]\n",
      "Image: 20k/1748.jpg, Majority Vote: [5, 4, 0, 1]\n",
      "Image: 20k/1754.jpg, Majority Vote: [8, 4, 0, 5]\n",
      "Image: 20k/1760.jpg, Majority Vote: [3, 5, 0, 8]\n",
      "Image: 20k/1766.jpg, Majority Vote: [0]\n",
      "Image: 20k/1771.jpg, Majority Vote: [1]\n",
      "Image: 20k/179.jpg, Majority Vote: [1, 9, 0, 5]\n",
      "Image: 20k/1806.jpg, Majority Vote: [7, 9, 0, 8]\n",
      "Image: 20k/1823.jpg, Majority Vote: [5, 4, 0, 3]\n",
      "Image: 20k/1833.jpg, Majority Vote: [0]\n",
      "Image: 20k/1838.jpg, Majority Vote: [9, 5, 0, 11]\n",
      "Image: 20k/191.jpg, Majority Vote: [2, 4, 0, 10]\n",
      "Image: 20k/202.jpg, Majority Vote: [0]\n",
      "Image: 20k/220.jpg, Majority Vote: [9, 4, 0, 3]\n",
      "Image: 20k/249.jpg, Majority Vote: [0]\n",
      "Image: 20k/266.jpg, Majority Vote: [5, 9, 0, 6]\n",
      "Image: 20k/272.jpg, Majority Vote: [0]\n",
      "Image: 20k/278.jpg, Majority Vote: [6, 7, 0, 9]\n",
      "Image: 20k/284.jpg, Majority Vote: [3, 4, 0, 8]\n",
      "Image: 20k/290.jpg, Majority Vote: [1, 7, 0, 6]\n",
      "Image: 20k/307.jpg, Majority Vote: [0]\n",
      "Image: 20k/366.jpg, Majority Vote: [0]\n",
      "Image: 20k/4.jpg, Majority Vote: [2, 5, 0, 6]\n",
      "Image: 20k/453.jpg, Majority Vote: [0]\n",
      "Image: 20k/541.jpg, Majority Vote: [1, 7, 0, 4]\n",
      "Image: 20k/56.jpg, Majority Vote: [8, 5, 0, 1]\n",
      "Image: 20k/581.jpg, Majority Vote: [0]\n",
      "Image: 20k/587.jpg, Majority Vote: [3, 4, 0, 9]\n",
      "Image: 20k/593.jpg, Majority Vote: [8, 5, 0, 9]\n",
      "Image: 20k/599.jpg, Majority Vote: [1, 4, 0, 8]\n",
      "Image: 20k/605.jpg, Majority Vote: [7, 4, 0, 1]\n",
      "Image: 20k/611.jpg, Majority Vote: [6, 5, 0, 1]\n",
      "Image: 20k/62.jpg, Majority Vote: [7, 5, 0, 9]\n",
      "Image: 20k/634.jpg, Majority Vote: [0]\n",
      "Image: 20k/68.jpg, Majority Vote: [11, 4, 0, 2]\n",
      "Image: 20k/686.jpg, Majority Vote: [7, 9, 0, 2]\n",
      "Image: 20k/692.jpg, Majority Vote: [7]\n",
      "Image: 20k/698.jpg, Majority Vote: [0]\n",
      "Image: 20k/704.jpg, Majority Vote: [4, 5, 0, 11]\n",
      "Image: 20k/710.jpg, Majority Vote: [10, 5, 0, 4]\n",
      "Image: 20k/716.jpg, Majority Vote: [7, 5, 0, 3]\n",
      "Image: 20k/721.jpg, Majority Vote: [8, 4, 0, 3]\n",
      "Image: 20k/727.jpg, Majority Vote: [6, 4, 0, 5]\n",
      "Image: 20k/739.jpg, Majority Vote: [9, 4, 0, 11]\n",
      "Image: 20k/74.jpg, Majority Vote: [0]\n",
      "Image: 20k/745.jpg, Majority Vote: [2, 9, 0, 1]\n",
      "Image: 20k/751.jpg, Majority Vote: [0]\n",
      "Image: 20k/756.jpg, Majority Vote: [2, 4, 0, 9]\n",
      "Image: 20k/762.jpg, Majority Vote: [3, 4, 0, 7]\n",
      "Image: 20k/786.jpg, Majority Vote: [0, 4]\n",
      "Image: 20k/791.jpg, Majority Vote: [9]\n",
      "Image: 20k/797.jpg, Majority Vote: [3, 5, 0, 10]\n",
      "Image: 20k/80.jpg, Majority Vote: [5, 9, 0, 11]\n",
      "Image: 20k/803.jpg, Majority Vote: [8, 4, 0, 3]\n",
      "Image: 20k/809.jpg, Majority Vote: [0]\n",
      "Image: 20k/815.jpg, Majority Vote: [8, 4, 0, 9]\n",
      "Image: 20k/821.jpg, Majority Vote: [6, 4, 0, 9]\n",
      "Image: 20k/826.jpg, Majority Vote: [3, 4, 0, 2]\n",
      "Image: 20k/832.jpg, Majority Vote: [7, 9, 0, 11]\n",
      "Image: 20k/838.jpg, Majority Vote: [9, 4, 0, 2]\n",
      "Image: 20k/844.jpg, Majority Vote: [7]\n",
      "Image: 20k/850.jpg, Majority Vote: [2, 4, 0, 6]\n",
      "Image: 20k/856.jpg, Majority Vote: [7, 4, 0, 6]\n",
      "Image: 20k/86.jpg, Majority Vote: [0]\n",
      "Image: 20k/861.jpg, Majority Vote: [2, 9, 0, 5]\n",
      "Image: 20k/867.jpg, Majority Vote: [8, 4, 0, 1]\n",
      "Image: 20k/873.jpg, Majority Vote: [8, 7, 0, 1]\n",
      "Image: 20k/879.jpg, Majority Vote: [6, 7, 0, 11]\n",
      "Image: 20k/896.jpg, Majority Vote: [6, 7, 0, 8]\n",
      "Image: 20k/908.jpg, Majority Vote: [2, 7, 0, 8]\n",
      "Image: 20k/920.jpg, Majority Vote: [0]\n",
      "Image: 20k/926.jpg, Majority Vote: [11]\n",
      "Image: 20k/931.jpg, Majority Vote: [0]\n",
      "Image: 20k/937.jpg, Majority Vote: [4]\n",
      "Image: 20k/943.jpg, Majority Vote: [2, 5, 0, 3]\n",
      "Image: 20k/949.jpg, Majority Vote: [9, 5, 0, 7]\n",
      "Image: 20k/955.jpg, Majority Vote: [0]\n",
      "Image: 20k/961.jpg, Majority Vote: [11, 4, 0, 6]\n",
      "Image: 20k/966.jpg, Majority Vote: [5, 4, 0, 1]\n",
      "Image: 20k/97.jpg, Majority Vote: [2]\n",
      "Image: 20k/972.jpg, Majority Vote: [5]\n",
      "Image: 20k/978.jpg, Majority Vote: [5, 7, 0, 10]\n",
      "Image: 20k/984.jpg, Majority Vote: [2, 5, 0, 7]\n",
      "Image: 20k/996.jpg, Majority Vote: [0]\n",
      "Image: 20kf/1001.jpg, Majority Vote: [8, 4, 0, 11]\n",
      "Image: 20kf/1006.jpg, Majority Vote: [6, 0]\n",
      "Image: 20kf/1012.jpg, Majority Vote: [9, 7, 0, 11]\n",
      "Image: 20kf/1018.jpg, Majority Vote: [7, 4, 0, 1]\n",
      "Image: 20kf/102.jpg, Majority Vote: [9, 5, 0, 7]\n",
      "Image: 20kf/1024.jpg, Majority Vote: [5]\n",
      "Image: 20kf/1030.jpg, Majority Vote: [6, 4, 0, 9]\n",
      "Image: 20kf/1036.jpg, Majority Vote: [4]\n",
      "Image: 20kf/1041.jpg, Majority Vote: [6, 5, 0, 7]\n",
      "Image: 20kf/1047.jpg, Majority Vote: [7, 9, 0, 4]\n",
      "Image: 20kf/1053.jpg, Majority Vote: [4]\n",
      "Image: 20kf/1059.jpg, Majority Vote: [2, 4, 0, 5]\n",
      "Image: 20kf/1065.jpg, Majority Vote: [4, 9, 0, 2]\n",
      "Image: 20kf/1071.jpg, Majority Vote: [0]\n",
      "Image: 20kf/1076.jpg, Majority Vote: [8, 9, 0, 5]\n",
      "Image: 20kf/108.jpg, Majority Vote: [0]\n",
      "Image: 20kf/1082.jpg, Majority Vote: [4, 0]\n",
      "Image: 20kf/1088.jpg, Majority Vote: [11, 9, 0, 5]\n",
      "Image: 20kf/1094.jpg, Majority Vote: [0]\n",
      "Image: 20kf/1100.jpg, Majority Vote: [3, 4, 0, 1]\n",
      "Image: 20kf/1106.jpg, Majority Vote: [5, 0]\n",
      "Image: 20kf/1111.jpg, Majority Vote: [2, 7, 0, 11]\n",
      "Image: 20kf/1117.jpg, Majority Vote: [8]\n",
      "Image: 20kf/1123.jpg, Majority Vote: [11, 5, 0, 8]\n",
      "Image: 20kf/1129.jpg, Majority Vote: [8, 7, 0, 6]\n",
      "Image: 20kf/1135.jpg, Majority Vote: [7, 4, 0, 11]\n",
      "Image: 20kf/114.jpg, Majority Vote: [0]\n",
      "Image: 20kf/1141.jpg, Majority Vote: [2, 4, 0, 9]\n",
      "Image: 20kf/1146.jpg, Majority Vote: [4]\n",
      "Image: 20kf/1152.jpg, Majority Vote: [5, 4, 0, 9]\n",
      "Image: 20kf/1158.jpg, Majority Vote: [5, 7, 0, 1]\n",
      "Image: 20kf/1164.jpg, Majority Vote: [5]\n",
      "Image: 20kf/1170.jpg, Majority Vote: [7, 4, 0, 11]\n",
      "Image: 20kf/1176.jpg, Majority Vote: [0]\n",
      "Image: 20kf/1181.jpg, Majority Vote: [0]\n",
      "Image: 20kf/1187.jpg, Majority Vote: [3, 4, 0, 9]\n",
      "Image: 20kf/1193.jpg, Majority Vote: [6, 7, 0, 3]\n",
      "Image: 20kf/1199.jpg, Majority Vote: [0]\n",
      "Image: 20kf/120.jpg, Majority Vote: [8, 4, 0, 11]\n",
      "Image: 20kf/1205.jpg, Majority Vote: [2, 9, 0, 8]\n",
      "Image: 20kf/1211.jpg, Majority Vote: [5]\n",
      "Image: 20kf/1216.jpg, Majority Vote: [0]\n",
      "Image: 20kf/1222.jpg, Majority Vote: [2, 5, 0, 3]\n",
      "Image: 20kf/1228.jpg, Majority Vote: [0]\n",
      "Image: 20kf/1234.jpg, Majority Vote: [2, 7, 0, 8]\n",
      "Image: 20kf/1240.jpg, Majority Vote: [0]\n",
      "Image: 20kf/1246.jpg, Majority Vote: [8]\n",
      "Image: 20kf/1251.jpg, Majority Vote: [4]\n",
      "Image: 20kf/1257.jpg, Majority Vote: [1, 4, 0, 11]\n",
      "Image: 20kf/126.jpg, Majority Vote: [0]\n",
      "Image: 20kf/1263.jpg, Majority Vote: [3, 9, 0, 5]\n",
      "Image: 20kf/1269.jpg, Majority Vote: [8, 4, 0, 6]\n",
      "Image: 20kf/1275.jpg, Majority Vote: [0]\n",
      "Image: 20kf/1281.jpg, Majority Vote: [3, 5, 0, 4]\n",
      "Image: 20kf/1286.jpg, Majority Vote: [11, 5, 0, 7]\n",
      "Image: 20kf/1292.jpg, Majority Vote: [3, 5, 0, 7]\n",
      "Image: 20kf/1298.jpg, Majority Vote: [6, 4, 0, 3]\n",
      "Image: 20kf/1304.jpg, Majority Vote: [2, 4, 0, 5]\n",
      "Image: 20kf/131.jpg, Majority Vote: [4]\n",
      "Image: 20kf/1310.jpg, Majority Vote: [3, 4, 0, 11]\n",
      "Image: 20kf/1316.jpg, Majority Vote: [4]\n",
      "Image: 20kf/1321.jpg, Majority Vote: [7]\n",
      "Image: 20kf/1327.jpg, Majority Vote: [0]\n",
      "Image: 20kf/1333.jpg, Majority Vote: [4]\n",
      "Image: 20kf/1339.jpg, Majority Vote: [11, 4, 0, 1]\n",
      "Image: 20kf/1345.jpg, Majority Vote: [1, 5, 0, 2]\n",
      "Image: 20kf/1351.jpg, Majority Vote: [11, 4, 0, 7]\n",
      "Image: 20kf/1356.jpg, Majority Vote: [3, 4, 0, 7]\n",
      "Image: 20kf/1362.jpg, Majority Vote: [4]\n",
      "Image: 20kf/1368.jpg, Majority Vote: [4, 9, 0, 7]\n",
      "Image: 20kf/137.jpg, Majority Vote: [5]\n",
      "Image: 20kf/1374.jpg, Majority Vote: [3, 7, 0, 11]\n",
      "Image: 20kf/1380.jpg, Majority Vote: [7, 4, 0, 6]\n",
      "Image: 20kf/1386.jpg, Majority Vote: [5, 9, 0, 4]\n",
      "Image: 20kf/1391.jpg, Majority Vote: [7, 4, 0, 1]\n",
      "Image: 20kf/1397.jpg, Majority Vote: [6, 4, 0, 8]\n",
      "Image: 20kf/1403.jpg, Majority Vote: [10, 4, 0, 7]\n",
      "Image: 20kf/1409.jpg, Majority Vote: [9]\n",
      "Image: 20kf/1415.jpg, Majority Vote: [8, 5, 0, 7]\n",
      "Image: 20kf/1421.jpg, Majority Vote: [3]\n",
      "Image: 20kf/1426.jpg, Majority Vote: [5, 4, 0, 10]\n",
      "Image: 20kf/143.jpg, Majority Vote: [0]\n",
      "Image: 20kf/1432.jpg, Majority Vote: [11, 7, 0, 4]\n",
      "Image: 20kf/1438.jpg, Majority Vote: [0]\n",
      "Image: 20kf/1444.jpg, Majority Vote: [4, 0]\n",
      "Image: 20kf/1450.jpg, Majority Vote: [1, 7, 0, 10]\n",
      "Image: 20kf/1456.jpg, Majority Vote: [1, 4, 0, 10]\n",
      "Image: 20kf/1461.jpg, Majority Vote: [3]\n",
      "Image: 20kf/1467.jpg, Majority Vote: [11, 4, 0, 8]\n",
      "Image: 20kf/1473.jpg, Majority Vote: [5]\n",
      "Image: 20kf/1479.jpg, Majority Vote: [8, 4, 0, 9]\n",
      "Image: 20kf/1485.jpg, Majority Vote: [2]\n",
      "Image: 20kf/149.jpg, Majority Vote: [6, 4, 0, 3]\n",
      "Image: 20kf/1491.jpg, Majority Vote: [4]\n",
      "Image: 20kf/1496.jpg, Majority Vote: [4, 7, 0, 2]\n",
      "Image: 20kf/15.jpg, Majority Vote: [2, 4, 0, 6]\n",
      "Image: 20kf/1502.jpg, Majority Vote: [3, 7, 0, 1]\n",
      "Image: 20kf/1508.jpg, Majority Vote: [4]\n",
      "Image: 20kf/1514.jpg, Majority Vote: [6]\n",
      "Image: 20kf/1520.jpg, Majority Vote: [10, 4, 0, 1]\n",
      "Image: 20kf/1526.jpg, Majority Vote: [9]\n",
      "Image: 20kf/1531.jpg, Majority Vote: [8, 4, 0, 9]\n",
      "Image: 20kf/1537.jpg, Majority Vote: [3, 4, 0, 6]\n",
      "Image: 20kf/1543.jpg, Majority Vote: [4]\n",
      "Image: 20kf/1549.jpg, Majority Vote: [2, 4, 0, 3]\n",
      "Image: 20kf/155.jpg, Majority Vote: [8, 5, 0, 9]\n",
      "Image: 20kf/1555.jpg, Majority Vote: [5, 4, 0, 2]\n",
      "Image: 20kf/1561.jpg, Majority Vote: [7, 5, 0, 1]\n",
      "Image: 20kf/1566.jpg, Majority Vote: [2, 4, 0, 10]\n",
      "Image: 20kf/1572.jpg, Majority Vote: [5, 4, 0, 2]\n",
      "Image: 20kf/1578.jpg, Majority Vote: [9, 7, 0, 10]\n",
      "Image: 20kf/1584.jpg, Majority Vote: [4, 7, 0, 5]\n",
      "Image: 20kf/1590.jpg, Majority Vote: [8, 4, 0, 7]\n",
      "Image: 20kf/1596.jpg, Majority Vote: [11, 7, 0, 4]\n",
      "Image: 20kf/1601.jpg, Majority Vote: [3]\n",
      "Image: 20kf/1607.jpg, Majority Vote: [2, 4, 0, 9]\n",
      "Image: 20kf/161.jpg, Majority Vote: [5]\n",
      "Image: 20kf/1613.jpg, Majority Vote: [4, 7, 0, 2]\n",
      "Image: 20kf/1619.jpg, Majority Vote: [0]\n",
      "Image: 20kf/1625.jpg, Majority Vote: [9, 5, 0, 6]\n",
      "Image: 20kf/1631.jpg, Majority Vote: [0]\n",
      "Image: 20kf/1636.jpg, Majority Vote: [6, 7, 0, 10]\n",
      "Image: 20kf/1642.jpg, Majority Vote: [5, 4, 0, 2]\n",
      "Image: 20kf/1648.jpg, Majority Vote: [6, 4, 0, 9]\n",
      "Image: 20kf/1654.jpg, Majority Vote: [1, 4, 0, 2]\n",
      "Image: 20kf/166.jpg, Majority Vote: [0]\n",
      "Image: 20kf/1660.jpg, Majority Vote: [7]\n",
      "Image: 20kf/1666.jpg, Majority Vote: [5]\n",
      "Image: 20kf/1671.jpg, Majority Vote: [2]\n",
      "Image: 20kf/1677.jpg, Majority Vote: [3, 5, 0, 2]\n",
      "Image: 20kf/1683.jpg, Majority Vote: [6, 4, 0, 1]\n",
      "Image: 20kf/1689.jpg, Majority Vote: [9, 4, 0, 1]\n",
      "Image: 20kf/1695.jpg, Majority Vote: [4]\n",
      "Image: 20kf/1701.jpg, Majority Vote: [4, 5, 0, 8]\n",
      "Image: 20kf/1706.jpg, Majority Vote: [6, 7, 0, 2]\n",
      "Image: 20kf/1712.jpg, Majority Vote: [2, 5, 0, 3]\n",
      "Image: 20kf/1718.jpg, Majority Vote: [0]\n",
      "Image: 20kf/172.jpg, Majority Vote: [5, 4, 0, 10]\n",
      "Image: 20kf/1724.jpg, Majority Vote: [2, 9, 0, 8]\n",
      "Image: 20kf/1730.jpg, Majority Vote: [2, 9, 0, 3]\n",
      "Image: 20kf/1736.jpg, Majority Vote: [7, 5, 0, 2]\n",
      "Image: 20kf/1741.jpg, Majority Vote: [3, 9, 0, 1]\n",
      "Image: 20kf/1747.jpg, Majority Vote: [8, 4, 0, 2]\n",
      "Image: 20kf/1753.jpg, Majority Vote: [5]\n",
      "Image: 20kf/1759.jpg, Majority Vote: [2, 4, 0, 5]\n",
      "Image: 20kf/1765.jpg, Majority Vote: [6, 5, 0, 9]\n",
      "Image: 20kf/1771.jpg, Majority Vote: [1, 4, 0, 3]\n",
      "Image: 20kf/1776.jpg, Majority Vote: [0]\n",
      "Image: 20kf/178.jpg, Majority Vote: [2, 7, 0, 5]\n",
      "Image: 20kf/1782.jpg, Majority Vote: [3, 5, 0, 2]\n",
      "Image: 20kf/1788.jpg, Majority Vote: [5, 9, 0, 2]\n",
      "Image: 20kf/1794.jpg, Majority Vote: [2, 4, 0, 6]\n",
      "Image: 20kf/1800.jpg, Majority Vote: [1, 9, 0, 2]\n",
      "Image: 20kf/1806.jpg, Majority Vote: [7, 5, 0, 4]\n",
      "Image: 20kf/1811.jpg, Majority Vote: [9]\n",
      "Image: 20kf/1817.jpg, Majority Vote: [6, 4, 0, 2]\n",
      "Image: 20kf/1823.jpg, Majority Vote: [5, 7, 0, 9]\n",
      "Image: 20kf/1828.jpg, Majority Vote: [2, 4, 0, 1]\n",
      "Image: 20kf/1833.jpg, Majority Vote: [0]\n",
      "Image: 20kf/1838.jpg, Majority Vote: [11, 4, 0, 6]\n",
      "Image: 20kf/184.jpg, Majority Vote: [9, 4, 0, 3]\n",
      "Image: 20kf/1843.jpg, Majority Vote: [7, 9, 0, 10]\n",
      "Image: 20kf/1848.jpg, Majority Vote: [0]\n",
      "Image: 20kf/1853.jpg, Majority Vote: [1, 5, 0, 8]\n",
      "Image: 20kf/1858.jpg, Majority Vote: [5, 4, 0, 11]\n",
      "Image: 20kf/190.jpg, Majority Vote: [1, 7, 0, 2]\n",
      "Image: 20kf/196.jpg, Majority Vote: [2, 7, 0, 5]\n",
      "Image: 20kf/201.jpg, Majority Vote: [0]\n",
      "Image: 20kf/207.jpg, Majority Vote: [0]\n",
      "Image: 20kf/21.jpg, Majority Vote: [9, 4, 0, 11]\n",
      "Image: 20kf/213.jpg, Majority Vote: [2, 5, 0, 10]\n",
      "Image: 20kf/219.jpg, Majority Vote: [9, 4, 0, 10]\n",
      "Image: 20kf/225.jpg, Majority Vote: [4]\n",
      "Image: 20kf/231.jpg, Majority Vote: [3, 4, 0, 10]\n",
      "Image: 20kf/236.jpg, Majority Vote: [6, 4, 0, 10]\n",
      "Image: 20kf/242.jpg, Majority Vote: [8, 7, 0, 6]\n",
      "Image: 20kf/248.jpg, Majority Vote: [9, 5, 0, 8]\n",
      "Image: 20kf/254.jpg, Majority Vote: [11, 4, 0, 9]\n",
      "Image: 20kf/26.jpg, Majority Vote: [3, 5, 0, 9]\n",
      "Image: 20kf/260.jpg, Majority Vote: [9, 4, 0, 7]\n",
      "Image: 20kf/266.jpg, Majority Vote: [11, 5, 0, 7]\n",
      "Image: 20kf/271.jpg, Majority Vote: [3, 5, 0, 2]\n",
      "Image: 20kf/277.jpg, Majority Vote: [3, 9, 0, 11]\n",
      "Image: 20kf/283.jpg, Majority Vote: [9, 4, 0, 5]\n",
      "Image: 20kf/289.jpg, Majority Vote: [5, 4, 0, 6]\n",
      "Image: 20kf/295.jpg, Majority Vote: [11, 5, 0, 6]\n",
      "Image: 20kf/3.jpg, Majority Vote: [3, 7, 0, 4]\n",
      "Image: 20kf/301.jpg, Majority Vote: [5, 4, 0, 3]\n",
      "Image: 20kf/306.jpg, Majority Vote: [3]\n",
      "Image: 20kf/312.jpg, Majority Vote: [7]\n",
      "Image: 20kf/318.jpg, Majority Vote: [8]\n",
      "Image: 20kf/32.jpg, Majority Vote: [8, 4, 0, 10]\n",
      "Image: 20kf/324.jpg, Majority Vote: [3, 5, 0, 6]\n",
      "Image: 20kf/330.jpg, Majority Vote: [11]\n",
      "Image: 20kf/336.jpg, Majority Vote: [5, 9, 0, 3]\n",
      "Image: 20kf/341.jpg, Majority Vote: [9]\n",
      "Image: 20kf/347.jpg, Majority Vote: [2, 4, 0, 11]\n",
      "Image: 20kf/353.jpg, Majority Vote: [2, 4, 0, 5]\n",
      "Image: 20kf/359.jpg, Majority Vote: [1, 7, 0, 2]\n",
      "Image: 20kf/365.jpg, Majority Vote: [7, 4, 0, 8]\n",
      "Image: 20kf/371.jpg, Majority Vote: [0]\n",
      "Image: 20kf/376.jpg, Majority Vote: [8, 5, 0, 2]\n",
      "Image: 20kf/38.jpg, Majority Vote: [0]\n",
      "Image: 20kf/382.jpg, Majority Vote: [0]\n",
      "Image: 20kf/388.jpg, Majority Vote: [4, 7, 0, 6]\n",
      "Image: 20kf/394.jpg, Majority Vote: [5, 4, 0, 1]\n",
      "Image: 20kf/400.jpg, Majority Vote: [0]\n",
      "Image: 20kf/406.jpg, Majority Vote: [9, 4, 0, 7]\n",
      "Image: 20kf/411.jpg, Majority Vote: [2, 9, 0, 1]\n",
      "Image: 20kf/417.jpg, Majority Vote: [4]\n",
      "Image: 20kf/423.jpg, Majority Vote: [8, 5, 0, 3]\n",
      "Image: 20kf/429.jpg, Majority Vote: [1, 4, 0, 3]\n",
      "Image: 20kf/435.jpg, Majority Vote: [11, 4, 0, 9]\n",
      "Image: 20kf/44.jpg, Majority Vote: [7]\n",
      "Image: 20kf/441.jpg, Majority Vote: [3, 5, 0, 10]\n",
      "Image: 20kf/446.jpg, Majority Vote: [10, 7, 0, 5]\n",
      "Image: 20kf/452.jpg, Majority Vote: [5]\n",
      "Image: 20kf/458.jpg, Majority Vote: [5, 4, 0, 9]\n",
      "Image: 20kf/464.jpg, Majority Vote: [9, 4, 0, 2]\n",
      "Image: 20kf/470.jpg, Majority Vote: [11, 9, 0, 8]\n",
      "Image: 20kf/476.jpg, Majority Vote: [0]\n",
      "Image: 20kf/481.jpg, Majority Vote: [4, 5, 0, 10]\n",
      "Image: 20kf/487.jpg, Majority Vote: [1]\n",
      "Image: 20kf/493.jpg, Majority Vote: [7, 4, 0, 5]\n",
      "Image: 20kf/499.jpg, Majority Vote: [0]\n",
      "Image: 20kf/50.jpg, Majority Vote: [2, 5, 0, 10]\n",
      "Image: 20kf/505.jpg, Majority Vote: [0]\n",
      "Image: 20kf/511.jpg, Majority Vote: [1, 4, 0, 8]\n",
      "Image: 20kf/516.jpg, Majority Vote: [0]\n",
      "Image: 20kf/522.jpg, Majority Vote: [1, 4, 0, 6]\n",
      "Image: 20kf/528.jpg, Majority Vote: [7, 4, 0, 6]\n",
      "Image: 20kf/534.jpg, Majority Vote: [0]\n",
      "Image: 20kf/540.jpg, Majority Vote: [4]\n",
      "Image: 20kf/546.jpg, Majority Vote: [5, 4, 0, 11]\n",
      "Image: 20kf/551.jpg, Majority Vote: [4]\n",
      "Image: 20kf/557.jpg, Majority Vote: [6]\n",
      "Image: 20kf/56.jpg, Majority Vote: [7, 4, 0, 10]\n",
      "Image: 20kf/563.jpg, Majority Vote: [2]\n",
      "Image: 20kf/569.jpg, Majority Vote: [2, 4, 0, 6]\n",
      "Image: 20kf/575.jpg, Majority Vote: [2, 5, 0, 9]\n",
      "Image: 20kf/581.jpg, Majority Vote: [4]\n",
      "Image: 20kf/586.jpg, Majority Vote: [4]\n",
      "Image: 20kf/592.jpg, Majority Vote: [9, 4, 0, 6]\n",
      "Image: 20kf/598.jpg, Majority Vote: [0]\n",
      "Image: 20kf/604.jpg, Majority Vote: [11, 7, 0, 1]\n",
      "Image: 20kf/61.jpg, Majority Vote: [11, 4, 0, 7]\n",
      "Image: 20kf/610.jpg, Majority Vote: [11, 4, 0, 9]\n",
      "Image: 20kf/616.jpg, Majority Vote: [5, 7, 0, 9]\n",
      "Image: 20kf/621.jpg, Majority Vote: [8, 4, 0, 1]\n",
      "Image: 20kf/627.jpg, Majority Vote: [2, 5, 0, 10]\n",
      "Image: 20kf/633.jpg, Majority Vote: [2, 5, 0, 4]\n",
      "Image: 20kf/639.jpg, Majority Vote: [4]\n",
      "Image: 20kf/645.jpg, Majority Vote: [1, 7, 0, 2]\n",
      "Image: 20kf/651.jpg, Majority Vote: [7]\n",
      "Image: 20kf/656.jpg, Majority Vote: [0]\n",
      "Image: 20kf/662.jpg, Majority Vote: [2, 4, 0, 11]\n",
      "Image: 20kf/668.jpg, Majority Vote: [6, 4, 0, 9]\n",
      "Image: 20kf/67.jpg, Majority Vote: [7, 9, 0, 10]\n",
      "Image: 20kf/674.jpg, Majority Vote: [2, 5, 0, 10]\n",
      "Image: 20kf/680.jpg, Majority Vote: [11, 9, 0, 4]\n",
      "Image: 20kf/686.jpg, Majority Vote: [9, 4, 0, 10]\n",
      "Image: 20kf/691.jpg, Majority Vote: [4]\n",
      "Image: 20kf/697.jpg, Majority Vote: [3, 4, 0, 10]\n",
      "Image: 20kf/703.jpg, Majority Vote: [0]\n",
      "Image: 20kf/709.jpg, Majority Vote: [7]\n",
      "Image: 20kf/715.jpg, Majority Vote: [0]\n",
      "Image: 20kf/721.jpg, Majority Vote: [2, 4, 0, 5]\n",
      "Image: 20kf/726.jpg, Majority Vote: [0]\n",
      "Image: 20kf/73.jpg, Majority Vote: [2, 4, 0, 1]\n",
      "Image: 20kf/732.jpg, Majority Vote: [0]\n",
      "Image: 20kf/738.jpg, Majority Vote: [0]\n",
      "Image: 20kf/744.jpg, Majority Vote: [11, 5, 0, 2]\n",
      "Image: 20kf/750.jpg, Majority Vote: [0]\n",
      "Image: 20kf/756.jpg, Majority Vote: [3, 4, 0, 8]\n",
      "Image: 20kf/761.jpg, Majority Vote: [4, 5, 0, 7]\n",
      "Image: 20kf/767.jpg, Majority Vote: [9]\n",
      "Image: 20kf/773.jpg, Majority Vote: [2, 5, 0, 4]\n",
      "Image: 20kf/779.jpg, Majority Vote: [5]\n",
      "Image: 20kf/785.jpg, Majority Vote: [6, 4, 0, 9]\n",
      "Image: 20kf/79.jpg, Majority Vote: [0]\n",
      "Image: 20kf/791.jpg, Majority Vote: [5, 7, 0, 6]\n",
      "Image: 20kf/796.jpg, Majority Vote: [1, 9, 0, 6]\n",
      "Image: 20kf/802.jpg, Majority Vote: [11, 9, 0, 6]\n",
      "Image: 20kf/808.jpg, Majority Vote: [6, 5, 0, 1]\n",
      "Image: 20kf/814.jpg, Majority Vote: [3, 9, 0, 8]\n",
      "Image: 20kf/820.jpg, Majority Vote: [6, 4, 0, 8]\n",
      "Image: 20kf/826.jpg, Majority Vote: [5, 4, 0, 1]\n",
      "Image: 20kf/831.jpg, Majority Vote: [8, 5, 0, 2]\n",
      "Image: 20kf/837.jpg, Majority Vote: [7]\n",
      "Image: 20kf/843.jpg, Majority Vote: [7, 4, 0, 11]\n",
      "Image: 20kf/849.jpg, Majority Vote: [6, 5, 0, 11]\n",
      "Image: 20kf/85.jpg, Majority Vote: [7, 5, 0, 4]\n",
      "Image: 20kf/855.jpg, Majority Vote: [5, 9, 0, 10]\n",
      "Image: 20kf/861.jpg, Majority Vote: [7, 4, 0, 11]\n",
      "Image: 20kf/866.jpg, Majority Vote: [2, 4, 0, 3]\n",
      "Image: 20kf/872.jpg, Majority Vote: [3, 5, 0, 10]\n",
      "Image: 20kf/878.jpg, Majority Vote: [6, 7, 0, 4]\n",
      "Image: 20kf/884.jpg, Majority Vote: [4]\n",
      "Image: 20kf/890.jpg, Majority Vote: [4]\n",
      "Image: 20kf/896.jpg, Majority Vote: [6]\n",
      "Image: 20kf/9.jpg, Majority Vote: [11, 4, 0, 6]\n",
      "Image: 20kf/901.jpg, Majority Vote: [3, 4, 0, 8]\n",
      "Image: 20kf/907.jpg, Majority Vote: [0]\n",
      "Image: 20kf/91.jpg, Majority Vote: [6, 4, 0, 11]\n",
      "Image: 20kf/913.jpg, Majority Vote: [8, 4, 0, 7]\n",
      "Image: 20kf/919.jpg, Majority Vote: [5, 4, 0, 7]\n",
      "Image: 20kf/925.jpg, Majority Vote: [6, 7, 0, 5]\n",
      "Image: 20kf/931.jpg, Majority Vote: [0]\n",
      "Image: 20kf/936.jpg, Majority Vote: [5]\n",
      "Image: 20kf/942.jpg, Majority Vote: [11, 4, 0, 1]\n",
      "Image: 20kf/948.jpg, Majority Vote: [9, 4, 0, 11]\n",
      "Image: 20kf/954.jpg, Majority Vote: [7, 5, 0, 11]\n",
      "Image: 20kf/96.jpg, Majority Vote: [9, 7, 0, 3]\n",
      "Image: 20kf/960.jpg, Majority Vote: [0]\n",
      "Image: 20kf/966.jpg, Majority Vote: [7]\n",
      "Image: 20kf/971.jpg, Majority Vote: [2, 9, 0, 4]\n",
      "Image: 20kf/977.jpg, Majority Vote: [2, 4, 0, 3]\n",
      "Image: 20kf/983.jpg, Majority Vote: [3, 7, 0, 2]\n",
      "Image: 20kf/989.jpg, Majority Vote: [3, 5, 0, 10]\n",
      "Image: 20kf/995.jpg, Majority Vote: [2, 4, 0, 10]\n",
      "Image: 2k/1001.jpg, Majority Vote: [6]\n",
      "Image: 2k/1006.jpg, Majority Vote: [5]\n",
      "Image: 2k/1012.jpg, Majority Vote: [2, 9, 0, 6]\n",
      "Image: 2k/1018.jpg, Majority Vote: [9, 4, 0, 8]\n",
      "Image: 2k/102.jpg, Majority Vote: [1, 5, 0, 10]\n",
      "Image: 2k/1024.jpg, Majority Vote: [0]\n",
      "Image: 2k/1030.jpg, Majority Vote: [11, 9, 0, 5]\n",
      "Image: 2k/1036.jpg, Majority Vote: [6, 9, 0, 10]\n",
      "Image: 2k/1041.jpg, Majority Vote: [5, 9, 0, 10]\n",
      "Image: 2k/1047.jpg, Majority Vote: [8, 7, 0, 3]\n",
      "Image: 2k/1053.jpg, Majority Vote: [0]\n",
      "Image: 2k/1059.jpg, Majority Vote: [11, 4, 0, 7]\n",
      "Image: 2k/1065.jpg, Majority Vote: [0]\n",
      "Image: 2k/1071.jpg, Majority Vote: [11, 7, 0, 10]\n",
      "Image: 2k/1076.jpg, Majority Vote: [9, 4, 0, 8]\n",
      "Image: 2k/108.jpg, Majority Vote: [9, 4, 0, 1]\n",
      "Image: 2k/1082.jpg, Majority Vote: [2, 7, 0, 1]\n",
      "Image: 2k/1088.jpg, Majority Vote: [9]\n",
      "Image: 2k/1094.jpg, Majority Vote: [5, 4, 0, 1]\n",
      "Image: 2k/1100.jpg, Majority Vote: [0]\n",
      "Image: 2k/1106.jpg, Majority Vote: [2, 7, 0, 1]\n",
      "Image: 2k/1111.jpg, Majority Vote: [7]\n",
      "Image: 2k/1117.jpg, Majority Vote: [7]\n",
      "Image: 2k/1123.jpg, Majority Vote: [9, 4, 0, 2]\n",
      "Image: 2k/1129.jpg, Majority Vote: [7]\n",
      "Image: 2k/1135.jpg, Majority Vote: [8, 5, 0, 3]\n",
      "Image: 2k/114.jpg, Majority Vote: [0]\n",
      "Image: 2k/1141.jpg, Majority Vote: [5, 4, 0, 7]\n",
      "Image: 2k/1146.jpg, Majority Vote: [4]\n",
      "Image: 2k/1152.jpg, Majority Vote: [1, 7, 0, 10]\n",
      "Image: 2k/1158.jpg, Majority Vote: [5]\n",
      "Image: 2k/1164.jpg, Majority Vote: [9]\n",
      "Image: 2k/1181.jpg, Majority Vote: [8, 5, 0, 4]\n",
      "Image: 2k/1187.jpg, Majority Vote: [3, 9, 0, 6]\n",
      "Image: 2k/1193.jpg, Majority Vote: [11, 5, 0, 8]\n",
      "Image: 2k/1199.jpg, Majority Vote: [0]\n",
      "Image: 2k/120.jpg, Majority Vote: [5, 4, 0, 6]\n",
      "Image: 2k/1205.jpg, Majority Vote: [0]\n",
      "Image: 2k/1211.jpg, Majority Vote: [2]\n",
      "Image: 2k/1216.jpg, Majority Vote: [5]\n",
      "Image: 2k/1222.jpg, Majority Vote: [5, 4, 0, 9]\n",
      "Image: 2k/1228.jpg, Majority Vote: [4]\n",
      "Image: 2k/1240.jpg, Majority Vote: [2, 9, 0, 8]\n",
      "Image: 2k/1246.jpg, Majority Vote: [1]\n",
      "Image: 2k/1257.jpg, Majority Vote: [8, 7, 0, 10]\n",
      "Image: 2k/126.jpg, Majority Vote: [4, 5, 0, 6]\n",
      "Image: 2k/1263.jpg, Majority Vote: [5]\n",
      "Image: 2k/1286.jpg, Majority Vote: [6, 4, 0, 11]\n",
      "Image: 2k/1292.jpg, Majority Vote: [10, 4, 0, 6]\n",
      "Image: 2k/1298.jpg, Majority Vote: [3, 4, 0, 2]\n",
      "Image: 2k/131.jpg, Majority Vote: [2, 4, 0, 8]\n",
      "Image: 2k/1310.jpg, Majority Vote: [9, 5, 0, 4]\n",
      "Image: 2k/1316.jpg, Majority Vote: [1, 4, 0, 7]\n",
      "Image: 2k/1321.jpg, Majority Vote: [11, 4, 0, 9]\n",
      "Image: 2k/1327.jpg, Majority Vote: [3, 4, 0, 10]\n",
      "Image: 2k/1333.jpg, Majority Vote: [6, 7, 0, 3]\n",
      "Image: 2k/1339.jpg, Majority Vote: [2, 4, 0, 3]\n",
      "Image: 2k/1345.jpg, Majority Vote: [0]\n",
      "Image: 2k/1351.jpg, Majority Vote: [0]\n",
      "Image: 2k/1356.jpg, Majority Vote: [7, 4, 0, 6]\n",
      "Image: 2k/1362.jpg, Majority Vote: [2, 4, 0, 10]\n",
      "Image: 2k/137.jpg, Majority Vote: [8]\n",
      "Image: 2k/1374.jpg, Majority Vote: [11, 4, 0, 2]\n",
      "Image: 2k/1380.jpg, Majority Vote: [4, 0]\n",
      "Image: 2k/1386.jpg, Majority Vote: [2, 5, 0, 7]\n",
      "Image: 2k/1391.jpg, Majority Vote: [6, 7, 0, 5]\n",
      "Image: 2k/1397.jpg, Majority Vote: [10, 7, 0, 9]\n",
      "Image: 2k/1403.jpg, Majority Vote: [2, 9, 0, 4]\n",
      "Image: 2k/1409.jpg, Majority Vote: [0]\n",
      "Image: 2k/1415.jpg, Majority Vote: [0]\n",
      "Image: 2k/1421.jpg, Majority Vote: [2, 9, 0, 5]\n",
      "Image: 2k/1426.jpg, Majority Vote: [9, 4, 0, 2]\n",
      "Image: 2k/143.jpg, Majority Vote: [0]\n",
      "Image: 2k/1432.jpg, Majority Vote: [4]\n",
      "Image: 2k/1438.jpg, Majority Vote: [0]\n",
      "Image: 2k/1444.jpg, Majority Vote: [4]\n",
      "Image: 2k/1450.jpg, Majority Vote: [6]\n",
      "Image: 2k/1456.jpg, Majority Vote: [5]\n",
      "Image: 2k/1461.jpg, Majority Vote: [2, 5, 0, 1]\n",
      "Image: 2k/1467.jpg, Majority Vote: [4]\n",
      "Image: 2k/1473.jpg, Majority Vote: [11, 5, 0, 7]\n",
      "Image: 2k/1479.jpg, Majority Vote: [3, 9, 0, 1]\n",
      "Image: 2k/1485.jpg, Majority Vote: [6, 7, 0, 10]\n",
      "Image: 2k/149.jpg, Majority Vote: [0]\n",
      "Image: 2k/1491.jpg, Majority Vote: [6, 4, 0, 1]\n",
      "Image: 2k/1496.jpg, Majority Vote: [4]\n",
      "Image: 2k/15.jpg, Majority Vote: [3, 4, 0, 6]\n",
      "Image: 2k/1508.jpg, Majority Vote: [11, 4, 0, 10]\n",
      "Image: 2k/1514.jpg, Majority Vote: [7, 4, 0, 5]\n",
      "Image: 2k/1520.jpg, Majority Vote: [5, 9, 0, 10]\n",
      "Image: 2k/1526.jpg, Majority Vote: [9]\n",
      "Image: 2k/1531.jpg, Majority Vote: [0]\n",
      "Image: 2k/1537.jpg, Majority Vote: [2, 5, 0, 4]\n",
      "Image: 2k/1543.jpg, Majority Vote: [0]\n",
      "Image: 2k/1549.jpg, Majority Vote: [3, 7, 0, 5]\n",
      "Image: 2k/155.jpg, Majority Vote: [1, 7, 0, 9]\n",
      "Image: 2k/1555.jpg, Majority Vote: [6, 4, 0, 9]\n",
      "Image: 2k/1561.jpg, Majority Vote: [1, 7, 0, 10]\n",
      "Image: 2k/1566.jpg, Majority Vote: [5]\n",
      "Image: 2k/1572.jpg, Majority Vote: [4]\n",
      "Image: 2k/1578.jpg, Majority Vote: [3, 4, 0, 10]\n",
      "Image: 2k/1584.jpg, Majority Vote: [9, 7, 0, 6]\n",
      "Image: 2k/1590.jpg, Majority Vote: [3, 4, 0, 1]\n",
      "Image: 2k/1596.jpg, Majority Vote: [2, 9, 0, 5]\n",
      "Image: 2k/1601.jpg, Majority Vote: [0]\n",
      "Image: 2k/1607.jpg, Majority Vote: [8, 7, 0, 5]\n",
      "Image: 2k/1613.jpg, Majority Vote: [1, 5, 0, 10]\n",
      "Image: 2k/1619.jpg, Majority Vote: [8]\n",
      "Image: 2k/1631.jpg, Majority Vote: [0]\n",
      "Image: 2k/1642.jpg, Majority Vote: [0]\n",
      "Image: 2k/1648.jpg, Majority Vote: [4]\n",
      "Image: 2k/1654.jpg, Majority Vote: [11, 4, 0, 9]\n",
      "Image: 2k/166.jpg, Majority Vote: [2, 4, 0, 1]\n",
      "Image: 2k/1660.jpg, Majority Vote: [2, 4, 0, 7]\n",
      "Image: 2k/1666.jpg, Majority Vote: [10, 4, 0, 3]\n",
      "Image: 2k/1671.jpg, Majority Vote: [7]\n",
      "Image: 2k/1677.jpg, Majority Vote: [0]\n",
      "Image: 2k/1683.jpg, Majority Vote: [0]\n",
      "Image: 2k/1689.jpg, Majority Vote: [4]\n",
      "Image: 2k/1695.jpg, Majority Vote: [7, 9, 0, 6]\n",
      "Image: 2k/1701.jpg, Majority Vote: [9]\n",
      "Image: 2k/1712.jpg, Majority Vote: [0]\n",
      "Image: 2k/1718.jpg, Majority Vote: [4, 5, 0, 8]\n",
      "Image: 2k/172.jpg, Majority Vote: [11, 5, 0, 10]\n",
      "Image: 2k/1724.jpg, Majority Vote: [2]\n",
      "Image: 2k/1730.jpg, Majority Vote: [2, 4, 0, 11]\n",
      "Image: 2k/1736.jpg, Majority Vote: [4, 0]\n",
      "Image: 2k/1741.jpg, Majority Vote: [1, 7, 0, 5]\n",
      "Image: 2k/1747.jpg, Majority Vote: [7]\n",
      "Image: 2k/1759.jpg, Majority Vote: [7, 5, 0, 3]\n",
      "Image: 2k/1765.jpg, Majority Vote: [2, 4, 0, 9]\n",
      "Image: 2k/1771.jpg, Majority Vote: [5, 7, 0, 10]\n",
      "Image: 2k/1782.jpg, Majority Vote: [4]\n",
      "Image: 2k/1788.jpg, Majority Vote: [3, 4, 0, 1]\n",
      "Image: 2k/1817.jpg, Majority Vote: [0]\n",
      "Image: 2k/184.jpg, Majority Vote: [2]\n",
      "Image: 2k/1853.jpg, Majority Vote: [3, 7, 0, 1]\n",
      "Image: 2k/1858.jpg, Majority Vote: [9, 5, 0, 3]\n",
      "Image: 2k/196.jpg, Majority Vote: [8]\n",
      "Image: 2k/201.jpg, Majority Vote: [7]\n",
      "Image: 2k/207.jpg, Majority Vote: [9, 0]\n",
      "Image: 2k/21.jpg, Majority Vote: [5]\n",
      "Image: 2k/225.jpg, Majority Vote: [5]\n",
      "Image: 2k/236.jpg, Majority Vote: [0]\n",
      "Image: 2k/242.jpg, Majority Vote: [0]\n",
      "Image: 2k/248.jpg, Majority Vote: [0]\n",
      "Image: 2k/254.jpg, Majority Vote: [1]\n",
      "Image: 2k/26.jpg, Majority Vote: [2, 5, 0, 4]\n",
      "Image: 2k/260.jpg, Majority Vote: [2, 7, 0, 9]\n",
      "Image: 2k/271.jpg, Majority Vote: [1]\n",
      "Image: 2k/277.jpg, Majority Vote: [6, 4, 0, 3]\n",
      "Image: 2k/283.jpg, Majority Vote: [5, 4, 0, 8]\n",
      "Image: 2k/289.jpg, Majority Vote: [3, 5, 0, 1]\n",
      "Image: 2k/295.jpg, Majority Vote: [11, 4, 0, 10]\n",
      "Image: 2k/3.jpg, Majority Vote: [6, 7, 0, 8]\n",
      "Image: 2k/301.jpg, Majority Vote: [5]\n",
      "Image: 2k/306.jpg, Majority Vote: [1, 4, 0, 7]\n",
      "Image: 2k/312.jpg, Majority Vote: [8, 7, 0, 6]\n",
      "Image: 2k/318.jpg, Majority Vote: [8, 4, 0, 7]\n",
      "Image: 2k/32.jpg, Majority Vote: [1, 9, 0, 5]\n",
      "Image: 2k/324.jpg, Majority Vote: [5]\n",
      "Image: 2k/330.jpg, Majority Vote: [5]\n",
      "Image: 2k/336.jpg, Majority Vote: [7, 4, 0, 1]\n",
      "Image: 2k/341.jpg, Majority Vote: [2, 5, 0, 3]\n",
      "Image: 2k/347.jpg, Majority Vote: [6, 9, 0, 11]\n",
      "Image: 2k/353.jpg, Majority Vote: [9]\n",
      "Image: 2k/365.jpg, Majority Vote: [0]\n",
      "Image: 2k/371.jpg, Majority Vote: [7]\n",
      "Image: 2k/376.jpg, Majority Vote: [9, 4, 0, 2]\n",
      "Image: 2k/382.jpg, Majority Vote: [6, 5, 0, 11]\n",
      "Image: 2k/388.jpg, Majority Vote: [5, 9, 0, 11]\n",
      "Image: 2k/394.jpg, Majority Vote: [5, 4, 0, 3]\n",
      "Image: 2k/400.jpg, Majority Vote: [0]\n",
      "Image: 2k/406.jpg, Majority Vote: [2, 4, 0, 9]\n",
      "Image: 2k/411.jpg, Majority Vote: [4]\n",
      "Image: 2k/417.jpg, Majority Vote: [1, 7, 0, 11]\n",
      "Image: 2k/423.jpg, Majority Vote: [7, 4, 0, 9]\n",
      "Image: 2k/429.jpg, Majority Vote: [4, 5, 0, 1]\n",
      "Image: 2k/435.jpg, Majority Vote: [5, 4, 0, 2]\n",
      "Image: 2k/44.jpg, Majority Vote: [5, 4, 0, 6]\n",
      "Image: 2k/441.jpg, Majority Vote: [2, 7, 0, 6]\n",
      "Image: 2k/446.jpg, Majority Vote: [10, 5, 0, 3]\n",
      "Image: 2k/452.jpg, Majority Vote: [11, 4, 0, 7]\n",
      "Image: 2k/458.jpg, Majority Vote: [4]\n",
      "Image: 2k/464.jpg, Majority Vote: [3, 4, 0, 11]\n",
      "Image: 2k/476.jpg, Majority Vote: [2]\n",
      "Image: 2k/481.jpg, Majority Vote: [3, 9, 0, 1]\n",
      "Image: 2k/487.jpg, Majority Vote: [1, 7, 0, 10]\n",
      "Image: 2k/493.jpg, Majority Vote: [11, 4, 0, 1]\n",
      "Image: 2k/499.jpg, Majority Vote: [3, 4, 0, 9]\n",
      "Image: 2k/50.jpg, Majority Vote: [5, 4, 0, 11]\n",
      "Image: 2k/505.jpg, Majority Vote: [7, 5, 0, 11]\n",
      "Image: 2k/511.jpg, Majority Vote: [0]\n",
      "Image: 2k/516.jpg, Majority Vote: [7]\n",
      "Image: 2k/522.jpg, Majority Vote: [5, 7, 0, 1]\n",
      "Image: 2k/528.jpg, Majority Vote: [8, 9, 0, 3]\n",
      "Image: 2k/534.jpg, Majority Vote: [7]\n",
      "Image: 2k/540.jpg, Majority Vote: [9, 7, 0, 3]\n",
      "Image: 2k/546.jpg, Majority Vote: [0]\n",
      "Image: 2k/557.jpg, Majority Vote: [6]\n",
      "Image: 2k/569.jpg, Majority Vote: [8, 4, 0, 5]\n",
      "Image: 2k/575.jpg, Majority Vote: [2, 4, 0, 7]\n",
      "Image: 2k/581.jpg, Majority Vote: [0]\n",
      "Image: 2k/586.jpg, Majority Vote: [1, 4, 0, 8]\n",
      "Image: 2k/592.jpg, Majority Vote: [9]\n",
      "Image: 2k/598.jpg, Majority Vote: [5, 7, 0, 9]\n",
      "Image: 2k/604.jpg, Majority Vote: [8, 4, 0, 3]\n",
      "Image: 2k/610.jpg, Majority Vote: [9, 4, 0, 5]\n",
      "Image: 2k/616.jpg, Majority Vote: [0]\n",
      "Image: 2k/621.jpg, Majority Vote: [8, 4, 0, 10]\n",
      "Image: 2k/627.jpg, Majority Vote: [11, 4, 0, 8]\n",
      "Image: 2k/633.jpg, Majority Vote: [6, 4, 0, 2]\n",
      "Image: 2k/639.jpg, Majority Vote: [11, 4, 0, 1]\n",
      "Image: 2k/645.jpg, Majority Vote: [6, 5, 0, 1]\n",
      "Image: 2k/651.jpg, Majority Vote: [0]\n",
      "Image: 2k/656.jpg, Majority Vote: [7]\n",
      "Image: 2k/662.jpg, Majority Vote: [11, 4, 0, 5]\n",
      "Image: 2k/668.jpg, Majority Vote: [9, 5, 0, 3]\n",
      "Image: 2k/674.jpg, Majority Vote: [5]\n",
      "Image: 2k/680.jpg, Majority Vote: [6, 4, 0, 7]\n",
      "Image: 2k/686.jpg, Majority Vote: [0]\n",
      "Image: 2k/691.jpg, Majority Vote: [5, 7, 0, 9]\n",
      "Image: 2k/697.jpg, Majority Vote: [0]\n",
      "Image: 2k/703.jpg, Majority Vote: [3, 0]\n",
      "Image: 2k/709.jpg, Majority Vote: [5, 4, 0, 2]\n",
      "Image: 2k/715.jpg, Majority Vote: [9]\n",
      "Image: 2k/721.jpg, Majority Vote: [0]\n",
      "Image: 2k/726.jpg, Majority Vote: [5, 4, 0, 6]\n",
      "Image: 2k/73.jpg, Majority Vote: [8, 7, 0, 1]\n",
      "Image: 2k/732.jpg, Majority Vote: [2, 7, 0, 9]\n",
      "Image: 2k/738.jpg, Majority Vote: [2, 4, 0, 9]\n",
      "Image: 2k/744.jpg, Majority Vote: [3, 5, 0, 6]\n",
      "Image: 2k/750.jpg, Majority Vote: [1, 4, 0, 7]\n",
      "Image: 2k/756.jpg, Majority Vote: [11]\n",
      "Image: 2k/761.jpg, Majority Vote: [8, 5, 0, 7]\n",
      "Image: 2k/767.jpg, Majority Vote: [5, 9, 0, 8]\n",
      "Image: 2k/773.jpg, Majority Vote: [7]\n",
      "Image: 2k/779.jpg, Majority Vote: [8, 4, 0, 9]\n",
      "Image: 2k/785.jpg, Majority Vote: [5]\n",
      "Image: 2k/791.jpg, Majority Vote: [4, 5, 0, 7]\n",
      "Image: 2k/796.jpg, Majority Vote: [0]\n",
      "Image: 2k/802.jpg, Majority Vote: [5]\n",
      "Image: 2k/808.jpg, Majority Vote: [2, 4, 0, 1]\n",
      "Image: 2k/814.jpg, Majority Vote: [9, 5, 0, 4]\n",
      "Image: 2k/820.jpg, Majority Vote: [5, 4, 0, 3]\n",
      "Image: 2k/826.jpg, Majority Vote: [6, 5, 0, 3]\n",
      "Image: 2k/831.jpg, Majority Vote: [4]\n",
      "Image: 2k/837.jpg, Majority Vote: [5]\n",
      "Image: 2k/849.jpg, Majority Vote: [4]\n",
      "Image: 2k/85.jpg, Majority Vote: [2, 4, 0, 11]\n",
      "Image: 2k/861.jpg, Majority Vote: [1]\n",
      "Image: 2k/872.jpg, Majority Vote: [5]\n",
      "Image: 2k/878.jpg, Majority Vote: [1, 4, 0, 7]\n",
      "Image: 2k/884.jpg, Majority Vote: [3, 5, 0, 9]\n",
      "Image: 2k/890.jpg, Majority Vote: [1, 4, 0, 6]\n",
      "Image: 2k/896.jpg, Majority Vote: [6, 5, 0, 9]\n",
      "Image: 2k/907.jpg, Majority Vote: [4, 7, 0, 11]\n",
      "Image: 2k/91.jpg, Majority Vote: [9, 7, 0, 4]\n",
      "Image: 2k/913.jpg, Majority Vote: [5, 4, 0, 2]\n",
      "Image: 2k/919.jpg, Majority Vote: [3, 5, 0, 2]\n",
      "Image: 2k/925.jpg, Majority Vote: [8, 4, 0, 7]\n",
      "Image: 2k/931.jpg, Majority Vote: [0]\n",
      "Image: 2k/936.jpg, Majority Vote: [4, 7, 0, 6]\n",
      "Image: 2k/954.jpg, Majority Vote: [2, 4, 0, 3]\n",
      "Image: 2k/960.jpg, Majority Vote: [5, 9, 0, 8]\n",
      "Image: 2k/966.jpg, Majority Vote: [2, 4, 0, 6]\n",
      "Image: 2k/971.jpg, Majority Vote: [9]\n",
      "Image: 2k/977.jpg, Majority Vote: [9]\n",
      "Image: 2k/983.jpg, Majority Vote: [1, 4, 0, 3]\n",
      "Image: 2k/989.jpg, Majority Vote: [5]\n",
      "Image: 2k/995.jpg, Majority Vote: [4]\n",
      "Image: 2kf/1001.jpg, Majority Vote: [5, 4, 0, 3]\n",
      "Image: 2kf/1006.jpg, Majority Vote: [5, 4, 0, 1]\n",
      "Image: 2kf/1012.jpg, Majority Vote: [4]\n",
      "Image: 2kf/1018.jpg, Majority Vote: [5, 4, 0, 1]\n",
      "Image: 2kf/102.jpg, Majority Vote: [5]\n",
      "Image: 2kf/1024.jpg, Majority Vote: [2, 4, 0, 3]\n",
      "Image: 2kf/1030.jpg, Majority Vote: [2, 4, 0, 9]\n",
      "Image: 2kf/1036.jpg, Majority Vote: [8, 7, 0, 6]\n",
      "Image: 2kf/1041.jpg, Majority Vote: [3, 5, 0, 2]\n",
      "Image: 2kf/1047.jpg, Majority Vote: [3, 4, 0, 5]\n",
      "Image: 2kf/1053.jpg, Majority Vote: [11, 7, 0, 10]\n",
      "Image: 2kf/1059.jpg, Majority Vote: [7]\n",
      "Image: 2kf/1065.jpg, Majority Vote: [6, 7, 0, 1]\n",
      "Image: 2kf/1071.jpg, Majority Vote: [11, 5, 0, 3]\n",
      "Image: 2kf/1076.jpg, Majority Vote: [0]\n",
      "Image: 2kf/108.jpg, Majority Vote: [1, 4, 0, 6]\n",
      "Image: 2kf/1082.jpg, Majority Vote: [11, 7, 0, 1]\n",
      "Image: 2kf/1088.jpg, Majority Vote: [9, 5, 0, 1]\n",
      "Image: 2kf/1094.jpg, Majority Vote: [0]\n",
      "Image: 2kf/1100.jpg, Majority Vote: [9, 4, 0, 6]\n",
      "Image: 2kf/1106.jpg, Majority Vote: [9]\n",
      "Image: 2kf/1111.jpg, Majority Vote: [6, 4, 0, 2]\n",
      "Image: 2kf/1117.jpg, Majority Vote: [2, 5, 0, 10]\n",
      "Image: 2kf/1123.jpg, Majority Vote: [5]\n",
      "Image: 2kf/1129.jpg, Majority Vote: [2, 4, 0, 10]\n",
      "Image: 2kf/1135.jpg, Majority Vote: [9, 4, 0, 1]\n",
      "Image: 2kf/114.jpg, Majority Vote: [1, 4, 0, 10]\n",
      "Image: 2kf/1141.jpg, Majority Vote: [9]\n",
      "Image: 2kf/1146.jpg, Majority Vote: [1, 4, 0, 10]\n",
      "Image: 2kf/1152.jpg, Majority Vote: [3, 4, 0, 5]\n",
      "Image: 2kf/1158.jpg, Majority Vote: [8, 5, 0, 7]\n",
      "Image: 2kf/1164.jpg, Majority Vote: [4, 5, 0, 2]\n",
      "Image: 2kf/1170.jpg, Majority Vote: [1, 7, 0, 5]\n",
      "Image: 2kf/1176.jpg, Majority Vote: [3, 7, 0, 11]\n",
      "Image: 2kf/1181.jpg, Majority Vote: [5]\n",
      "Image: 2kf/1187.jpg, Majority Vote: [0]\n",
      "Image: 2kf/1193.jpg, Majority Vote: [9, 5, 0, 1]\n",
      "Image: 2kf/1199.jpg, Majority Vote: [11, 7, 0, 1]\n",
      "Image: 2kf/120.jpg, Majority Vote: [6, 4, 0, 9]\n",
      "Image: 2kf/1205.jpg, Majority Vote: [1, 4, 0, 5]\n",
      "Image: 2kf/1211.jpg, Majority Vote: [2]\n",
      "Image: 2kf/1216.jpg, Majority Vote: [2]\n",
      "Image: 2kf/1222.jpg, Majority Vote: [3, 4, 0, 1]\n",
      "Image: 2kf/1228.jpg, Majority Vote: [9, 4, 0, 2]\n",
      "Image: 2kf/1234.jpg, Majority Vote: [11, 4, 0, 6]\n",
      "Image: 2kf/1240.jpg, Majority Vote: [7, 5, 0, 11]\n",
      "Image: 2kf/1246.jpg, Majority Vote: [0]\n",
      "Image: 2kf/1251.jpg, Majority Vote: [9, 4, 0, 11]\n",
      "Image: 2kf/1257.jpg, Majority Vote: [10, 5, 0, 2]\n",
      "Image: 2kf/126.jpg, Majority Vote: [5]\n",
      "Image: 2kf/1263.jpg, Majority Vote: [2, 9, 0, 7]\n",
      "Image: 2kf/1269.jpg, Majority Vote: [1, 5, 0, 9]\n",
      "Image: 2kf/1275.jpg, Majority Vote: [9, 5, 0, 8]\n",
      "Image: 2kf/1281.jpg, Majority Vote: [9, 7, 0, 2]\n",
      "Image: 2kf/1286.jpg, Majority Vote: [11]\n",
      "Image: 2kf/1292.jpg, Majority Vote: [1, 7, 0, 6]\n",
      "Image: 2kf/1298.jpg, Majority Vote: [2, 9, 0, 4]\n",
      "Image: 2kf/1304.jpg, Majority Vote: [4]\n",
      "Image: 2kf/131.jpg, Majority Vote: [7, 5, 0, 8]\n",
      "Image: 2kf/1310.jpg, Majority Vote: [11, 4, 0, 8]\n",
      "Image: 2kf/1316.jpg, Majority Vote: [5, 4, 0, 1]\n",
      "Image: 2kf/1321.jpg, Majority Vote: [10, 4, 0, 8]\n",
      "Image: 2kf/1327.jpg, Majority Vote: [7, 5, 0, 4]\n",
      "Image: 2kf/1333.jpg, Majority Vote: [11, 7, 0, 6]\n",
      "Image: 2kf/1339.jpg, Majority Vote: [5]\n",
      "Image: 2kf/1345.jpg, Majority Vote: [3, 4, 0, 5]\n",
      "Image: 2kf/1351.jpg, Majority Vote: [0]\n",
      "Image: 2kf/1356.jpg, Majority Vote: [11, 5, 0, 6]\n",
      "Image: 2kf/1362.jpg, Majority Vote: [9, 4, 0, 5]\n",
      "Image: 2kf/1368.jpg, Majority Vote: [11, 5, 0, 4]\n",
      "Image: 2kf/137.jpg, Majority Vote: [6, 9, 0, 1]\n",
      "Image: 2kf/1374.jpg, Majority Vote: [7]\n",
      "Image: 2kf/1380.jpg, Majority Vote: [5]\n",
      "Image: 2kf/1386.jpg, Majority Vote: [1, 4, 0, 5]\n",
      "Image: 2kf/1391.jpg, Majority Vote: [1, 4, 0, 6]\n",
      "Image: 2kf/1397.jpg, Majority Vote: [6, 9, 0, 3]\n",
      "Image: 2kf/1403.jpg, Majority Vote: [11]\n",
      "Image: 2kf/1409.jpg, Majority Vote: [7]\n",
      "Image: 2kf/1415.jpg, Majority Vote: [6, 5, 0, 1]\n",
      "Image: 2kf/1421.jpg, Majority Vote: [3, 5, 0, 4]\n",
      "Image: 2kf/1426.jpg, Majority Vote: [11, 4, 0, 8]\n",
      "Image: 2kf/143.jpg, Majority Vote: [6, 7, 0, 1]\n",
      "Image: 2kf/1432.jpg, Majority Vote: [5]\n",
      "Image: 2kf/1438.jpg, Majority Vote: [4]\n",
      "Image: 2kf/1444.jpg, Majority Vote: [10, 4, 0, 5]\n",
      "Image: 2kf/1450.jpg, Majority Vote: [8, 4, 0, 9]\n",
      "Image: 2kf/1456.jpg, Majority Vote: [5, 4, 0, 2]\n",
      "Image: 2kf/1461.jpg, Majority Vote: [7]\n",
      "Image: 2kf/1467.jpg, Majority Vote: [11, 7, 0, 1]\n",
      "Image: 2kf/1473.jpg, Majority Vote: [2, 4, 0, 11]\n",
      "Image: 2kf/1479.jpg, Majority Vote: [6, 5, 0, 2]\n",
      "Image: 2kf/1485.jpg, Majority Vote: [9]\n",
      "Image: 2kf/149.jpg, Majority Vote: [3, 5, 0, 7]\n",
      "Image: 2kf/1491.jpg, Majority Vote: [0]\n",
      "Image: 2kf/1496.jpg, Majority Vote: [11, 4, 0, 10]\n",
      "Image: 2kf/15.jpg, Majority Vote: [6]\n",
      "Image: 2kf/1502.jpg, Majority Vote: [0]\n",
      "Image: 2kf/1508.jpg, Majority Vote: [9, 7, 0, 10]\n",
      "Image: 2kf/1514.jpg, Majority Vote: [10, 4, 0, 3]\n",
      "Image: 2kf/1520.jpg, Majority Vote: [11, 7, 0, 5]\n",
      "Image: 2kf/1526.jpg, Majority Vote: [2, 7, 0, 3]\n",
      "Image: 2kf/1531.jpg, Majority Vote: [6, 9, 0, 1]\n",
      "Image: 2kf/1537.jpg, Majority Vote: [10, 4, 0, 8]\n",
      "Image: 2kf/1543.jpg, Majority Vote: [3, 5, 0, 4]\n",
      "Image: 2kf/1549.jpg, Majority Vote: [3, 4, 0, 7]\n",
      "Image: 2kf/155.jpg, Majority Vote: [2, 4, 0, 5]\n",
      "Image: 2kf/1555.jpg, Majority Vote: [1, 7, 0, 5]\n",
      "Image: 2kf/1561.jpg, Majority Vote: [11]\n",
      "Image: 2kf/1566.jpg, Majority Vote: [0]\n",
      "Image: 2kf/1572.jpg, Majority Vote: [2, 5, 0, 9]\n",
      "Image: 2kf/1578.jpg, Majority Vote: [5]\n",
      "Image: 2kf/1584.jpg, Majority Vote: [1, 5, 0, 6]\n",
      "Image: 2kf/1590.jpg, Majority Vote: [2, 4, 0, 9]\n",
      "Image: 2kf/1596.jpg, Majority Vote: [9, 4, 0, 5]\n",
      "Image: 2kf/1601.jpg, Majority Vote: [7]\n",
      "Image: 2kf/1607.jpg, Majority Vote: [5, 4, 0, 10]\n",
      "Image: 2kf/161.jpg, Majority Vote: [3, 5, 0, 11]\n",
      "Image: 2kf/1613.jpg, Majority Vote: [1, 4, 0, 11]\n",
      "Image: 2kf/1619.jpg, Majority Vote: [1, 5, 0, 6]\n",
      "Image: 2kf/1625.jpg, Majority Vote: [6, 7, 0, 1]\n",
      "Image: 2kf/1631.jpg, Majority Vote: [7, 5, 0, 9]\n",
      "Image: 2kf/1636.jpg, Majority Vote: [9, 0]\n",
      "Image: 2kf/1642.jpg, Majority Vote: [3, 5, 0, 7]\n",
      "Image: 2kf/1648.jpg, Majority Vote: [5, 4, 0, 2]\n",
      "Image: 2kf/1654.jpg, Majority Vote: [2, 7, 0, 4]\n",
      "Image: 2kf/166.jpg, Majority Vote: [7, 4, 0, 2]\n",
      "Image: 2kf/1660.jpg, Majority Vote: [1, 4, 0, 2]\n",
      "Image: 2kf/1666.jpg, Majority Vote: [7]\n",
      "Image: 2kf/1671.jpg, Majority Vote: [5]\n",
      "Image: 2kf/1677.jpg, Majority Vote: [6, 5, 0, 11]\n",
      "Image: 2kf/1683.jpg, Majority Vote: [9, 7, 0, 1]\n",
      "Image: 2kf/1689.jpg, Majority Vote: [1, 5, 0, 10]\n",
      "Image: 2kf/1695.jpg, Majority Vote: [11, 4, 0, 1]\n",
      "Image: 2kf/1701.jpg, Majority Vote: [4]\n",
      "Image: 2kf/1706.jpg, Majority Vote: [7, 5, 0, 8]\n",
      "Image: 2kf/1712.jpg, Majority Vote: [6, 4, 0, 7]\n",
      "Image: 2kf/1718.jpg, Majority Vote: [1, 4, 0, 6]\n",
      "Image: 2kf/172.jpg, Majority Vote: [0]\n",
      "Image: 2kf/1724.jpg, Majority Vote: [11, 4, 0, 6]\n",
      "Image: 2kf/1730.jpg, Majority Vote: [2, 5, 0, 10]\n",
      "Image: 2kf/1736.jpg, Majority Vote: [3, 4, 0, 9]\n",
      "Image: 2kf/1741.jpg, Majority Vote: [6, 7, 0, 5]\n",
      "Image: 2kf/1747.jpg, Majority Vote: [1, 9, 0, 6]\n",
      "Image: 2kf/1753.jpg, Majority Vote: [11, 5, 0, 6]\n",
      "Image: 2kf/1759.jpg, Majority Vote: [5]\n",
      "Image: 2kf/1765.jpg, Majority Vote: [7]\n",
      "Image: 2kf/1771.jpg, Majority Vote: [1, 7, 0, 9]\n",
      "Image: 2kf/1776.jpg, Majority Vote: [5]\n",
      "Image: 2kf/178.jpg, Majority Vote: [6, 4, 0, 2]\n",
      "Image: 2kf/1782.jpg, Majority Vote: [4]\n",
      "Image: 2kf/1788.jpg, Majority Vote: [9, 4, 0, 3]\n",
      "Image: 2kf/1794.jpg, Majority Vote: [0]\n",
      "Image: 2kf/1800.jpg, Majority Vote: [5]\n",
      "Image: 2kf/1806.jpg, Majority Vote: [6, 7, 0, 9]\n",
      "Image: 2kf/1811.jpg, Majority Vote: [2, 4, 0, 6]\n",
      "Image: 2kf/1817.jpg, Majority Vote: [9, 7, 0, 4]\n",
      "Image: 2kf/1823.jpg, Majority Vote: [11]\n",
      "Image: 2kf/1828.jpg, Majority Vote: [0]\n",
      "Image: 2kf/1833.jpg, Majority Vote: [0, 5]\n",
      "Image: 2kf/1838.jpg, Majority Vote: [9]\n",
      "Image: 2kf/184.jpg, Majority Vote: [8, 4, 0, 6]\n",
      "Image: 2kf/1843.jpg, Majority Vote: [10, 4, 0, 8]\n",
      "Image: 2kf/1848.jpg, Majority Vote: [9, 4, 0, 1]\n",
      "Image: 2kf/1853.jpg, Majority Vote: [4, 5, 0, 7]\n",
      "Image: 2kf/1858.jpg, Majority Vote: [1, 4, 0, 2]\n",
      "Image: 2kf/190.jpg, Majority Vote: [0]\n",
      "Image: 2kf/196.jpg, Majority Vote: [6, 9, 0, 5]\n",
      "Image: 2kf/201.jpg, Majority Vote: [5, 4, 0, 8]\n",
      "Image: 2kf/207.jpg, Majority Vote: [4]\n",
      "Image: 2kf/21.jpg, Majority Vote: [3, 5, 0, 4]\n",
      "Image: 2kf/213.jpg, Majority Vote: [5, 7, 0, 2]\n",
      "Image: 2kf/219.jpg, Majority Vote: [2, 4, 0, 3]\n",
      "Image: 2kf/225.jpg, Majority Vote: [2, 5, 0, 3]\n",
      "Image: 2kf/231.jpg, Majority Vote: [8, 4, 0, 7]\n",
      "Image: 2kf/236.jpg, Majority Vote: [5]\n",
      "Image: 2kf/242.jpg, Majority Vote: [9]\n",
      "Image: 2kf/248.jpg, Majority Vote: [9, 7, 0, 6]\n",
      "Image: 2kf/254.jpg, Majority Vote: [3, 9, 0, 4]\n",
      "Image: 2kf/26.jpg, Majority Vote: [8, 4, 0, 9]\n",
      "Image: 2kf/260.jpg, Majority Vote: [5, 4, 0, 6]\n",
      "Image: 2kf/266.jpg, Majority Vote: [5, 4, 0, 1]\n",
      "Image: 2kf/271.jpg, Majority Vote: [4, 7, 0, 11]\n",
      "Image: 2kf/277.jpg, Majority Vote: [9, 5, 0, 10]\n",
      "Image: 2kf/283.jpg, Majority Vote: [9, 4, 0, 6]\n",
      "Image: 2kf/289.jpg, Majority Vote: [6]\n",
      "Image: 2kf/295.jpg, Majority Vote: [7, 4, 0, 5]\n",
      "Image: 2kf/3.jpg, Majority Vote: [1, 5, 0, 10]\n",
      "Image: 2kf/301.jpg, Majority Vote: [3]\n",
      "Image: 2kf/306.jpg, Majority Vote: [8, 9, 0, 5]\n",
      "Image: 2kf/312.jpg, Majority Vote: [0]\n",
      "Image: 2kf/318.jpg, Majority Vote: [4, 9, 0, 3]\n",
      "Image: 2kf/32.jpg, Majority Vote: [3]\n",
      "Image: 2kf/324.jpg, Majority Vote: [6, 5, 0, 8]\n",
      "Image: 2kf/330.jpg, Majority Vote: [5]\n",
      "Image: 2kf/336.jpg, Majority Vote: [3, 9, 0, 6]\n",
      "Image: 2kf/341.jpg, Majority Vote: [11, 4, 0, 2]\n",
      "Image: 2kf/347.jpg, Majority Vote: [7]\n",
      "Image: 2kf/353.jpg, Majority Vote: [7, 9, 0, 11]\n",
      "Image: 2kf/359.jpg, Majority Vote: [0]\n",
      "Image: 2kf/365.jpg, Majority Vote: [6, 4, 0, 2]\n",
      "Image: 2kf/371.jpg, Majority Vote: [4, 7, 0, 10]\n",
      "Image: 2kf/376.jpg, Majority Vote: [9]\n",
      "Image: 2kf/38.jpg, Majority Vote: [4, 7, 0, 8]\n",
      "Image: 2kf/382.jpg, Majority Vote: [1, 7, 0, 9]\n",
      "Image: 2kf/388.jpg, Majority Vote: [2, 4, 0, 3]\n",
      "Image: 2kf/394.jpg, Majority Vote: [0]\n",
      "Image: 2kf/400.jpg, Majority Vote: [4]\n",
      "Image: 2kf/406.jpg, Majority Vote: [0]\n",
      "Image: 2kf/411.jpg, Majority Vote: [3, 4, 0, 7]\n",
      "Image: 2kf/417.jpg, Majority Vote: [11]\n",
      "Image: 2kf/423.jpg, Majority Vote: [6, 5, 0, 4]\n",
      "Image: 2kf/429.jpg, Majority Vote: [11, 5, 0, 4]\n",
      "Image: 2kf/435.jpg, Majority Vote: [3, 7, 0, 9]\n",
      "Image: 2kf/44.jpg, Majority Vote: [3]\n",
      "Image: 2kf/441.jpg, Majority Vote: [5, 7, 0, 4]\n",
      "Image: 2kf/446.jpg, Majority Vote: [0]\n",
      "Image: 2kf/452.jpg, Majority Vote: [1, 4, 0, 2]\n",
      "Image: 2kf/458.jpg, Majority Vote: [6, 4, 0, 5]\n",
      "Image: 2kf/464.jpg, Majority Vote: [8, 7, 0, 2]\n",
      "Image: 2kf/470.jpg, Majority Vote: [2, 4, 0, 11]\n",
      "Image: 2kf/476.jpg, Majority Vote: [1, 9, 0, 5]\n",
      "Image: 2kf/481.jpg, Majority Vote: [1, 4, 0, 2]\n",
      "Image: 2kf/487.jpg, Majority Vote: [2, 5, 0, 10]\n",
      "Image: 2kf/493.jpg, Majority Vote: [11, 4, 0, 5]\n",
      "Image: 2kf/499.jpg, Majority Vote: [11]\n",
      "Image: 2kf/50.jpg, Majority Vote: [5]\n",
      "Image: 2kf/505.jpg, Majority Vote: [0]\n",
      "Image: 2kf/511.jpg, Majority Vote: [2, 4, 0, 1]\n",
      "Image: 2kf/516.jpg, Majority Vote: [0]\n",
      "Image: 2kf/522.jpg, Majority Vote: [11]\n",
      "Image: 2kf/528.jpg, Majority Vote: [8, 4, 0, 5]\n",
      "Image: 2kf/534.jpg, Majority Vote: [0]\n",
      "Image: 2kf/540.jpg, Majority Vote: [5]\n",
      "Image: 2kf/546.jpg, Majority Vote: [9, 4, 0, 8]\n",
      "Image: 2kf/551.jpg, Majority Vote: [7, 4, 0, 6]\n",
      "Image: 2kf/557.jpg, Majority Vote: [9, 4, 0, 6]\n",
      "Image: 2kf/56.jpg, Majority Vote: [8, 7, 0, 4]\n",
      "Image: 2kf/563.jpg, Majority Vote: [4, 5, 0, 1]\n",
      "Image: 2kf/569.jpg, Majority Vote: [2]\n",
      "Image: 2kf/575.jpg, Majority Vote: [5, 9, 0, 11]\n",
      "Image: 2kf/581.jpg, Majority Vote: [0]\n",
      "Image: 2kf/586.jpg, Majority Vote: [7, 5, 0, 11]\n",
      "Image: 2kf/592.jpg, Majority Vote: [6, 4, 0, 5]\n",
      "Image: 2kf/598.jpg, Majority Vote: [4]\n",
      "Image: 2kf/604.jpg, Majority Vote: [7, 5, 0, 9]\n",
      "Image: 2kf/61.jpg, Majority Vote: [5, 7, 0, 4]\n",
      "Image: 2kf/610.jpg, Majority Vote: [7]\n",
      "Image: 2kf/616.jpg, Majority Vote: [11, 9, 0, 6]\n",
      "Image: 2kf/621.jpg, Majority Vote: [5, 7, 0, 11]\n",
      "Image: 2kf/627.jpg, Majority Vote: [5, 7, 0, 6]\n",
      "Image: 2kf/633.jpg, Majority Vote: [9, 5, 0, 6]\n",
      "Image: 2kf/639.jpg, Majority Vote: [7]\n",
      "Image: 2kf/645.jpg, Majority Vote: [6]\n",
      "Image: 2kf/651.jpg, Majority Vote: [2, 4, 0, 8]\n",
      "Image: 2kf/656.jpg, Majority Vote: [2, 5, 0, 4]\n",
      "Image: 2kf/662.jpg, Majority Vote: [0]\n",
      "Image: 2kf/668.jpg, Majority Vote: [0]\n",
      "Image: 2kf/67.jpg, Majority Vote: [5, 4, 0, 2]\n",
      "Image: 2kf/674.jpg, Majority Vote: [3, 9, 0, 5]\n",
      "Image: 2kf/680.jpg, Majority Vote: [5, 4, 0, 11]\n",
      "Image: 2kf/686.jpg, Majority Vote: [6, 5, 0, 4]\n",
      "Image: 2kf/691.jpg, Majority Vote: [5, 9, 0, 4]\n",
      "Image: 2kf/697.jpg, Majority Vote: [1, 5, 0, 9]\n",
      "Image: 2kf/703.jpg, Majority Vote: [3, 7, 0, 9]\n",
      "Image: 2kf/709.jpg, Majority Vote: [11, 5, 0, 3]\n",
      "Image: 2kf/715.jpg, Majority Vote: [5, 4, 0, 6]\n",
      "Image: 2kf/721.jpg, Majority Vote: [2, 7, 0, 6]\n",
      "Image: 2kf/726.jpg, Majority Vote: [0]\n",
      "Image: 2kf/73.jpg, Majority Vote: [2, 4, 0, 11]\n",
      "Image: 2kf/732.jpg, Majority Vote: [9]\n",
      "Image: 2kf/738.jpg, Majority Vote: [0]\n",
      "Image: 2kf/744.jpg, Majority Vote: [2, 7, 0, 11]\n",
      "Image: 2kf/750.jpg, Majority Vote: [2]\n",
      "Image: 2kf/756.jpg, Majority Vote: [9, 4, 0, 5]\n",
      "Image: 2kf/761.jpg, Majority Vote: [4]\n",
      "Image: 2kf/767.jpg, Majority Vote: [7]\n",
      "Image: 2kf/773.jpg, Majority Vote: [1, 4, 0, 3]\n",
      "Image: 2kf/779.jpg, Majority Vote: [7]\n",
      "Image: 2kf/785.jpg, Majority Vote: [6, 5, 0, 9]\n",
      "Image: 2kf/79.jpg, Majority Vote: [0]\n",
      "Image: 2kf/791.jpg, Majority Vote: [9, 7, 0, 8]\n",
      "Image: 2kf/796.jpg, Majority Vote: [0]\n",
      "Image: 2kf/802.jpg, Majority Vote: [8, 5, 0, 9]\n",
      "Image: 2kf/808.jpg, Majority Vote: [7, 5, 0, 8]\n",
      "Image: 2kf/814.jpg, Majority Vote: [2, 9, 0, 11]\n",
      "Image: 2kf/820.jpg, Majority Vote: [2, 5, 0, 9]\n",
      "Image: 2kf/826.jpg, Majority Vote: [11, 4, 0, 8]\n",
      "Image: 2kf/831.jpg, Majority Vote: [9]\n",
      "Image: 2kf/837.jpg, Majority Vote: [5, 9, 0, 10]\n",
      "Image: 2kf/843.jpg, Majority Vote: [4]\n",
      "Image: 2kf/849.jpg, Majority Vote: [2]\n",
      "Image: 2kf/85.jpg, Majority Vote: [0]\n",
      "Image: 2kf/855.jpg, Majority Vote: [0]\n",
      "Image: 2kf/861.jpg, Majority Vote: [0]\n",
      "Image: 2kf/866.jpg, Majority Vote: [6, 4, 0, 7]\n",
      "Image: 2kf/872.jpg, Majority Vote: [5, 7, 0, 1]\n",
      "Image: 2kf/878.jpg, Majority Vote: [0]\n",
      "Image: 2kf/884.jpg, Majority Vote: [8, 4, 0, 1]\n",
      "Image: 2kf/890.jpg, Majority Vote: [0]\n",
      "Image: 2kf/896.jpg, Majority Vote: [2, 4, 0, 6]\n",
      "Image: 2kf/9.jpg, Majority Vote: [0]\n",
      "Image: 2kf/901.jpg, Majority Vote: [7]\n",
      "Image: 2kf/907.jpg, Majority Vote: [0]\n",
      "Image: 2kf/91.jpg, Majority Vote: [11, 5, 0, 9]\n",
      "Image: 2kf/913.jpg, Majority Vote: [2, 5, 0, 7]\n",
      "Image: 2kf/919.jpg, Majority Vote: [2, 9, 0, 11]\n",
      "Image: 2kf/925.jpg, Majority Vote: [8, 5, 0, 3]\n",
      "Image: 2kf/931.jpg, Majority Vote: [6, 5, 0, 2]\n",
      "Image: 2kf/936.jpg, Majority Vote: [4, 5, 0, 10]\n",
      "Image: 2kf/942.jpg, Majority Vote: [6]\n",
      "Image: 2kf/948.jpg, Majority Vote: [5]\n",
      "Image: 2kf/954.jpg, Majority Vote: [0]\n",
      "Image: 2kf/96.jpg, Majority Vote: [6, 9, 0, 2]\n",
      "Image: 2kf/960.jpg, Majority Vote: [1, 5, 0, 2]\n",
      "Image: 2kf/966.jpg, Majority Vote: [7, 4, 0, 2]\n",
      "Image: 2kf/971.jpg, Majority Vote: [7, 4, 0, 8]\n",
      "Image: 2kf/977.jpg, Majority Vote: [7]\n",
      "Image: 2kf/983.jpg, Majority Vote: [11, 7, 0, 6]\n",
      "Image: 2kf/989.jpg, Majority Vote: [0]\n",
      "Image: 2kf/995.jpg, Majority Vote: [5, 7, 0, 11]\n",
      "150/150 [==============================] - 3s 20ms/step - loss: 0.7352 - accuracy: 0.8030\n",
      "150/150 [==============================] - 3s 18ms/step - loss: 1.8571 - accuracy: 0.2098\n",
      "150/150 [==============================] - 3s 18ms/step - loss: nan - accuracy: 0.0861\n",
      "150/150 [==============================] - 3s 20ms/step - loss: 0.1145 - accuracy: 0.9692\n",
      "VGG16 Test accuracy: 80.30%\n",
      "ResNet50 Test accuracy: 20.98%\n",
      "InceptionV3 Test accuracy: 8.61%\n",
      "MobileNetV2 Test accuracy: 96.92%\n",
      "Best Individual Model: MobileNetV2\n"
     ]
    }
   ],
   "source": [
    "from collections import Counter\n",
    "\n",
    "# Load the test data\n",
    "test_generator = create_data_generator(test_dir, ImageDataGenerator(rescale=1./255), (224, 224))\n",
    "\n",
    "# Generate predictions for each model\n",
    "vgg16_predictions = vgg16_model.predict(test_generator, steps=len(test_generator))\n",
    "resnet50_predictions = resnet50_model.predict(test_generator, steps=len(test_generator))\n",
    "inceptionv3_predictions = inceptionv3_model.predict(test_generator, steps=len(test_generator))\n",
    "mobilenetv2_predictions = mobilenetv2_model.predict(test_generator, steps=len(test_generator))\n",
    "\n",
    "# Combine predictions using majority voting\n",
    "combined_predictions = []\n",
    "\n",
    "for i in range(len(test_generator.filenames)):\n",
    "    vgg16_pred = np.argmax(vgg16_predictions[i])\n",
    "    resnet50_pred = np.argmax(resnet50_predictions[i])\n",
    "    inceptionv3_pred = np.argmax(inceptionv3_predictions[i])\n",
    "    mobilenetv2_pred = np.argmax(mobilenetv2_predictions[i])\n",
    "\n",
    "    # Perform majority voting\n",
    "    majority_vote = Counter([vgg16_pred, resnet50_pred, inceptionv3_pred, mobilenetv2_pred])\n",
    "    final_prediction = majority_vote.most_common(1)[0][0]\n",
    "\n",
    "    # Print the model with majority vote\n",
    "    models_with_majority = [model_name for model_name, count in majority_vote.items() if count == majority_vote.most_common(1)[0][1]]\n",
    "    print(f\"Image: {test_generator.filenames[i]}, Majority Vote: {models_with_majority}\")\n",
    "\n",
    "    combined_predictions.append(final_prediction)\n",
    "\n",
    "# Evaluate the performance of each individual model\n",
    "vgg16_test_loss, vgg16_test_acc = vgg16_model.evaluate(test_generator, steps=len(test_generator))\n",
    "resnet50_test_loss, resnet50_test_acc = resnet50_model.evaluate(test_generator, steps=len(test_generator))\n",
    "inceptionv3_test_loss, inceptionv3_test_acc = inceptionv3_model.evaluate(test_generator, steps=len(test_generator))\n",
    "mobilenetv2_test_loss, mobilenetv2_test_acc = mobilenetv2_model.evaluate(test_generator, steps=len(test_generator))\n",
    "\n",
    "# Print the individual model accuracies\n",
    "print(f\"VGG16 Test accuracy: {vgg16_test_acc * 100:.2f}%\")\n",
    "print(f\"ResNet50 Test accuracy: {resnet50_test_acc * 100:.2f}%\")\n",
    "print(f\"InceptionV3 Test accuracy: {inceptionv3_test_acc * 100:.2f}%\")\n",
    "print(f\"MobileNetV2 Test accuracy: {mobilenetv2_test_acc * 100:.2f}%\")\n",
    "\n",
    "# Determine the best model based on individual accuracies\n",
    "individual_accuracies = {\n",
    "    'VGG16': vgg16_test_acc,\n",
    "    'ResNet50': resnet50_test_acc,\n",
    "    'InceptionV3': inceptionv3_test_acc,\n",
    "    'MobileNetV2': mobilenetv2_test_acc\n",
    "}\n",
    "\n",
    "best_individual_model = max(individual_accuracies, key=individual_accuracies.get)\n",
    "print(f\"Best Individual Model: {best_individual_model}\")\n",
    "\n",
    "# Determine the best model based on majority voting\n",
    "model_counts = Counter(combined_predictions)\n",
    "best_model_index = model_counts.most_common(1)[0][0]\n",
    "model_index_to_name = {0: 'VGG16', 1: 'ResNet50', 2: 'InceptionV3', 3: 'MobileNetV2'}\n",
    "best_model_name = model_index_to_name.get(best_model_index, 'Unknown')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "3c596f74-46ca-40ca-818e-ec4cec376c91",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Gradient Boosting Ensemble Test Accuracy: 9.58%\n",
      "150/150 [==============================] - 4s 23ms/step - loss: 0.7353 - accuracy: 0.8030\n",
      "150/150 [==============================] - 3s 22ms/step - loss: 1.8571 - accuracy: 0.2098\n",
      "150/150 [==============================] - 3s 20ms/step - loss: nan - accuracy: 0.0861\n",
      "150/150 [==============================] - 3s 18ms/step - loss: 0.1145 - accuracy: 0.9692\n",
      "VGG16 Test accuracy: 80.30%\n",
      "ResNet50 Test accuracy: 20.98%\n",
      "InceptionV3 Test accuracy: 8.61%\n",
      "MobileNetV2 Test accuracy: 96.92%\n",
      "Gradient Boosting Ensemble Test Accuracy: 9.58%\n",
      "Best Individual Model: MobileNetV2\n"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import GradientBoostingClassifier\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.model_selection import train_test_split\n",
    "import numpy as np\n",
    "from collections import Counter\n",
    "\n",
    "# Combine predictions into a matrix\n",
    "combined_predictions_matrix = np.array([vgg16_predictions.argmax(axis=1),\n",
    "                                       resnet50_predictions.argmax(axis=1),\n",
    "                                       inceptionv3_predictions.argmax(axis=1),\n",
    "                                       mobilenetv2_predictions.argmax(axis=1)]).T\n",
    "\n",
    "# Get true labels from the test generator\n",
    "true_labels = vgg16_test_generator.classes\n",
    "\n",
    "# Split the data into training and testing sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(combined_predictions_matrix, true_labels, test_size=0.2, random_state=42)\n",
    "\n",
    "# Create a Gradient Boosting Classifier\n",
    "gb_model = GradientBoostingClassifier(n_estimators=100, learning_rate=0.1, random_state=42)\n",
    "\n",
    "# Train the Gradient Boosting model\n",
    "gb_model.fit(X_train, y_train)\n",
    "\n",
    "# Make predictions on the test set\n",
    "gb_predictions = gb_model.predict(X_test)\n",
    "\n",
    "# Evaluate the performance of the Gradient Boosting Ensemble\n",
    "gb_accuracy = accuracy_score(y_test, gb_predictions)\n",
    "print(f\"Gradient Boosting Ensemble Test Accuracy: {gb_accuracy * 100:.2f}%\")\n",
    "\n",
    "# Evaluate the performance of each individual model\n",
    "vgg16_test_loss, vgg16_test_acc = vgg16_model.evaluate(vgg16_test_generator, steps=len(vgg16_test_generator))\n",
    "resnet50_test_loss, resnet50_test_acc = resnet50_model.evaluate(resnet50_test_generator, steps=len(resnet50_test_generator))\n",
    "inceptionv3_test_loss, inceptionv3_test_acc = inceptionv3_model.evaluate(inceptionv3_test_generator, steps=len(inceptionv3_test_generator))\n",
    "mobilenetv2_test_loss, mobilenetv2_test_acc = mobilenetv2_model.evaluate(mobilenetv2_test_generator, steps=len(mobilenetv2_test_generator))\n",
    "\n",
    "\n",
    "\n",
    "# Print the individual model accuracies\n",
    "print(f\"VGG16 Test accuracy: {vgg16_test_acc * 100:.2f}%\")\n",
    "print(f\"ResNet50 Test accuracy: {resnet50_test_acc * 100:.2f}%\")\n",
    "print(f\"InceptionV3 Test accuracy: {inceptionv3_test_acc * 100:.2f}%\")\n",
    "print(f\"MobileNetV2 Test accuracy: {mobilenetv2_test_acc * 100:.2f}%\")\n",
    "\n",
    "# Combine predictions into a matrix\n",
    "combined_predictions_matrix = np.array([vgg16_predictions.argmax(axis=1),\n",
    "                                       resnet50_predictions.argmax(axis=1),\n",
    "                                       inceptionv3_predictions.argmax(axis=1),\n",
    "                                       mobilenetv2_predictions.argmax(axis=1)]).T\n",
    "\n",
    "\n",
    "# Split the data into training and testing sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(combined_predictions_matrix, true_labels, test_size=0.2, random_state=42)\n",
    "\n",
    "# Create a Gradient Boosting Classifier\n",
    "gb_model = GradientBoostingClassifier(n_estimators=100, learning_rate=0.1, random_state=42)\n",
    "\n",
    "# Train the Gradient Boosting model\n",
    "gb_model.fit(X_train, y_train)\n",
    "\n",
    "# Make predictions on the test set\n",
    "gb_predictions = gb_model.predict(X_test)\n",
    "\n",
    "# Evaluate the performance of the Gradient Boosting Ensemble\n",
    "gb_accuracy = accuracy_score(y_test, gb_predictions)\n",
    "print(f\"Gradient Boosting Ensemble Test Accuracy: {gb_accuracy * 100:.2f}%\")\n",
    "\n",
    "# Determine the best model based on individual accuracies\n",
    "individual_accuracies = {\n",
    "    'VGG16': vgg16_test_acc,\n",
    "    'ResNet50': resnet50_test_acc,\n",
    "    'InceptionV3': inceptionv3_test_acc,\n",
    "    'MobileNetV2': mobilenetv2_test_acc\n",
    "}\n",
    "\n",
    "best_individual_model = max(individual_accuracies, key=individual_accuracies.get)\n",
    "print(f\"Best Individual Model: {best_individual_model}\")\n",
    "\n",
    "# Determine the best model based on the Gradient Boosting Ensemble\n",
    "model_counts = Counter(gb_predictions)\n",
    "best_gb_model = max(model_counts, key=model_counts.get)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "39cbb238-9f7d-4a9f-aea9-2ce9f7722f30",
   "metadata": {},
   "outputs": [],
   "source": [
    "torch.save(mobilenetv2_model, 'chosen_CNN_model_for_app.pt')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "venv",
   "language": "python",
   "name": "venv"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
